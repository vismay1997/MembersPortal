{"version":3,"sources":["importcss/plugin.js"],"names":["type","global","tinymce","util","Tools","resolve","global$1","global$2","global$3","global$4","getSelectorConverter","editor","getParam","shouldAppend","isArray","value","t","x","Array","prototype","isPrototypeOf","constructor","name","String","nativePush","push","bind","xs","f","r","i","len","length","Error","apply","flatten","map","compileFilter","filter","indexOf","RegExp","test","getSelectors","doc","fileFilter","selectors","contentCSSUrls","append","styleSheet","imported","rules","url","cacheSuffix","href","replace","skin","getSkin","skinUrlBase","getSkinUrl","skinUrl","documentBaseURI","toAbsolute","baseURL","contentSkinUrlPart","inline","isSkinContentCss","each","imports","cssRules","e","cssRule","rule","selectorText","isCssPageRule","split","selector","trim","contentCSS","styleSheets","defaultConvertSelectorToFormat","format","exec","elementName","classes","substr","join","inlineSelectorElements","makeMap","title","schema","getTextBlockElements","block","getBlockElements","toLowerCase","shouldMergeClasses","attributes","class","isExclusiveMode","group","shouldImportExclusive","setup","on","_e","model","ungroupedOrder","groupOrder","groups","addItemToGroup","groupTitle","itemInfo","addItem","toFormats","g","items","concat","generate","globallyUniqueSelectors","selectorFilter","getSelectorFilter","extend","original","item","text","menu","compileUserDefinedGroups","getCssGroups","processSelector","isUniqueSelector","markUniqueSelector","plugin","selector_converter","call","convertSelectorToFormat","plugins","importcss","formatName","DOM","uniqueId","formatter","register","getDoc","getFileFilter","selectorGroups","grep","getGroupsBySelector","menuItem","fire","add","get"],"mappings":"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","file":"plugin.js","sourcesContent":["/**\n * Copyright (c) Tiny Technologies, Inc. All rights reserved.\n * Licensed under the LGPL or a commercial license.\n * For LGPL see License.txt in the project root for license information.\n * For commercial licenses see https://www.tiny.cloud/\n *\n * Version: 5.6.2 (2020-12-08)\n */\n(function () {\n    'use strict';\n\n    var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.dom.DOMUtils');\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.EditorManager');\n\n    var global$3 = tinymce.util.Tools.resolve('tinymce.Env');\n\n    var global$4 = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    var shouldMergeClasses = function (editor) {\n      return editor.getParam('importcss_merge_classes');\n    };\n    var shouldImportExclusive = function (editor) {\n      return editor.getParam('importcss_exclusive');\n    };\n    var getSelectorConverter = function (editor) {\n      return editor.getParam('importcss_selector_converter');\n    };\n    var getSelectorFilter = function (editor) {\n      return editor.getParam('importcss_selector_filter');\n    };\n    var getCssGroups = function (editor) {\n      return editor.getParam('importcss_groups');\n    };\n    var shouldAppend = function (editor) {\n      return editor.getParam('importcss_append');\n    };\n    var getFileFilter = function (editor) {\n      return editor.getParam('importcss_file_filter');\n    };\n    var getSkin = function (editor) {\n      var skin = editor.getParam('skin');\n      return skin !== false ? skin || 'oxide' : false;\n    };\n    var getSkinUrl = function (editor) {\n      return editor.getParam('skin_url');\n    };\n\n    var typeOf = function (x) {\n      var t = typeof x;\n      if (x === null) {\n        return 'null';\n      } else if (t === 'object' && (Array.prototype.isPrototypeOf(x) || x.constructor && x.constructor.name === 'Array')) {\n        return 'array';\n      } else if (t === 'object' && (String.prototype.isPrototypeOf(x) || x.constructor && x.constructor.name === 'String')) {\n        return 'string';\n      } else {\n        return t;\n      }\n    };\n    var isType = function (type) {\n      return function (value) {\n        return typeOf(value) === type;\n      };\n    };\n    var isArray = isType('array');\n\n    var nativePush = Array.prototype.push;\n    var map = function (xs, f) {\n      var len = xs.length;\n      var r = new Array(len);\n      for (var i = 0; i < len; i++) {\n        var x = xs[i];\n        r[i] = f(x, i);\n      }\n      return r;\n    };\n    var flatten = function (xs) {\n      var r = [];\n      for (var i = 0, len = xs.length; i < len; ++i) {\n        if (!isArray(xs[i])) {\n          throw new Error('Arr.flatten item ' + i + ' was not an array, input: ' + xs);\n        }\n        nativePush.apply(r, xs[i]);\n      }\n      return r;\n    };\n    var bind = function (xs, f) {\n      return flatten(map(xs, f));\n    };\n\n    var generate = function () {\n      var ungroupedOrder = [];\n      var groupOrder = [];\n      var groups = {};\n      var addItemToGroup = function (groupTitle, itemInfo) {\n        if (groups[groupTitle]) {\n          groups[groupTitle].push(itemInfo);\n        } else {\n          groupOrder.push(groupTitle);\n          groups[groupTitle] = [itemInfo];\n        }\n      };\n      var addItem = function (itemInfo) {\n        ungroupedOrder.push(itemInfo);\n      };\n      var toFormats = function () {\n        var groupItems = bind(groupOrder, function (g) {\n          var items = groups[g];\n          return items.length === 0 ? [] : [{\n              title: g,\n              items: items\n            }];\n        });\n        return groupItems.concat(ungroupedOrder);\n      };\n      return {\n        addItemToGroup: addItemToGroup,\n        addItem: addItem,\n        toFormats: toFormats\n      };\n    };\n\n    var removeCacheSuffix = function (url) {\n      var cacheSuffix = global$3.cacheSuffix;\n      if (typeof url === 'string') {\n        url = url.replace('?' + cacheSuffix, '').replace('&' + cacheSuffix, '');\n      }\n      return url;\n    };\n    var isSkinContentCss = function (editor, href) {\n      var skin = getSkin(editor);\n      if (skin) {\n        var skinUrlBase = getSkinUrl(editor);\n        var skinUrl = skinUrlBase ? editor.documentBaseURI.toAbsolute(skinUrlBase) : global$2.baseURL + '/skins/ui/' + skin;\n        var contentSkinUrlPart = global$2.baseURL + '/skins/content/';\n        return href === skinUrl + '/content' + (editor.inline ? '.inline' : '') + '.min.css' || href.indexOf(contentSkinUrlPart) !== -1;\n      }\n      return false;\n    };\n    var compileFilter = function (filter) {\n      if (typeof filter === 'string') {\n        return function (value) {\n          return value.indexOf(filter) !== -1;\n        };\n      } else if (filter instanceof RegExp) {\n        return function (value) {\n          return filter.test(value);\n        };\n      }\n      return filter;\n    };\n    var isCssImportRule = function (rule) {\n      return rule.styleSheet;\n    };\n    var isCssPageRule = function (rule) {\n      return rule.selectorText;\n    };\n    var getSelectors = function (editor, doc, fileFilter) {\n      var selectors = [], contentCSSUrls = {};\n      function append(styleSheet, imported) {\n        var href = styleSheet.href, rules;\n        href = removeCacheSuffix(href);\n        if (!href || !fileFilter(href, imported) || isSkinContentCss(editor, href)) {\n          return;\n        }\n        global$4.each(styleSheet.imports, function (styleSheet) {\n          append(styleSheet, true);\n        });\n        try {\n          rules = styleSheet.cssRules || styleSheet.rules;\n        } catch (e) {\n        }\n        global$4.each(rules, function (cssRule) {\n          if (isCssImportRule(cssRule)) {\n            append(cssRule.styleSheet, true);\n          } else if (isCssPageRule(cssRule)) {\n            global$4.each(cssRule.selectorText.split(','), function (selector) {\n              selectors.push(global$4.trim(selector));\n            });\n          }\n        });\n      }\n      global$4.each(editor.contentCSS, function (url) {\n        contentCSSUrls[url] = true;\n      });\n      if (!fileFilter) {\n        fileFilter = function (href, imported) {\n          return imported || contentCSSUrls[href];\n        };\n      }\n      try {\n        global$4.each(doc.styleSheets, function (styleSheet) {\n          append(styleSheet);\n        });\n      } catch (e) {\n      }\n      return selectors;\n    };\n    var defaultConvertSelectorToFormat = function (editor, selectorText) {\n      var format;\n      var selector = /^(?:([a-z0-9\\-_]+))?(\\.[a-z0-9_\\-\\.]+)$/i.exec(selectorText);\n      if (!selector) {\n        return;\n      }\n      var elementName = selector[1];\n      var classes = selector[2].substr(1).split('.').join(' ');\n      var inlineSelectorElements = global$4.makeMap('a,img');\n      if (selector[1]) {\n        format = { title: selectorText };\n        if (editor.schema.getTextBlockElements()[elementName]) {\n          format.block = elementName;\n        } else if (editor.schema.getBlockElements()[elementName] || inlineSelectorElements[elementName.toLowerCase()]) {\n          format.selector = elementName;\n        } else {\n          format.inline = elementName;\n        }\n      } else if (selector[2]) {\n        format = {\n          inline: 'span',\n          title: selectorText.substr(1),\n          classes: classes\n        };\n      }\n      if (shouldMergeClasses(editor) !== false) {\n        format.classes = classes;\n      } else {\n        format.attributes = { class: classes };\n      }\n      return format;\n    };\n    var getGroupsBySelector = function (groups, selector) {\n      return global$4.grep(groups, function (group) {\n        return !group.filter || group.filter(selector);\n      });\n    };\n    var compileUserDefinedGroups = function (groups) {\n      return global$4.map(groups, function (group) {\n        return global$4.extend({}, group, {\n          original: group,\n          selectors: {},\n          filter: compileFilter(group.filter),\n          item: {\n            text: group.title,\n            menu: []\n          }\n        });\n      });\n    };\n    var isExclusiveMode = function (editor, group) {\n      return group === null || shouldImportExclusive(editor) !== false;\n    };\n    var isUniqueSelector = function (editor, selector, group, globallyUniqueSelectors) {\n      return !(isExclusiveMode(editor, group) ? selector in globallyUniqueSelectors : selector in group.selectors);\n    };\n    var markUniqueSelector = function (editor, selector, group, globallyUniqueSelectors) {\n      if (isExclusiveMode(editor, group)) {\n        globallyUniqueSelectors[selector] = true;\n      } else {\n        group.selectors[selector] = true;\n      }\n    };\n    var convertSelectorToFormat = function (editor, plugin, selector, group) {\n      var selectorConverter;\n      if (group && group.selector_converter) {\n        selectorConverter = group.selector_converter;\n      } else if (getSelectorConverter(editor)) {\n        selectorConverter = getSelectorConverter(editor);\n      } else {\n        selectorConverter = function () {\n          return defaultConvertSelectorToFormat(editor, selector);\n        };\n      }\n      return selectorConverter.call(plugin, selector, group);\n    };\n    var setup = function (editor) {\n      editor.on('init', function (_e) {\n        var model = generate();\n        var globallyUniqueSelectors = {};\n        var selectorFilter = compileFilter(getSelectorFilter(editor));\n        var groups = compileUserDefinedGroups(getCssGroups(editor));\n        var processSelector = function (selector, group) {\n          if (isUniqueSelector(editor, selector, group, globallyUniqueSelectors)) {\n            markUniqueSelector(editor, selector, group, globallyUniqueSelectors);\n            var format = convertSelectorToFormat(editor, editor.plugins.importcss, selector, group);\n            if (format) {\n              var formatName = format.name || global$1.DOM.uniqueId();\n              editor.formatter.register(formatName, format);\n              return global$4.extend({}, {\n                title: format.title,\n                format: formatName\n              });\n            }\n          }\n          return null;\n        };\n        global$4.each(getSelectors(editor, editor.getDoc(), compileFilter(getFileFilter(editor))), function (selector) {\n          if (selector.indexOf('.mce-') === -1) {\n            if (!selectorFilter || selectorFilter(selector)) {\n              var selectorGroups = getGroupsBySelector(groups, selector);\n              if (selectorGroups.length > 0) {\n                global$4.each(selectorGroups, function (group) {\n                  var menuItem = processSelector(selector, group);\n                  if (menuItem) {\n                    model.addItemToGroup(group.title, menuItem);\n                  }\n                });\n              } else {\n                var menuItem = processSelector(selector, null);\n                if (menuItem) {\n                  model.addItem(menuItem);\n                }\n              }\n            }\n          }\n        });\n        var items = model.toFormats();\n        editor.fire('addStyleModifications', {\n          items: items,\n          replace: !shouldAppend(editor)\n        });\n      });\n    };\n\n    var get = function (editor) {\n      var convertSelectorToFormat = function (selectorText) {\n        return defaultConvertSelectorToFormat(editor, selectorText);\n      };\n      return { convertSelectorToFormat: convertSelectorToFormat };\n    };\n\n    function Plugin () {\n      global.add('importcss', function (editor) {\n        setup(editor);\n        return get(editor);\n      });\n    }\n\n    Plugin();\n\n}());\n"]}