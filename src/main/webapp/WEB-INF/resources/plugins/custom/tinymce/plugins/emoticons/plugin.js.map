{"version":3,"sources":["emoticons/plugin.js"],"names":["merger","eq","call","id","global","tinymce","util","Tools","resolve","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","apply","this","Cell","initial","value","get","set","v","merge","old","nu","objects","Array","Error","ret","j","curObject","key","noop","constant","never","always","none","NONE","o","isNone","fold","_s","is","isSome","getOr","getOrThunk","thunk","getOrDie","msg","getOrNull","getOrUndefined","undefined","or","orThunk","map","each","bind","exists","forall","filter","equals","equals_","toArray","toString","some","a","constant_a","self","me","f","elementEq","b","Optional","from","keys","hasOwnProperty$1","obj","props","k","len","tupleMap","r","x","tuple","contains","str","substr","indexOf","global$1","global$2","global$3","ALL_CATEGORY","categoryNameMap","symbols","people","animals_and_nature","food_and_drink","activity","travel_and_places","flags","user","translateCategory","categories","name","getUserDefinedEmoticons","editor","userDefinedEmoticons","getParam","getAppendedEmoticons","keywords","category","initDatabase","databaseUrl","databaseId","all","emojiImagesUrl","getEmotionsImageUrl","getEmoji","lib","start","checkRange","char","replace","match","url","on","load","then","emojis","userEmojis","cats","everything","title","entry","current","concat","push","processEmojis","err","console","log","listAll","hasLoaded","listCategories","waitForLoad","reject","numRetries","interval","setInterval","clearInterval","listCategory","map$1","xs","emojiMatches","emoji","lowerCasePattern","toLowerCase","pred","emojisFrom","list","pattern","maxResults","matches","reachedLimit","max","size","text","icon","patternName","open","database","fn","rate","timer","initialState","results","currentTab","updateFilter","dialogApi","dialogData","getData","candidates","setData","scan","cancel","clearTimeout","throttle","args","_i","setTimeout","searchField","label","type","resultsField","getInitialState","body","tabs","cat","items","initialData","onTabChange","details","newTabName","onChange","onAction","actionData","ch","insertContent","insertEmoticon","close","buttons","primary","windowManager","focus","block","redial","unblock","catch","_err","level","add","pluginUrl","getEmoticonDatabase","suffix","getEmoticonDatabaseUrl","getEmoticonDatabaseId","ui","registry","addButton","tooltip","addMenuItem","register","addAutocompleter","columns","minChars","fetch","autocompleteApi","rng","selection","setRng","hide","init","parser","addAttributeFilter","nodes","each$1","node","attr","setup"],"mappings":"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","file":"plugin.js","sourcesContent":["/**\n * Copyright (c) Tiny Technologies, Inc. All rights reserved.\n * Licensed under the LGPL or a commercial license.\n * For LGPL see License.txt in the project root for license information.\n * For commercial licenses see https://www.tiny.cloud/\n *\n * Version: 5.6.2 (2020-12-08)\n */\n(function () {\n    'use strict';\n\n    var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var DEFAULT_ID = 'tinymce.plugins.emoticons';\n    var getEmoticonDatabase = function (editor) {\n      return editor.getParam('emoticons_database', 'emojis', 'string');\n    };\n    var getEmoticonDatabaseUrl = function (editor, pluginUrl) {\n      var database = getEmoticonDatabase(editor);\n      return editor.getParam('emoticons_database_url', pluginUrl + '/js/' + database + editor.suffix + '.js', 'string');\n    };\n    var getEmoticonDatabaseId = function (editor) {\n      return editor.getParam('emoticons_database_id', DEFAULT_ID, 'string');\n    };\n    var getAppendedEmoticons = function (editor) {\n      return editor.getParam('emoticons_append', {}, 'object');\n    };\n    var getEmotionsImageUrl = function (editor) {\n      return editor.getParam('emoticons_images_url', 'https://twemoji.maxcdn.com/v/13.0.1/72x72/', 'string');\n    };\n\n    var __assign = function () {\n      __assign = Object.assign || function __assign(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s)\n            if (Object.prototype.hasOwnProperty.call(s, p))\n              t[p] = s[p];\n        }\n        return t;\n      };\n      return __assign.apply(this, arguments);\n    };\n\n    var Cell = function (initial) {\n      var value = initial;\n      var get = function () {\n        return value;\n      };\n      var set = function (v) {\n        value = v;\n      };\n      return {\n        get: get,\n        set: set\n      };\n    };\n\n    var hasOwnProperty = Object.prototype.hasOwnProperty;\n    var shallow = function (old, nu) {\n      return nu;\n    };\n    var baseMerge = function (merger) {\n      return function () {\n        var objects = new Array(arguments.length);\n        for (var i = 0; i < objects.length; i++) {\n          objects[i] = arguments[i];\n        }\n        if (objects.length === 0) {\n          throw new Error('Can\\'t merge zero objects');\n        }\n        var ret = {};\n        for (var j = 0; j < objects.length; j++) {\n          var curObject = objects[j];\n          for (var key in curObject) {\n            if (hasOwnProperty.call(curObject, key)) {\n              ret[key] = merger(ret[key], curObject[key]);\n            }\n          }\n        }\n        return ret;\n      };\n    };\n    var merge = baseMerge(shallow);\n\n    var noop = function () {\n    };\n    var constant = function (value) {\n      return function () {\n        return value;\n      };\n    };\n    var never = constant(false);\n    var always = constant(true);\n\n    var none = function () {\n      return NONE;\n    };\n    var NONE = function () {\n      var eq = function (o) {\n        return o.isNone();\n      };\n      var call = function (thunk) {\n        return thunk();\n      };\n      var id = function (n) {\n        return n;\n      };\n      var me = {\n        fold: function (n, _s) {\n          return n();\n        },\n        is: never,\n        isSome: never,\n        isNone: always,\n        getOr: id,\n        getOrThunk: call,\n        getOrDie: function (msg) {\n          throw new Error(msg || 'error: getOrDie called on none.');\n        },\n        getOrNull: constant(null),\n        getOrUndefined: constant(undefined),\n        or: id,\n        orThunk: call,\n        map: none,\n        each: noop,\n        bind: none,\n        exists: never,\n        forall: always,\n        filter: none,\n        equals: eq,\n        equals_: eq,\n        toArray: function () {\n          return [];\n        },\n        toString: constant('none()')\n      };\n      return me;\n    }();\n    var some = function (a) {\n      var constant_a = constant(a);\n      var self = function () {\n        return me;\n      };\n      var bind = function (f) {\n        return f(a);\n      };\n      var me = {\n        fold: function (n, s) {\n          return s(a);\n        },\n        is: function (v) {\n          return a === v;\n        },\n        isSome: always,\n        isNone: never,\n        getOr: constant_a,\n        getOrThunk: constant_a,\n        getOrDie: constant_a,\n        getOrNull: constant_a,\n        getOrUndefined: constant_a,\n        or: self,\n        orThunk: self,\n        map: function (f) {\n          return some(f(a));\n        },\n        each: function (f) {\n          f(a);\n        },\n        bind: bind,\n        exists: bind,\n        forall: bind,\n        filter: function (f) {\n          return f(a) ? me : NONE;\n        },\n        toArray: function () {\n          return [a];\n        },\n        toString: function () {\n          return 'some(' + a + ')';\n        },\n        equals: function (o) {\n          return o.is(a);\n        },\n        equals_: function (o, elementEq) {\n          return o.fold(never, function (b) {\n            return elementEq(a, b);\n          });\n        }\n      };\n      return me;\n    };\n    var from = function (value) {\n      return value === null || value === undefined ? NONE : some(value);\n    };\n    var Optional = {\n      some: some,\n      none: none,\n      from: from\n    };\n\n    var keys = Object.keys;\n    var hasOwnProperty$1 = Object.hasOwnProperty;\n    var each = function (obj, f) {\n      var props = keys(obj);\n      for (var k = 0, len = props.length; k < len; k++) {\n        var i = props[k];\n        var x = obj[i];\n        f(x, i);\n      }\n    };\n    var map = function (obj, f) {\n      return tupleMap(obj, function (x, i) {\n        return {\n          k: i,\n          v: f(x, i)\n        };\n      });\n    };\n    var tupleMap = function (obj, f) {\n      var r = {};\n      each(obj, function (x, i) {\n        var tuple = f(x, i);\n        r[tuple.k] = tuple.v;\n      });\n      return r;\n    };\n    var has = function (obj, key) {\n      return hasOwnProperty$1.call(obj, key);\n    };\n\n    var checkRange = function (str, substr, start) {\n      return substr === '' || str.length >= substr.length && str.substr(start, start + substr.length) === substr;\n    };\n    var contains = function (str, substr) {\n      return str.indexOf(substr) !== -1;\n    };\n    var startsWith = function (str, prefix) {\n      return checkRange(str, prefix, 0);\n    };\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.Resource');\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.util.Delay');\n\n    var global$3 = tinymce.util.Tools.resolve('tinymce.util.Promise');\n\n    var ALL_CATEGORY = 'All';\n    var categoryNameMap = {\n      symbols: 'Symbols',\n      people: 'People',\n      animals_and_nature: 'Animals and Nature',\n      food_and_drink: 'Food and Drink',\n      activity: 'Activity',\n      travel_and_places: 'Travel and Places',\n      objects: 'Objects',\n      flags: 'Flags',\n      user: 'User Defined'\n    };\n    var translateCategory = function (categories, name) {\n      return has(categories, name) ? categories[name] : name;\n    };\n    var getUserDefinedEmoticons = function (editor) {\n      var userDefinedEmoticons = getAppendedEmoticons(editor);\n      return map(userDefinedEmoticons, function (value) {\n        return __assign({\n          keywords: [],\n          category: 'user'\n        }, value);\n      });\n    };\n    var initDatabase = function (editor, databaseUrl, databaseId) {\n      var categories = Cell(Optional.none());\n      var all = Cell(Optional.none());\n      var emojiImagesUrl = getEmotionsImageUrl(editor);\n      var getEmoji = function (lib) {\n        if (startsWith(lib.char, '<img')) {\n          return lib.char.replace(/src=\"([^\"]+)\"/, function (match, url) {\n            return 'src=\"' + emojiImagesUrl + url + '\"';\n          });\n        } else {\n          return lib.char;\n        }\n      };\n      var processEmojis = function (emojis) {\n        var cats = {};\n        var everything = [];\n        each(emojis, function (lib, title) {\n          var entry = {\n            title: title,\n            keywords: lib.keywords,\n            char: getEmoji(lib),\n            category: translateCategory(categoryNameMap, lib.category)\n          };\n          var current = cats[entry.category] !== undefined ? cats[entry.category] : [];\n          cats[entry.category] = current.concat([entry]);\n          everything.push(entry);\n        });\n        categories.set(Optional.some(cats));\n        all.set(Optional.some(everything));\n      };\n      editor.on('init', function () {\n        global$1.load(databaseId, databaseUrl).then(function (emojis) {\n          var userEmojis = getUserDefinedEmoticons(editor);\n          processEmojis(merge(emojis, userEmojis));\n        }, function (err) {\n          console.log('Failed to load emoticons: ' + err);\n          categories.set(Optional.some({}));\n          all.set(Optional.some([]));\n        });\n      });\n      var listCategory = function (category) {\n        if (category === ALL_CATEGORY) {\n          return listAll();\n        }\n        return categories.get().bind(function (cats) {\n          return Optional.from(cats[category]);\n        }).getOr([]);\n      };\n      var listAll = function () {\n        return all.get().getOr([]);\n      };\n      var listCategories = function () {\n        return [ALL_CATEGORY].concat(keys(categories.get().getOr({})));\n      };\n      var waitForLoad = function () {\n        if (hasLoaded()) {\n          return global$3.resolve(true);\n        } else {\n          return new global$3(function (resolve, reject) {\n            var numRetries = 15;\n            var interval = global$2.setInterval(function () {\n              if (hasLoaded()) {\n                global$2.clearInterval(interval);\n                resolve(true);\n              } else {\n                numRetries--;\n                if (numRetries < 0) {\n                  console.log('Could not load emojis from url: ' + databaseUrl);\n                  global$2.clearInterval(interval);\n                  reject(false);\n                }\n              }\n            }, 100);\n          });\n        }\n      };\n      var hasLoaded = function () {\n        return categories.get().isSome() && all.get().isSome();\n      };\n      return {\n        listCategories: listCategories,\n        hasLoaded: hasLoaded,\n        waitForLoad: waitForLoad,\n        listAll: listAll,\n        listCategory: listCategory\n      };\n    };\n\n    var exists = function (xs, pred) {\n      for (var i = 0, len = xs.length; i < len; i++) {\n        var x = xs[i];\n        if (pred(x, i)) {\n          return true;\n        }\n      }\n      return false;\n    };\n    var map$1 = function (xs, f) {\n      var len = xs.length;\n      var r = new Array(len);\n      for (var i = 0; i < len; i++) {\n        var x = xs[i];\n        r[i] = f(x, i);\n      }\n      return r;\n    };\n    var each$1 = function (xs, f) {\n      for (var i = 0, len = xs.length; i < len; i++) {\n        var x = xs[i];\n        f(x, i);\n      }\n    };\n\n    var setup = function (editor) {\n      editor.on('PreInit', function () {\n        editor.parser.addAttributeFilter('data-emoticon', function (nodes) {\n          each$1(nodes, function (node) {\n            node.attr('data-mce-resize', 'false');\n            node.attr('data-mce-placeholder', '1');\n          });\n        });\n      });\n    };\n\n    var emojiMatches = function (emoji, lowerCasePattern) {\n      return contains(emoji.title.toLowerCase(), lowerCasePattern) || exists(emoji.keywords, function (k) {\n        return contains(k.toLowerCase(), lowerCasePattern);\n      });\n    };\n    var emojisFrom = function (list, pattern, maxResults) {\n      var matches = [];\n      var lowerCasePattern = pattern.toLowerCase();\n      var reachedLimit = maxResults.fold(function () {\n        return never;\n      }, function (max) {\n        return function (size) {\n          return size >= max;\n        };\n      });\n      for (var i = 0; i < list.length; i++) {\n        if (pattern.length === 0 || emojiMatches(list[i], lowerCasePattern)) {\n          matches.push({\n            value: list[i].char,\n            text: list[i].title,\n            icon: list[i].char\n          });\n          if (reachedLimit(matches.length)) {\n            break;\n          }\n        }\n      }\n      return matches;\n    };\n\n    var init = function (editor, database) {\n      editor.ui.registry.addAutocompleter('emoticons', {\n        ch: ':',\n        columns: 'auto',\n        minChars: 2,\n        fetch: function (pattern, maxResults) {\n          return database.waitForLoad().then(function () {\n            var candidates = database.listAll();\n            return emojisFrom(candidates, pattern, Optional.some(maxResults));\n          });\n        },\n        onAction: function (autocompleteApi, rng, value) {\n          editor.selection.setRng(rng);\n          editor.insertContent(value);\n          autocompleteApi.hide();\n        }\n      });\n    };\n\n    var last = function (fn, rate) {\n      var timer = null;\n      var cancel = function () {\n        if (timer !== null) {\n          clearTimeout(timer);\n          timer = null;\n        }\n      };\n      var throttle = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n        if (timer !== null) {\n          clearTimeout(timer);\n        }\n        timer = setTimeout(function () {\n          fn.apply(null, args);\n          timer = null;\n        }, rate);\n      };\n      return {\n        cancel: cancel,\n        throttle: throttle\n      };\n    };\n\n    var insertEmoticon = function (editor, ch) {\n      editor.insertContent(ch);\n    };\n\n    var patternName = 'pattern';\n    var open = function (editor, database) {\n      var initialState = {\n        pattern: '',\n        results: emojisFrom(database.listAll(), '', Optional.some(300))\n      };\n      var currentTab = Cell(ALL_CATEGORY);\n      var scan = function (dialogApi) {\n        var dialogData = dialogApi.getData();\n        var category = currentTab.get();\n        var candidates = database.listCategory(category);\n        var results = emojisFrom(candidates, dialogData[patternName], category === ALL_CATEGORY ? Optional.some(300) : Optional.none());\n        dialogApi.setData({ results: results });\n      };\n      var updateFilter = last(function (dialogApi) {\n        scan(dialogApi);\n      }, 200);\n      var searchField = {\n        label: 'Search',\n        type: 'input',\n        name: patternName\n      };\n      var resultsField = {\n        type: 'collection',\n        name: 'results'\n      };\n      var getInitialState = function () {\n        var body = {\n          type: 'tabpanel',\n          tabs: map$1(database.listCategories(), function (cat) {\n            return {\n              title: cat,\n              name: cat,\n              items: [\n                searchField,\n                resultsField\n              ]\n            };\n          })\n        };\n        return {\n          title: 'Emoticons',\n          size: 'normal',\n          body: body,\n          initialData: initialState,\n          onTabChange: function (dialogApi, details) {\n            currentTab.set(details.newTabName);\n            updateFilter.throttle(dialogApi);\n          },\n          onChange: updateFilter.throttle,\n          onAction: function (dialogApi, actionData) {\n            if (actionData.name === 'results') {\n              insertEmoticon(editor, actionData.value);\n              dialogApi.close();\n            }\n          },\n          buttons: [{\n              type: 'cancel',\n              text: 'Close',\n              primary: true\n            }]\n        };\n      };\n      var dialogApi = editor.windowManager.open(getInitialState());\n      dialogApi.focus(patternName);\n      if (!database.hasLoaded()) {\n        dialogApi.block('Loading emoticons...');\n        database.waitForLoad().then(function () {\n          dialogApi.redial(getInitialState());\n          updateFilter.throttle(dialogApi);\n          dialogApi.focus(patternName);\n          dialogApi.unblock();\n        }).catch(function (_err) {\n          dialogApi.redial({\n            title: 'Emoticons',\n            body: {\n              type: 'panel',\n              items: [{\n                  type: 'alertbanner',\n                  level: 'error',\n                  icon: 'warning',\n                  text: '<p>Could not load emoticons</p>'\n                }]\n            },\n            buttons: [{\n                type: 'cancel',\n                text: 'Close',\n                primary: true\n              }],\n            initialData: {\n              pattern: '',\n              results: []\n            }\n          });\n          dialogApi.focus(patternName);\n          dialogApi.unblock();\n        });\n      }\n    };\n\n    var register = function (editor, database) {\n      var onAction = function () {\n        return open(editor, database);\n      };\n      editor.ui.registry.addButton('emoticons', {\n        tooltip: 'Emoticons',\n        icon: 'emoji',\n        onAction: onAction\n      });\n      editor.ui.registry.addMenuItem('emoticons', {\n        text: 'Emoticons...',\n        icon: 'emoji',\n        onAction: onAction\n      });\n    };\n\n    function Plugin () {\n      global.add('emoticons', function (editor, pluginUrl) {\n        var databaseUrl = getEmoticonDatabaseUrl(editor, pluginUrl);\n        var databaseId = getEmoticonDatabaseId(editor);\n        var database = initDatabase(editor, databaseUrl, databaseId);\n        register(editor, database);\n        init(editor, database);\n        setup(editor);\n      });\n    }\n\n    Plugin();\n\n}());\n"]}