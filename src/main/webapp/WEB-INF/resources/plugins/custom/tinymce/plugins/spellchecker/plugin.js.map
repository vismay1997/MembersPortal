{"version":3,"sources":["spellchecker/plugin.js"],"names":["Cell","initial","value","get","set","v","global","tinymce","util","Tools","resolve","hasOwnProperty","Object","global$1","global$2","global$3","getRpcUrl","editor","getParam","getSpellcheckerWordcharPattern","defaultPattern","RegExp","isContentEditableFalse","node","nodeType","contentEditable","DomTextMatcher","m","matches","dom","blockElementsMap","schema","getBlockElements","hiddenTextElementsMap","getWhiteSpaceElements","shortEndedElementsMap","getShortEndedElements","createMatch","data","Error","start","index","end","length","text","unwrapElement","element","parentNode","childNodes","insertBefore","removeChild","getWrappersByIndex","elements","getElementsByTagName","wrappers","i","dataIndex","getAttribute","className","indexOf","push","match","each","callback","l","this","unwrap","rangeFromMatch","rng","createRng","setStartBefore","setEndAfter","getText","txt","nodeName","firstChild","nextSibling","filter","filteredMatches","reset","splice","matchFromElement","elementFromMatch","find","regex","exec","add","substr","wrap","replaceFn","startNode","endNode","startNodeIndex","endNodeIndex","matchLocation","innerNodes","atIndex","curNode","matchIndex","slice","sort","a","b","shift","out","stepThroughMatches","makeReplacementNode","fill","stencil","clone","cloneNode","setAttribute","appendChild","doc","createTextNode","range","before","after","node_1","substring","el","elA","innerNode","innerEl","replaceChild","elB","genReplacer","replace","deleteContents","insertNode","getTextMatcher","textMatcherState","textMatcher","getBody","sendRpcCall","pluginUrl","currentLanguageState","name","successCallback","errorCallback","userSpellcheckCallback","getSpellcheckerCallback","method","doneCallback","lang","postData","key","encodeURIComponent","send","url","toAbsolute","type","content_type","success","result","parseResult","JSON","parse","error","message","translate","defaultSpellcheckCallback","call","plugins","spellchecker","spellcheck","startedState","lastSuggestionsState","finish","setProgressState","markErrors","notificationManager","open","focus","checkIfFinished","select","ignoreWord","word","spans","all","selection","collapse","span","remove","bookmark","getBookmark","moveToBookmark","fire","fireSpellcheckEnd","getElmIndex","elm","hasDictionarySupport","dictionary","suggestions","words","r","x","isEmpty","create","class","aria-invalid","data-mce-bogus","data-mce-word","fireSpellcheckStart","__assign","assign","t","s","n","arguments","p","prototype","apply","spellcheckerEvents","register$1","languageValues","items","languageMenuItems","map","getLanguages","split","langPair","langPairs","getItems","languageValue","selectable","startSpellchecking","buttonArgs","tooltip","onAction","icon","onSetup","buttonApi","setButtonState","setActive","on","off","splitButtonArgs","fetch","languageItem","onItemAction","splitButtonApi","ui","registry","addSplitButton","addToggleButton","addToggleMenuItem","menuApi","setMenuItemCheck","getSuggestions","suggestion","insertContent","encode","addToDictionary","setup","addContextMenu","update","target","nodes","toArray","nodeIndex","toString","findSpansByIndex","setRng","hasPlugin","window","console","log","hasProPlugin","defaultLanguage","getLanguage","addCommand","register","_url","getWordCharPattern"],"mappings":"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","file":"plugin.js","sourcesContent":["/**\n * Copyright (c) Tiny Technologies, Inc. All rights reserved.\n * Licensed under the LGPL or a commercial license.\n * For LGPL see License.txt in the project root for license information.\n * For commercial licenses see https://www.tiny.cloud/\n *\n * Version: 5.6.2 (2020-12-08)\n */\n(function () {\n    'use strict';\n\n    var Cell = function (initial) {\n      var value = initial;\n      var get = function () {\n        return value;\n      };\n      var set = function (v) {\n        value = v;\n      };\n      return {\n        get: get,\n        set: set\n      };\n    };\n\n    var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var hasProPlugin = function (editor) {\n      if (editor.hasPlugin('tinymcespellchecker', true)) {\n        if (typeof window.console !== 'undefined' && window.console.log) {\n          window.console.log('Spell Checker Pro is incompatible with Spell Checker plugin! ' + 'Remove \\'spellchecker\\' from the \\'plugins\\' option.');\n        }\n        return true;\n      } else {\n        return false;\n      }\n    };\n\n    var hasOwnProperty = Object.hasOwnProperty;\n    var isEmpty = function (r) {\n      for (var x in r) {\n        if (hasOwnProperty.call(r, x)) {\n          return false;\n        }\n      }\n      return true;\n    };\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.util.URI');\n\n    var global$3 = tinymce.util.Tools.resolve('tinymce.util.XHR');\n\n    var fireSpellcheckStart = function (editor) {\n      return editor.fire('SpellcheckStart');\n    };\n    var fireSpellcheckEnd = function (editor) {\n      return editor.fire('SpellcheckEnd');\n    };\n\n    var getLanguages = function (editor) {\n      var defaultLanguages = 'English=en,Danish=da,Dutch=nl,Finnish=fi,French=fr_FR,German=de,Italian=it,Polish=pl,Portuguese=pt_BR,Spanish=es,Swedish=sv';\n      return editor.getParam('spellchecker_languages', defaultLanguages);\n    };\n    var getLanguage = function (editor) {\n      var defaultLanguage = editor.getParam('language', 'en');\n      return editor.getParam('spellchecker_language', defaultLanguage);\n    };\n    var getRpcUrl = function (editor) {\n      return editor.getParam('spellchecker_rpc_url');\n    };\n    var getSpellcheckerCallback = function (editor) {\n      return editor.getParam('spellchecker_callback');\n    };\n    var getSpellcheckerWordcharPattern = function (editor) {\n      var defaultPattern = new RegExp('[^' + '\\\\s!\"#$%&()*+,-./:;<=>?@[\\\\]^_{|}`' + '\\xA7\\xA9\\xAB\\xAE\\xB1\\xB6\\xB7\\xB8\\xBB' + '\\xBC\\xBD\\xBE\\xBF\\xD7\\xF7\\xA4\\u201D\\u201C\\u201E\\xA0\\u2002\\u2003\\u2009' + ']+', 'g');\n      return editor.getParam('spellchecker_wordchar_pattern', defaultPattern);\n    };\n\n    function isContentEditableFalse(node) {\n      return node && node.nodeType === 1 && node.contentEditable === 'false';\n    }\n    var DomTextMatcher = function (node, editor) {\n      var m, matches = [];\n      var dom = editor.dom;\n      var blockElementsMap = editor.schema.getBlockElements();\n      var hiddenTextElementsMap = editor.schema.getWhiteSpaceElements();\n      var shortEndedElementsMap = editor.schema.getShortEndedElements();\n      function createMatch(m, data) {\n        if (!m[0]) {\n          throw new Error('findAndReplaceDOMText cannot handle zero-length matches');\n        }\n        return {\n          start: m.index,\n          end: m.index + m[0].length,\n          text: m[0],\n          data: data\n        };\n      }\n      function getText(node) {\n        var txt;\n        if (node.nodeType === 3) {\n          return node.data;\n        }\n        if (hiddenTextElementsMap[node.nodeName] && !blockElementsMap[node.nodeName]) {\n          return '';\n        }\n        if (isContentEditableFalse(node)) {\n          return '\\n';\n        }\n        txt = '';\n        if (blockElementsMap[node.nodeName] || shortEndedElementsMap[node.nodeName]) {\n          txt += '\\n';\n        }\n        if (node = node.firstChild) {\n          do {\n            txt += getText(node);\n          } while (node = node.nextSibling);\n        }\n        return txt;\n      }\n      function stepThroughMatches(node, matches, replaceFn) {\n        var startNode, endNode, startNodeIndex, endNodeIndex, innerNodes = [], atIndex = 0, curNode = node, matchLocation, matchIndex = 0;\n        matches = matches.slice(0);\n        matches.sort(function (a, b) {\n          return a.start - b.start;\n        });\n        matchLocation = matches.shift();\n        out:\n          while (true) {\n            if (blockElementsMap[curNode.nodeName] || shortEndedElementsMap[curNode.nodeName] || isContentEditableFalse(curNode)) {\n              atIndex++;\n            }\n            if (curNode.nodeType === 3) {\n              if (!endNode && curNode.length + atIndex >= matchLocation.end) {\n                endNode = curNode;\n                endNodeIndex = matchLocation.end - atIndex;\n              } else if (startNode) {\n                innerNodes.push(curNode);\n              }\n              if (!startNode && curNode.length + atIndex > matchLocation.start) {\n                startNode = curNode;\n                startNodeIndex = matchLocation.start - atIndex;\n              }\n              atIndex += curNode.length;\n            }\n            if (startNode && endNode) {\n              curNode = replaceFn({\n                startNode: startNode,\n                startNodeIndex: startNodeIndex,\n                endNode: endNode,\n                endNodeIndex: endNodeIndex,\n                innerNodes: innerNodes,\n                match: matchLocation.text,\n                matchIndex: matchIndex\n              });\n              atIndex -= endNode.length - endNodeIndex;\n              startNode = null;\n              endNode = null;\n              innerNodes = [];\n              matchLocation = matches.shift();\n              matchIndex++;\n              if (!matchLocation) {\n                break;\n              }\n            } else if ((!hiddenTextElementsMap[curNode.nodeName] || blockElementsMap[curNode.nodeName]) && curNode.firstChild) {\n              if (!isContentEditableFalse(curNode)) {\n                curNode = curNode.firstChild;\n                continue;\n              }\n            } else if (curNode.nextSibling) {\n              curNode = curNode.nextSibling;\n              continue;\n            }\n            while (true) {\n              if (curNode.nextSibling) {\n                curNode = curNode.nextSibling;\n                break;\n              } else if (curNode.parentNode !== node) {\n                curNode = curNode.parentNode;\n              } else {\n                break out;\n              }\n            }\n          }\n      }\n      function genReplacer(callback) {\n        function makeReplacementNode(fill, matchIndex) {\n          var match = matches[matchIndex];\n          if (!match.stencil) {\n            match.stencil = callback(match);\n          }\n          var clone = match.stencil.cloneNode(false);\n          clone.setAttribute('data-mce-index', matchIndex);\n          if (fill) {\n            clone.appendChild(dom.doc.createTextNode(fill));\n          }\n          return clone;\n        }\n        return function (range) {\n          var before;\n          var after;\n          var parentNode;\n          var startNode = range.startNode;\n          var endNode = range.endNode;\n          var matchIndex = range.matchIndex;\n          var doc = dom.doc;\n          if (startNode === endNode) {\n            var node_1 = startNode;\n            parentNode = node_1.parentNode;\n            if (range.startNodeIndex > 0) {\n              before = doc.createTextNode(node_1.data.substring(0, range.startNodeIndex));\n              parentNode.insertBefore(before, node_1);\n            }\n            var el = makeReplacementNode(range.match, matchIndex);\n            parentNode.insertBefore(el, node_1);\n            if (range.endNodeIndex < node_1.length) {\n              after = doc.createTextNode(node_1.data.substring(range.endNodeIndex));\n              parentNode.insertBefore(after, node_1);\n            }\n            node_1.parentNode.removeChild(node_1);\n            return el;\n          }\n          before = doc.createTextNode(startNode.data.substring(0, range.startNodeIndex));\n          after = doc.createTextNode(endNode.data.substring(range.endNodeIndex));\n          var elA = makeReplacementNode(startNode.data.substring(range.startNodeIndex), matchIndex);\n          for (var i = 0, l = range.innerNodes.length; i < l; ++i) {\n            var innerNode = range.innerNodes[i];\n            var innerEl = makeReplacementNode(innerNode.data, matchIndex);\n            innerNode.parentNode.replaceChild(innerEl, innerNode);\n          }\n          var elB = makeReplacementNode(endNode.data.substring(0, range.endNodeIndex), matchIndex);\n          parentNode = startNode.parentNode;\n          parentNode.insertBefore(before, startNode);\n          parentNode.insertBefore(elA, startNode);\n          parentNode.removeChild(startNode);\n          parentNode = endNode.parentNode;\n          parentNode.insertBefore(elB, endNode);\n          parentNode.insertBefore(after, endNode);\n          parentNode.removeChild(endNode);\n          return elB;\n        };\n      }\n      function unwrapElement(element) {\n        var parentNode = element.parentNode;\n        while (element.childNodes.length > 0) {\n          parentNode.insertBefore(element.childNodes[0], element);\n        }\n        parentNode.removeChild(element);\n      }\n      function hasClass(elm) {\n        return elm.className.indexOf('mce-spellchecker-word') !== -1;\n      }\n      function getWrappersByIndex(index) {\n        var elements = node.getElementsByTagName('*'), wrappers = [];\n        index = typeof index === 'number' ? '' + index : null;\n        for (var i = 0; i < elements.length; i++) {\n          var element = elements[i], dataIndex = element.getAttribute('data-mce-index');\n          if (dataIndex !== null && dataIndex.length && hasClass(element)) {\n            if (dataIndex === index || index === null) {\n              wrappers.push(element);\n            }\n          }\n        }\n        return wrappers;\n      }\n      function indexOf(match) {\n        var i = matches.length;\n        while (i--) {\n          if (matches[i] === match) {\n            return i;\n          }\n        }\n        return -1;\n      }\n      function filter(callback) {\n        var filteredMatches = [];\n        each(function (match, i) {\n          if (callback(match, i)) {\n            filteredMatches.push(match);\n          }\n        });\n        matches = filteredMatches;\n        return this;\n      }\n      function each(callback) {\n        for (var i = 0, l = matches.length; i < l; i++) {\n          if (callback(matches[i], i) === false) {\n            break;\n          }\n        }\n        return this;\n      }\n      function wrap(callback) {\n        if (matches.length) {\n          stepThroughMatches(node, matches, genReplacer(callback));\n        }\n        return this;\n      }\n      function find(regex, data) {\n        if (text && regex.global) {\n          while (m = regex.exec(text)) {\n            matches.push(createMatch(m, data));\n          }\n        }\n        return this;\n      }\n      function unwrap(match) {\n        var i;\n        var elements = getWrappersByIndex(match ? indexOf(match) : null);\n        i = elements.length;\n        while (i--) {\n          unwrapElement(elements[i]);\n        }\n        return this;\n      }\n      function matchFromElement(element) {\n        return matches[element.getAttribute('data-mce-index')];\n      }\n      function elementFromMatch(match) {\n        return getWrappersByIndex(indexOf(match))[0];\n      }\n      function add(start, length, data) {\n        matches.push({\n          start: start,\n          end: start + length,\n          text: text.substr(start, length),\n          data: data\n        });\n        return this;\n      }\n      function rangeFromMatch(match) {\n        var wrappers = getWrappersByIndex(indexOf(match));\n        var rng = editor.dom.createRng();\n        rng.setStartBefore(wrappers[0]);\n        rng.setEndAfter(wrappers[wrappers.length - 1]);\n        return rng;\n      }\n      function replace(match, text) {\n        var rng = rangeFromMatch(match);\n        rng.deleteContents();\n        if (text.length > 0) {\n          rng.insertNode(editor.dom.doc.createTextNode(text));\n        }\n        return rng;\n      }\n      function reset() {\n        matches.splice(0, matches.length);\n        unwrap();\n        return this;\n      }\n      var text = getText(node);\n      return {\n        text: text,\n        matches: matches,\n        each: each,\n        filter: filter,\n        reset: reset,\n        matchFromElement: matchFromElement,\n        elementFromMatch: elementFromMatch,\n        find: find,\n        add: add,\n        wrap: wrap,\n        unwrap: unwrap,\n        replace: replace,\n        rangeFromMatch: rangeFromMatch,\n        indexOf: indexOf\n      };\n    };\n\n    var getTextMatcher = function (editor, textMatcherState) {\n      if (!textMatcherState.get()) {\n        var textMatcher = DomTextMatcher(editor.getBody(), editor);\n        textMatcherState.set(textMatcher);\n      }\n      return textMatcherState.get();\n    };\n    var defaultSpellcheckCallback = function (editor, pluginUrl, currentLanguageState) {\n      return function (method, text, doneCallback, errorCallback) {\n        var data = {\n          method: method,\n          lang: currentLanguageState.get()\n        };\n        var postData = '';\n        data[method === 'addToDictionary' ? 'word' : 'text'] = text;\n        global$1.each(data, function (value, key) {\n          if (postData) {\n            postData += '&';\n          }\n          postData += key + '=' + encodeURIComponent(value);\n        });\n        global$3.send({\n          url: new global$2(pluginUrl).toAbsolute(getRpcUrl(editor)),\n          type: 'post',\n          content_type: 'application/x-www-form-urlencoded',\n          data: postData,\n          success: function (result) {\n            var parseResult = JSON.parse(result);\n            if (!parseResult) {\n              var message = editor.translate('Server response wasn\\'t proper JSON.');\n              errorCallback(message);\n            } else if (parseResult.error) {\n              errorCallback(parseResult.error);\n            } else {\n              doneCallback(parseResult);\n            }\n          },\n          error: function () {\n            var message = editor.translate('The spelling service was not found: (') + getRpcUrl(editor) + editor.translate(')');\n            errorCallback(message);\n          }\n        });\n      };\n    };\n    var sendRpcCall = function (editor, pluginUrl, currentLanguageState, name, data, successCallback, errorCallback) {\n      var userSpellcheckCallback = getSpellcheckerCallback(editor);\n      var spellCheckCallback = userSpellcheckCallback ? userSpellcheckCallback : defaultSpellcheckCallback(editor, pluginUrl, currentLanguageState);\n      spellCheckCallback.call(editor.plugins.spellchecker, name, data, successCallback, errorCallback);\n    };\n    var spellcheck = function (editor, pluginUrl, startedState, textMatcherState, lastSuggestionsState, currentLanguageState) {\n      if (finish(editor, startedState, textMatcherState)) {\n        return;\n      }\n      var errorCallback = function (message) {\n        editor.notificationManager.open({\n          text: message,\n          type: 'error'\n        });\n        editor.setProgressState(false);\n        finish(editor, startedState, textMatcherState);\n      };\n      var successCallback = function (data) {\n        markErrors(editor, startedState, textMatcherState, lastSuggestionsState, data);\n      };\n      editor.setProgressState(true);\n      sendRpcCall(editor, pluginUrl, currentLanguageState, 'spellcheck', getTextMatcher(editor, textMatcherState).text, successCallback, errorCallback);\n      editor.focus();\n    };\n    var checkIfFinished = function (editor, startedState, textMatcherState) {\n      if (!editor.dom.select('span.mce-spellchecker-word').length) {\n        finish(editor, startedState, textMatcherState);\n      }\n    };\n    var addToDictionary = function (editor, pluginUrl, startedState, textMatcherState, currentLanguageState, word, spans) {\n      editor.setProgressState(true);\n      sendRpcCall(editor, pluginUrl, currentLanguageState, 'addToDictionary', word, function () {\n        editor.setProgressState(false);\n        editor.dom.remove(spans, true);\n        checkIfFinished(editor, startedState, textMatcherState);\n      }, function (message) {\n        editor.notificationManager.open({\n          text: message,\n          type: 'error'\n        });\n        editor.setProgressState(false);\n      });\n    };\n    var ignoreWord = function (editor, startedState, textMatcherState, word, spans, all) {\n      editor.selection.collapse();\n      if (all) {\n        global$1.each(editor.dom.select('span.mce-spellchecker-word'), function (span) {\n          if (span.getAttribute('data-mce-word') === word) {\n            editor.dom.remove(span, true);\n          }\n        });\n      } else {\n        editor.dom.remove(spans, true);\n      }\n      checkIfFinished(editor, startedState, textMatcherState);\n    };\n    var finish = function (editor, startedState, textMatcherState) {\n      var bookmark = editor.selection.getBookmark();\n      getTextMatcher(editor, textMatcherState).reset();\n      editor.selection.moveToBookmark(bookmark);\n      textMatcherState.set(null);\n      if (startedState.get()) {\n        startedState.set(false);\n        fireSpellcheckEnd(editor);\n        return true;\n      }\n    };\n    var getElmIndex = function (elm) {\n      var value = elm.getAttribute('data-mce-index');\n      if (typeof value === 'number') {\n        return '' + value;\n      }\n      return value;\n    };\n    var findSpansByIndex = function (editor, index) {\n      var spans = [];\n      var nodes = global$1.toArray(editor.getBody().getElementsByTagName('span'));\n      if (nodes.length) {\n        for (var i = 0; i < nodes.length; i++) {\n          var nodeIndex = getElmIndex(nodes[i]);\n          if (nodeIndex === null || !nodeIndex.length) {\n            continue;\n          }\n          if (nodeIndex === index.toString()) {\n            spans.push(nodes[i]);\n          }\n        }\n      }\n      return spans;\n    };\n    var markErrors = function (editor, startedState, textMatcherState, lastSuggestionsState, data) {\n      var hasDictionarySupport = !!data.dictionary;\n      var suggestions = data.words;\n      editor.setProgressState(false);\n      if (isEmpty(suggestions)) {\n        var message = editor.translate('No misspellings found.');\n        editor.notificationManager.open({\n          text: message,\n          type: 'info'\n        });\n        startedState.set(false);\n        return;\n      }\n      lastSuggestionsState.set({\n        suggestions: suggestions,\n        hasDictionarySupport: hasDictionarySupport\n      });\n      var bookmark = editor.selection.getBookmark();\n      getTextMatcher(editor, textMatcherState).find(getSpellcheckerWordcharPattern(editor)).filter(function (match) {\n        return !!suggestions[match.text];\n      }).wrap(function (match) {\n        return editor.dom.create('span', {\n          'class': 'mce-spellchecker-word',\n          'aria-invalid': 'spelling',\n          'data-mce-bogus': 1,\n          'data-mce-word': match.text\n        });\n      });\n      editor.selection.moveToBookmark(bookmark);\n      startedState.set(true);\n      fireSpellcheckStart(editor);\n    };\n\n    var get = function (editor, startedState, lastSuggestionsState, textMatcherState, currentLanguageState, _url) {\n      var getLanguage = function () {\n        return currentLanguageState.get();\n      };\n      var getWordCharPattern = function () {\n        return getSpellcheckerWordcharPattern(editor);\n      };\n      var markErrors$1 = function (data) {\n        markErrors(editor, startedState, textMatcherState, lastSuggestionsState, data);\n      };\n      var getTextMatcher = function () {\n        return textMatcherState.get();\n      };\n      return {\n        getTextMatcher: getTextMatcher,\n        getWordCharPattern: getWordCharPattern,\n        markErrors: markErrors$1,\n        getLanguage: getLanguage\n      };\n    };\n\n    var register = function (editor, pluginUrl, startedState, textMatcherState, lastSuggestionsState, currentLanguageState) {\n      editor.addCommand('mceSpellCheck', function () {\n        spellcheck(editor, pluginUrl, startedState, textMatcherState, lastSuggestionsState, currentLanguageState);\n      });\n    };\n\n    var __assign = function () {\n      __assign = Object.assign || function __assign(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s)\n            if (Object.prototype.hasOwnProperty.call(s, p))\n              t[p] = s[p];\n        }\n        return t;\n      };\n      return __assign.apply(this, arguments);\n    };\n\n    var spellcheckerEvents = 'SpellcheckStart SpellcheckEnd';\n    var buildMenuItems = function (listName, languageValues) {\n      var items = [];\n      global$1.each(languageValues, function (languageValue) {\n        items.push({\n          selectable: true,\n          text: languageValue.name,\n          data: languageValue.value\n        });\n      });\n      return items;\n    };\n    var getItems = function (editor) {\n      return global$1.map(getLanguages(editor).split(','), function (langPair) {\n        var langPairs = langPair.split('=');\n        return {\n          name: langPairs[0],\n          value: langPairs[1]\n        };\n      });\n    };\n    var register$1 = function (editor, pluginUrl, startedState, textMatcherState, currentLanguageState, lastSuggestionsState) {\n      var languageMenuItems = buildMenuItems('Language', getItems(editor));\n      var startSpellchecking = function () {\n        spellcheck(editor, pluginUrl, startedState, textMatcherState, lastSuggestionsState, currentLanguageState);\n      };\n      var buttonArgs = {\n        tooltip: 'Spellcheck',\n        onAction: startSpellchecking,\n        icon: 'spell-check',\n        onSetup: function (buttonApi) {\n          var setButtonState = function () {\n            buttonApi.setActive(startedState.get());\n          };\n          editor.on(spellcheckerEvents, setButtonState);\n          return function () {\n            editor.off(spellcheckerEvents, setButtonState);\n          };\n        }\n      };\n      var splitButtonArgs = __assign(__assign({}, buttonArgs), {\n        type: 'splitbutton',\n        select: function (value) {\n          return value === currentLanguageState.get();\n        },\n        fetch: function (callback) {\n          var items = global$1.map(languageMenuItems, function (languageItem) {\n            return {\n              type: 'choiceitem',\n              value: languageItem.data,\n              text: languageItem.text\n            };\n          });\n          callback(items);\n        },\n        onItemAction: function (splitButtonApi, value) {\n          currentLanguageState.set(value);\n        }\n      });\n      if (languageMenuItems.length > 1) {\n        editor.ui.registry.addSplitButton('spellchecker', splitButtonArgs);\n      } else {\n        editor.ui.registry.addToggleButton('spellchecker', buttonArgs);\n      }\n      editor.ui.registry.addToggleMenuItem('spellchecker', {\n        text: 'Spellcheck',\n        icon: 'spell-check',\n        onSetup: function (menuApi) {\n          menuApi.setActive(startedState.get());\n          var setMenuItemCheck = function () {\n            menuApi.setActive(startedState.get());\n          };\n          editor.on(spellcheckerEvents, setMenuItemCheck);\n          return function () {\n            editor.off(spellcheckerEvents, setMenuItemCheck);\n          };\n        },\n        onAction: startSpellchecking\n      });\n    };\n\n    var ignoreAll = true;\n    var getSuggestions = function (editor, pluginUrl, lastSuggestionsState, startedState, textMatcherState, currentLanguageState, word, spans) {\n      var items = [];\n      var suggestions = lastSuggestionsState.get().suggestions[word];\n      global$1.each(suggestions, function (suggestion) {\n        items.push({\n          text: suggestion,\n          onAction: function () {\n            editor.insertContent(editor.dom.encode(suggestion));\n            editor.dom.remove(spans);\n            checkIfFinished(editor, startedState, textMatcherState);\n          }\n        });\n      });\n      var hasDictionarySupport = lastSuggestionsState.get().hasDictionarySupport;\n      if (hasDictionarySupport) {\n        items.push({ type: 'separator' });\n        items.push({\n          text: 'Add to dictionary',\n          onAction: function () {\n            addToDictionary(editor, pluginUrl, startedState, textMatcherState, currentLanguageState, word, spans);\n          }\n        });\n      }\n      items.push.apply(items, [\n        { type: 'separator' },\n        {\n          text: 'Ignore',\n          onAction: function () {\n            ignoreWord(editor, startedState, textMatcherState, word, spans);\n          }\n        },\n        {\n          text: 'Ignore all',\n          onAction: function () {\n            ignoreWord(editor, startedState, textMatcherState, word, spans, ignoreAll);\n          }\n        }\n      ]);\n      return items;\n    };\n    var setup = function (editor, pluginUrl, lastSuggestionsState, startedState, textMatcherState, currentLanguageState) {\n      var update = function (element) {\n        var target = element;\n        if (target.className === 'mce-spellchecker-word') {\n          var spans = findSpansByIndex(editor, getElmIndex(target));\n          if (spans.length > 0) {\n            var rng = editor.dom.createRng();\n            rng.setStartBefore(spans[0]);\n            rng.setEndAfter(spans[spans.length - 1]);\n            editor.selection.setRng(rng);\n            return getSuggestions(editor, pluginUrl, lastSuggestionsState, startedState, textMatcherState, currentLanguageState, target.getAttribute('data-mce-word'), spans);\n          }\n        } else {\n          return [];\n        }\n      };\n      editor.ui.registry.addContextMenu('spellchecker', { update: update });\n    };\n\n    function Plugin () {\n      global.add('spellchecker', function (editor, pluginUrl) {\n        if (hasProPlugin(editor) === false) {\n          var startedState = Cell(false);\n          var currentLanguageState = Cell(getLanguage(editor));\n          var textMatcherState = Cell(null);\n          var lastSuggestionsState = Cell(null);\n          register$1(editor, pluginUrl, startedState, textMatcherState, currentLanguageState, lastSuggestionsState);\n          setup(editor, pluginUrl, lastSuggestionsState, startedState, textMatcherState, currentLanguageState);\n          register(editor, pluginUrl, startedState, textMatcherState, lastSuggestionsState, currentLanguageState);\n          return get(editor, startedState, lastSuggestionsState, textMatcherState, currentLanguageState);\n        }\n      });\n    }\n\n    Plugin();\n\n}());\n"]}