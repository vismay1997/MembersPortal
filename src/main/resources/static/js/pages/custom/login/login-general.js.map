{"version":3,"sources":["custom/login/login-general.js"],"names":["KTLogin","_login","_showForm","form","cls","removeClass","addClass","KTUtil","animateClass","getById","init","validation","$","FormValidation","formValidation","fields","username","validators","notEmpty","message","password","plugins","trigger","Trigger","submitButton","SubmitButton","bootstrap","Bootstrap","on","e","preventDefault","validate","then","status","swal","fire","text","icon","buttonsStyling","confirmButtonText","customClass","confirmButton","scrollTop","fullname","email","emailAddress","cpassword","identical","compare","querySelector","value","agree","_handleSignUpForm","_handleForgotForm","jQuery","document","ready"],"mappings":"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","file":"login-general.js","sourcesContent":["\"use strict\";\r\n\r\n// Class Definition\r\nvar KTLogin = function() {\r\n    var _login;\r\n\r\n    var _showForm = function(form) {\r\n        var cls = 'login-' + form + '-on';\r\n        var form = 'kt_login_' + form + '_form';\r\n\r\n        _login.removeClass('login-forgot-on');\r\n        _login.removeClass('login-signin-on');\r\n        _login.removeClass('login-signup-on');\r\n\r\n        _login.addClass(cls);\r\n\r\n        KTUtil.animateClass(KTUtil.getById(form), 'animate__animated animate__backInUp');\r\n    }\r\n\r\n    var _handleSignInForm = function() {\r\n        var validation;\r\n\r\n        // Init form validation rules. For more info check the FormValidation plugin's official documentation:https://formvalidation.io/\r\n        validation = FormValidation.formValidation(\r\n\t\t\tKTUtil.getById('kt_login_signin_form'),\r\n\t\t\t{\r\n\t\t\t\tfields: {\r\n\t\t\t\t\tusername: {\r\n\t\t\t\t\t\tvalidators: {\r\n\t\t\t\t\t\t\tnotEmpty: {\r\n\t\t\t\t\t\t\t\tmessage: 'Username is required'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tpassword: {\r\n\t\t\t\t\t\tvalidators: {\r\n\t\t\t\t\t\t\tnotEmpty: {\r\n\t\t\t\t\t\t\t\tmessage: 'Password is required'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tplugins: {\r\n                    trigger: new FormValidation.plugins.Trigger(),\r\n                    submitButton: new FormValidation.plugins.SubmitButton(),\r\n                    //defaultSubmit: new FormValidation.plugins.DefaultSubmit(), // Uncomment this line to enable normal button submit after form validation\r\n\t\t\t\t\tbootstrap: new FormValidation.plugins.Bootstrap()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\r\n        $('#kt_login_signin_submit').on('click', function (e) {\r\n            e.preventDefault();\r\n\r\n            validation.validate().then(function(status) {\r\n\t\t        if (status == 'Valid') {\r\n                    swal.fire({\r\n\t\t                text: \"All is cool! Now you submit this form\",\r\n\t\t                icon: \"success\",\r\n\t\t                buttonsStyling: false,\r\n\t\t                confirmButtonText: \"Ok, got it!\",\r\n                        customClass: {\r\n    \t\t\t\t\t\tconfirmButton: \"btn font-weight-bold btn-light-primary\"\r\n    \t\t\t\t\t}\r\n\t\t            }).then(function() {\r\n\t\t\t\t\t\tKTUtil.scrollTop();\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tswal.fire({\r\n\t\t                text: \"Sorry, looks like there are some errors detected, please try again.\",\r\n\t\t                icon: \"error\",\r\n\t\t                buttonsStyling: false,\r\n\t\t                confirmButtonText: \"Ok, got it!\",\r\n                        customClass: {\r\n    \t\t\t\t\t\tconfirmButton: \"btn font-weight-bold btn-light-primary\"\r\n    \t\t\t\t\t}\r\n\t\t            }).then(function() {\r\n\t\t\t\t\t\tKTUtil.scrollTop();\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t    });\r\n        });\r\n\r\n        // Handle forgot button\r\n        $('#kt_login_forgot').on('click', function (e) {\r\n            e.preventDefault();\r\n            _showForm('forgot');\r\n        });\r\n\r\n        // Handle signup\r\n        $('#kt_login_signup').on('click', function (e) {\r\n            e.preventDefault();\r\n            _showForm('signup');\r\n        });\r\n    }\r\n\r\n    var _handleSignUpForm = function(e) {\r\n        var validation;\r\n        var form = KTUtil.getById('kt_login_signup_form');\r\n\r\n        // Init form validation rules. For more info check the FormValidation plugin's official documentation:https://formvalidation.io/\r\n        validation = FormValidation.formValidation(\r\n\t\t\tform,\r\n\t\t\t{\r\n\t\t\t\tfields: {\r\n\t\t\t\t\tfullname: {\r\n\t\t\t\t\t\tvalidators: {\r\n\t\t\t\t\t\t\tnotEmpty: {\r\n\t\t\t\t\t\t\t\tmessage: 'Username is required'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\temail: {\r\n                        validators: {\r\n\t\t\t\t\t\t\tnotEmpty: {\r\n\t\t\t\t\t\t\t\tmessage: 'Email address is required'\r\n\t\t\t\t\t\t\t},\r\n                            emailAddress: {\r\n\t\t\t\t\t\t\t\tmessage: 'The value is not a valid email address'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n                    password: {\r\n                        validators: {\r\n                            notEmpty: {\r\n                                message: 'The password is required'\r\n                            }\r\n                        }\r\n                    },\r\n                    cpassword: {\r\n                        validators: {\r\n                            notEmpty: {\r\n                                message: 'The password confirmation is required'\r\n                            },\r\n                            identical: {\r\n                                compare: function() {\r\n                                    return form.querySelector('[name=\"password\"]').value;\r\n                                },\r\n                                message: 'The password and its confirm are not the same'\r\n                            }\r\n                        }\r\n                    },\r\n                    agree: {\r\n                        validators: {\r\n                            notEmpty: {\r\n                                message: 'You must accept the terms and conditions'\r\n                            }\r\n                        }\r\n                    },\r\n\t\t\t\t},\r\n\t\t\t\tplugins: {\r\n\t\t\t\t\ttrigger: new FormValidation.plugins.Trigger(),\r\n\t\t\t\t\tbootstrap: new FormValidation.plugins.Bootstrap()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\r\n        $('#kt_login_signup_submit').on('click', function (e) {\r\n            e.preventDefault();\r\n\r\n            validation.validate().then(function(status) {\r\n\t\t        if (status == 'Valid') {\r\n                    swal.fire({\r\n\t\t                text: \"All is cool! Now you submit this form\",\r\n\t\t                icon: \"success\",\r\n\t\t                buttonsStyling: false,\r\n\t\t                confirmButtonText: \"Ok, got it!\",\r\n                        customClass: {\r\n    \t\t\t\t\t\tconfirmButton: \"btn font-weight-bold btn-light-primary\"\r\n    \t\t\t\t\t}\r\n\t\t            }).then(function() {\r\n\t\t\t\t\t\tKTUtil.scrollTop();\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tswal.fire({\r\n\t\t                text: \"Sorry, looks like there are some errors detected, please try again.\",\r\n\t\t                icon: \"error\",\r\n\t\t                buttonsStyling: false,\r\n\t\t                confirmButtonText: \"Ok, got it!\",\r\n                        customClass: {\r\n    \t\t\t\t\t\tconfirmButton: \"btn font-weight-bold btn-light-primary\"\r\n    \t\t\t\t\t}\r\n\t\t            }).then(function() {\r\n\t\t\t\t\t\tKTUtil.scrollTop();\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t    });\r\n        });\r\n\r\n        // Handle cancel button\r\n        $('#kt_login_signup_cancel').on('click', function (e) {\r\n            e.preventDefault();\r\n\r\n            _showForm('signin');\r\n        });\r\n    }\r\n\r\n    var _handleForgotForm = function(e) {\r\n        var validation;\r\n\r\n        // Init form validation rules. For more info check the FormValidation plugin's official documentation:https://formvalidation.io/\r\n        validation = FormValidation.formValidation(\r\n\t\t\tKTUtil.getById('kt_login_forgot_form'),\r\n\t\t\t{\r\n\t\t\t\tfields: {\r\n\t\t\t\t\temail: {\r\n\t\t\t\t\t\tvalidators: {\r\n\t\t\t\t\t\t\tnotEmpty: {\r\n\t\t\t\t\t\t\t\tmessage: 'Email address is required'\r\n\t\t\t\t\t\t\t},\r\n                            emailAddress: {\r\n\t\t\t\t\t\t\t\tmessage: 'The value is not a valid email address'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tplugins: {\r\n\t\t\t\t\ttrigger: new FormValidation.plugins.Trigger(),\r\n\t\t\t\t\tbootstrap: new FormValidation.plugins.Bootstrap()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\r\n        // Handle submit button\r\n        $('#kt_login_forgot_submit').on('click', function (e) {\r\n            e.preventDefault();\r\n\r\n            validation.validate().then(function(status) {\r\n\t\t        if (status == 'Valid') {\r\n                    // Submit form\r\n                    KTUtil.scrollTop();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tswal.fire({\r\n\t\t                text: \"Sorry, looks like there are some errors detected, please try again.\",\r\n\t\t                icon: \"error\",\r\n\t\t                buttonsStyling: false,\r\n\t\t                confirmButtonText: \"Ok, got it!\",\r\n                        customClass: {\r\n    \t\t\t\t\t\tconfirmButton: \"btn font-weight-bold btn-light-primary\"\r\n    \t\t\t\t\t}\r\n\t\t            }).then(function() {\r\n\t\t\t\t\t\tKTUtil.scrollTop();\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t    });\r\n        });\r\n\r\n        // Handle cancel button\r\n        $('#kt_login_forgot_cancel').on('click', function (e) {\r\n            e.preventDefault();\r\n\r\n            _showForm('signin');\r\n        });\r\n    }\r\n\r\n    // Public Functions\r\n    return {\r\n        // public functions\r\n        init: function() {\r\n            _login = $('#kt_login');\r\n\r\n            _handleSignInForm();\r\n            _handleSignUpForm();\r\n            _handleForgotForm();\r\n        }\r\n    };\r\n}();\r\n\r\n// Class Initialization\r\njQuery(document).ready(function() {\r\n    KTLogin.init();\r\n});\r\n"]}