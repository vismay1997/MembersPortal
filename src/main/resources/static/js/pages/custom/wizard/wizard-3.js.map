{"version":3,"sources":["custom/wizard/wizard-3.js"],"names":["KTWizard3","_wizardEl","_formEl","_wizardObj","_validations","init","KTUtil","getById","KTWizard","startStep","clickableSteps","on","wizard","getStep","getNewStep","validator","validate","then","status","goTo","scrollTop","Swal","fire","text","icon","buttonsStyling","confirmButtonText","customClass","confirmButton","submit","push","FormValidation","formValidation","fields","address1","validators","notEmpty","message","postcode","city","state","country","plugins","trigger","Trigger","bootstrap","Bootstrap","eleValidClass","package","weight","digits","width","height","packagelength","delivery","packaging","preferreddelivery","locaddress1","locpostcode","loccity","locstate","loccountry","jQuery","document","ready"],"mappings":"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","file":"wizard-3.js","sourcesContent":["\"use strict\";\r\n\r\n// Class definition\r\nvar KTWizard3 = function () {\r\n\t// Base elements\r\n\tvar _wizardEl;\r\n\tvar _formEl;\r\n\tvar _wizardObj;\r\n\tvar _validations = [];\r\n\r\n\t// Private functions\r\n\tvar _initWizard = function () {\r\n\t\t// Initialize form wizard\r\n\t\t_wizardObj = new KTWizard(_wizardEl, {\r\n\t\t\tstartStep: 1, // initial active step number\r\n\t\t\tclickableSteps: true  // allow step clicking\r\n\t\t});\r\n\r\n\t\t// Validation before going to next page\r\n\t\t_wizardObj.on('change', function (wizard) {\r\n\t\t\tif (wizard.getStep() > wizard.getNewStep()) {\r\n\t\t\t\treturn; // Skip if stepped back\r\n\t\t\t}\r\n\r\n\t\t\t// Validate form before change wizard step\r\n\t\t\tvar validator = _validations[wizard.getStep() - 1]; // get validator for currnt step\r\n\r\n\t\t\tif (validator) {\r\n\t\t\t\tvalidator.validate().then(function (status) {\r\n\t\t\t\t\tif (status == 'Valid') {\r\n\t\t\t\t\t\twizard.goTo(wizard.getNewStep());\r\n\r\n\t\t\t\t\t\tKTUtil.scrollTop();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tSwal.fire({\r\n\t\t\t\t\t\t\ttext: \"Sorry, looks like there are some errors detected, please try again.\",\r\n\t\t\t\t\t\t\ticon: \"error\",\r\n\t\t\t\t\t\t\tbuttonsStyling: false,\r\n\t\t\t\t\t\t\tconfirmButtonText: \"Ok, got it!\",\r\n\t\t\t\t\t\t\tcustomClass: {\r\n\t\t\t\t\t\t\t\tconfirmButton: \"btn font-weight-bold btn-light\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}).then(function () {\r\n\t\t\t\t\t\t\tKTUtil.scrollTop();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\treturn false;  // Do not change wizard step, further action will be handled by he validator\r\n\t\t});\r\n\r\n\t\t// Changed event\r\n\t\t_wizardObj.on('changed', function (wizard) {\r\n\t\t\tKTUtil.scrollTop();\r\n\t\t});\r\n\r\n\t\t// Submit event\r\n\t\t_wizardObj.on('submit', function (wizard) {\r\n\t\t\t// Validate form before submit\r\n\t\t\tvar validator = _validations[wizard.getStep() - 1]; // get validator for currnt step\r\n\r\n\t\t\tif (validator) {\r\n\t\t\t\tvalidator.validate().then(function (status) {\r\n\t\t\t\t\tif (status == 'Valid') {\r\n\t\t\t\t\t\t_formEl.submit(); // submit form\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tSwal.fire({\r\n\t\t\t\t\t\t\ttext: \"Sorry, looks like there are some errors detected, please try again.\",\r\n\t\t\t\t\t\t\ticon: \"error\",\r\n\t\t\t\t\t\t\tbuttonsStyling: false,\r\n\t\t\t\t\t\t\tconfirmButtonText: \"Ok, got it!\",\r\n\t\t\t\t\t\t\tcustomClass: {\r\n\t\t\t\t\t\t\t\tconfirmButton: \"btn font-weight-bold btn-light\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}).then(function () {\r\n\t\t\t\t\t\t\tKTUtil.scrollTop();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tvar _initValidation = function () {\r\n\t\t// Init form validation rules. For more info check the FormValidation plugin's official documentation:https://formvalidation.io/\r\n\t\t// Step 1\r\n\t\t_validations.push(FormValidation.formValidation(\r\n\t\t\t_formEl,\r\n\t\t\t{\r\n\t\t\t\tfields: {\r\n\t\t\t\t\taddress1: {\r\n\t\t\t\t\t\tvalidators: {\r\n\t\t\t\t\t\t\tnotEmpty: {\r\n\t\t\t\t\t\t\t\tmessage: 'Address is required'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tpostcode: {\r\n\t\t\t\t\t\tvalidators: {\r\n\t\t\t\t\t\t\tnotEmpty: {\r\n\t\t\t\t\t\t\t\tmessage: 'Postcode is required'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tcity: {\r\n\t\t\t\t\t\tvalidators: {\r\n\t\t\t\t\t\t\tnotEmpty: {\r\n\t\t\t\t\t\t\t\tmessage: 'City is required'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tstate: {\r\n\t\t\t\t\t\tvalidators: {\r\n\t\t\t\t\t\t\tnotEmpty: {\r\n\t\t\t\t\t\t\t\tmessage: 'State is required'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tcountry: {\r\n\t\t\t\t\t\tvalidators: {\r\n\t\t\t\t\t\t\tnotEmpty: {\r\n\t\t\t\t\t\t\t\tmessage: 'Country is required'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tplugins: {\r\n\t\t\t\t\ttrigger: new FormValidation.plugins.Trigger(),\r\n\t\t\t\t\t// Bootstrap Framework Integration\r\n\t\t\t\t\tbootstrap: new FormValidation.plugins.Bootstrap({\r\n\t\t\t\t\t\t//eleInvalidClass: '',\r\n\t\t\t\t\t\teleValidClass: '',\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t));\r\n\r\n\t\t// Step 2\r\n\t\t_validations.push(FormValidation.formValidation(\r\n\t\t\t_formEl,\r\n\t\t\t{\r\n\t\t\t\tfields: {\r\n\t\t\t\t\tpackage: {\r\n\t\t\t\t\t\tvalidators: {\r\n\t\t\t\t\t\t\tnotEmpty: {\r\n\t\t\t\t\t\t\t\tmessage: 'Package details is required'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tweight: {\r\n\t\t\t\t\t\tvalidators: {\r\n\t\t\t\t\t\t\tnotEmpty: {\r\n\t\t\t\t\t\t\t\tmessage: 'Package weight is required'\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tdigits: {\r\n\t\t\t\t\t\t\t\tmessage: 'The value added is not valid'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\twidth: {\r\n\t\t\t\t\t\tvalidators: {\r\n\t\t\t\t\t\t\tnotEmpty: {\r\n\t\t\t\t\t\t\t\tmessage: 'Package width is required'\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tdigits: {\r\n\t\t\t\t\t\t\t\tmessage: 'The value added is not valid'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\theight: {\r\n\t\t\t\t\t\tvalidators: {\r\n\t\t\t\t\t\t\tnotEmpty: {\r\n\t\t\t\t\t\t\t\tmessage: 'Package height is required'\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tdigits: {\r\n\t\t\t\t\t\t\t\tmessage: 'The value added is not valid'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tpackagelength: {\r\n\t\t\t\t\t\tvalidators: {\r\n\t\t\t\t\t\t\tnotEmpty: {\r\n\t\t\t\t\t\t\t\tmessage: 'Package length is required'\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tdigits: {\r\n\t\t\t\t\t\t\t\tmessage: 'The value added is not valid'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tplugins: {\r\n\t\t\t\t\ttrigger: new FormValidation.plugins.Trigger(),\r\n\t\t\t\t\t// Bootstrap Framework Integration\r\n\t\t\t\t\tbootstrap: new FormValidation.plugins.Bootstrap({\r\n\t\t\t\t\t\t//eleInvalidClass: '',\r\n\t\t\t\t\t\teleValidClass: '',\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t));\r\n\r\n\t\t// Step 3\r\n\t\t_validations.push(FormValidation.formValidation(\r\n\t\t\t_formEl,\r\n\t\t\t{\r\n\t\t\t\tfields: {\r\n\t\t\t\t\tdelivery: {\r\n\t\t\t\t\t\tvalidators: {\r\n\t\t\t\t\t\t\tnotEmpty: {\r\n\t\t\t\t\t\t\t\tmessage: 'Delivery type is required'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tpackaging: {\r\n\t\t\t\t\t\tvalidators: {\r\n\t\t\t\t\t\t\tnotEmpty: {\r\n\t\t\t\t\t\t\t\tmessage: 'Packaging type is required'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tpreferreddelivery: {\r\n\t\t\t\t\t\tvalidators: {\r\n\t\t\t\t\t\t\tnotEmpty: {\r\n\t\t\t\t\t\t\t\tmessage: 'Preferred delivery window is required'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tplugins: {\r\n\t\t\t\t\ttrigger: new FormValidation.plugins.Trigger(),\r\n\t\t\t\t\t// Bootstrap Framework Integration\r\n\t\t\t\t\tbootstrap: new FormValidation.plugins.Bootstrap({\r\n\t\t\t\t\t\t//eleInvalidClass: '',\r\n\t\t\t\t\t\teleValidClass: '',\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t));\r\n\r\n\t\t// Step 4\r\n\t\t_validations.push(FormValidation.formValidation(\r\n\t\t\t_formEl,\r\n\t\t\t{\r\n\t\t\t\tfields: {\r\n\t\t\t\t\tlocaddress1: {\r\n\t\t\t\t\t\tvalidators: {\r\n\t\t\t\t\t\t\tnotEmpty: {\r\n\t\t\t\t\t\t\t\tmessage: 'Address is required'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tlocpostcode: {\r\n\t\t\t\t\t\tvalidators: {\r\n\t\t\t\t\t\t\tnotEmpty: {\r\n\t\t\t\t\t\t\t\tmessage: 'Postcode is required'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tloccity: {\r\n\t\t\t\t\t\tvalidators: {\r\n\t\t\t\t\t\t\tnotEmpty: {\r\n\t\t\t\t\t\t\t\tmessage: 'City is required'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tlocstate: {\r\n\t\t\t\t\t\tvalidators: {\r\n\t\t\t\t\t\t\tnotEmpty: {\r\n\t\t\t\t\t\t\t\tmessage: 'State is required'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tloccountry: {\r\n\t\t\t\t\t\tvalidators: {\r\n\t\t\t\t\t\t\tnotEmpty: {\r\n\t\t\t\t\t\t\t\tmessage: 'Country is required'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tplugins: {\r\n\t\t\t\t\ttrigger: new FormValidation.plugins.Trigger(),\r\n\t\t\t\t\t// Validate fields when clicking the Submit button\r\n\t\t\t\t\t// Bootstrap Framework Integration\r\n\t\t\t\t\tbootstrap: new FormValidation.plugins.Bootstrap({\r\n\t\t\t\t\t\t//eleInvalidClass: '',\r\n\t\t\t\t\t\teleValidClass: '',\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t));\r\n\t}\r\n\r\n\treturn {\r\n\t\t// public functions\r\n\t\tinit: function () {\r\n\t\t\t_wizardEl = KTUtil.getById('kt_wizard_v3');\r\n\t\t\t_formEl = KTUtil.getById('kt_form');\r\n\r\n\t\t\t_initWizard();\r\n\t\t\t_initValidation();\r\n\t\t}\r\n\t};\r\n}();\r\n\r\njQuery(document).ready(function () {\r\n\tKTWizard3.init();\r\n});\r\n"]}