{"version":3,"sources":["paste/plugin.js"],"names":["eq","call","id","type","Cell","initial","value","get","set","v","global","tinymce","util","Tools","resolve","noop","constant","never","always","none","NONE","o","isNone","fold","n","_s","is","isSome","getOr","getOrThunk","thunk","getOrDie","msg","Error","getOrNull","getOrUndefined","undefined","or","orThunk","map","each","bind","exists","forall","filter","equals","equals_","toArray","toString","some","a","constant_a","self","me","f","s","elementEq","b","Optional","from","isNonNullable","isNullable","isFunction","nativeSlice","Array","prototype","slice","xs","pred","i","len","length","r","x","from$1","subject","clear","isSet","on","checkRange","str","substr","start","global$1","global$2","global$3","global$4","firePastePlainTextToggle","editor","state","fire","global$5","shouldPasteDataImages","getParam","shouldMergeFormats","getRetainStyleProps","getValidate","getAllowHtmlDataUrls","getPasteDataImages","getAllowedImageFileTypes","explode","internalMimeType","internalMark","isMarked","html","indexOf","internalHtmlMime","global$6","toBlockElements","text","rootTag","rootAttrs","blocks","split","tagOpen","key","attrs","tag","hasOwnProperty","push","encodeAllRaw","join","openContainer","tagClose","paragraphs","p","global$7","global$8","nbsp","global$9","global$a","filter$1","content","items","constructor","RegExp","replace","trimHtml","all","s1","s2","isWordContent","test","isNumericList","found","pattern","convertFakeListsToProperLists","node","currentListNode","prevListNode","lastLevel","getText","txt","firstChild","next","trimListStart","regExp","removeIgnoredNodes","_listIgnore","remove","convertParagraphToLi","paragraphNode","listName","level","_listLevel","parent","name","append","attr","wrap","lastChild","elements","child","walk","nodeText","matches","exec","parseInt","filterStyles","validStyles","styleValue","outputStyles","styles","dom","parseStyle","serializeStyle","prefix","count","preProcess","shouldUseDefaultFilters","retainStyleProperties","makeMap","spaces","Math","floor","validElements","getWordValidElements","schema","valid_elements","valid_children","rule","attributes","class","attributesOrder","style","domParser","addAttributeFilter","nodes","unwrap","className","addNodeFilter","href","rootNode","parse","shouldConvertWordFakeLists","validate","serialize","filterWordContent","processResult","cancelled","filterContent","internal","isWordHtml","preProcessArgs","wordContent","firePastePreProcess","filteredContent","parser","fragment","forced_root_block","isRootContent","preProcess$1","hasEventListeners","isDefaultPrevented","tempBody","create","postProcessArgs","firePastePostProcess","innerHTML","postProcessFilter","pasteHtml","insertContent","merge","paste","isAbsoluteUrl","url","isImageUrl","suffix","linkSelection","pasteHtmlFn","selection","isCollapsed","undoManager","extra","execCommand","createLink","insertImage","createImage","pasteAsText","isSmartPasteEnabled","action","smartInsertContent","isNewLineChar","c","normalizeWhitespace","acc","tabSpace","getTabSpaces","normalizedText","isCollapsibleWhitespace","pcIsSpace","idx","isNewline","doPaste","args","process","pasteHtml$1","internalFlag","unmark","pasteText","encodedText","encode","toBRs","convert","getForcedRootBlock","getForcedRootBlockAttrs","getDataTransferItems","dataTransfer","getData","legacyText","types","contentType","ex","hasContentType","clipboardContent","mimeType","hasHtmlOrText","uniqueId","pasteImage","imageItem","uri","_a","data","decodeURIComponent","base64","file","blob","img","Image","src","imgElm","getImagesDataImgFilter","isValidDataUriImage","blobCache","editorUpload","blobInfo","existingBlobInfo","getByData","useFileName","getImagesReuseFilename","name_1","m","match","extractFilename","filename","add","blobUri","readFilesAsDataUris","item","getAsFile","isDataTransferItem","reader","window","FileReader","onload","result","readAsDataURL","isImage","allowedExtensions","startsWith","extension","ext","mimeOverrides","jpg","jpe","jfi","jif","jfif","pjpeg","pjp","svg","hasOwn","pasteImageData","e","rng","clipboardData","images","files","getImagesFromDataTransfer","preventDefault","then","fileResults","setRng","isKeyboardPasteEvent","metaKeyPressed","keyCode","shiftKey","registerEventHandlers","pasteBin","pasteFormat","keyboardPastePlainTextState","keyboardPasteEvent","keyboardPastePressed","insertClipboardContent","isKeyBoardPaste","plainTextMode","getHtml","isDefaultContent","isPlainTextHtml","shortEndedElements","getShortEndedElements","ignoreElements","blockElements","getBlockElements","currentNode","shortEnded","innerText","windowManager","alert","removePasteBinOnKeyUp","webkit","navigator","userAgent","stopImmediatePropagation","ie","ieFake","firePaste","once","off","isKeyboardPaste","clipboardEvent","getDoc","getClipboardContent","isBrokenAndroidClipboardEvent","getLastRng","getRng","getEl","stopPropagation","setEditorTimeout","getPasteBinParent","inline","document","body","getBody","delegatePasteEvents","pasteBinElm","pasteBinDefaultContent","isExternalPasteBin","_e","isDefault","elm","PasteBin","lastRng","lastRngCell","contentEditable","data-mce-bogus","gecko","setStyle","getStyle","focus","select","pasteBinClone","unbind","copyAndRemove","toElm","fromElm","appendChild","pasteBinClones","grep","childNodes","shift","dirtyWrappers","cleanWrapper","insertBefore","Clipboard","transparentSrc","isWebKitFakeUrl","isDataUri","isPasteInsert","registerEventsAndFilters","register","clipboard","addCommand","togglePlainTextPaste","ui","setHtml5Clipboard","iOS","setData","hasWorkingClipboardApi","clearData","setClipboardData","evt","fallback","done","markedHtml","mark","outer","contenteditable","inner","setStyles","position","top","left","width","overflow","range","offscreenRange","createRng","selectNodeContents","setTimeout","parentNode","removeChild","getContent","contextual","format","hasSelectedContent","getParent","getStart","isTableSelection","register$1","browser","isChrome","isFirefox","rng_1","cut","copy","global$b","getCaretRangeFromEvent","getCaretRangeFromPoint","clientX","clientY","setFocusedRange","addPreProcessFilter","filterFunc","removeExplorerBrElementsAfterBlocks","block","blockName","removeWebKitStyles","webKitStyles","webKitStylesSetting","getWebkitStyles","shouldRemoveWebKitStyles","dom_1","node_1","getNode","before","after","inputStyles","decode","inputValue","currentValue","toHex","removeUnderlineAndFontInAnchor","root","$","find","makeSetupHandler","api","setActive","pastePlainTextToggleHandler","hasPlugin","console","log","hasProPlugin","draggingInternallyState","isPasteAsTextEnabled","quirks","addPostProcessFilter","setup$2","registry","addToggleButton","active","icon","tooltip","onAction","onSetup","addToggleMenuItem","register$2","plugin","plugins","getPreProcess","postProcess","getPostProcess","setup$1","shouldBlockDrop","plainTextContent","dropContent","shouldFilterDrop","content_1","transact","setup"],"mappings":"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","file":"plugin.js","sourcesContent":["/**\n * Copyright (c) Tiny Technologies, Inc. All rights reserved.\n * Licensed under the LGPL or a commercial license.\n * For LGPL see License.txt in the project root for license information.\n * For commercial licenses see https://www.tiny.cloud/\n *\n * Version: 5.6.2 (2020-12-08)\n */\n(function () {\n    'use strict';\n\n    var Cell = function (initial) {\n      var value = initial;\n      var get = function () {\n        return value;\n      };\n      var set = function (v) {\n        value = v;\n      };\n      return {\n        get: get,\n        set: set\n      };\n    };\n\n    var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var hasProPlugin = function (editor) {\n      if (editor.hasPlugin('powerpaste', true)) {\n        if (typeof window.console !== 'undefined' && window.console.log) {\n          window.console.log('PowerPaste is incompatible with Paste plugin! Remove \\'paste\\' from the \\'plugins\\' option.');\n        }\n        return true;\n      } else {\n        return false;\n      }\n    };\n\n    var get = function (clipboard, quirks) {\n      return {\n        clipboard: clipboard,\n        quirks: quirks\n      };\n    };\n\n    var noop = function () {\n    };\n    var constant = function (value) {\n      return function () {\n        return value;\n      };\n    };\n    var never = constant(false);\n    var always = constant(true);\n\n    var none = function () {\n      return NONE;\n    };\n    var NONE = function () {\n      var eq = function (o) {\n        return o.isNone();\n      };\n      var call = function (thunk) {\n        return thunk();\n      };\n      var id = function (n) {\n        return n;\n      };\n      var me = {\n        fold: function (n, _s) {\n          return n();\n        },\n        is: never,\n        isSome: never,\n        isNone: always,\n        getOr: id,\n        getOrThunk: call,\n        getOrDie: function (msg) {\n          throw new Error(msg || 'error: getOrDie called on none.');\n        },\n        getOrNull: constant(null),\n        getOrUndefined: constant(undefined),\n        or: id,\n        orThunk: call,\n        map: none,\n        each: noop,\n        bind: none,\n        exists: never,\n        forall: always,\n        filter: none,\n        equals: eq,\n        equals_: eq,\n        toArray: function () {\n          return [];\n        },\n        toString: constant('none()')\n      };\n      return me;\n    }();\n    var some = function (a) {\n      var constant_a = constant(a);\n      var self = function () {\n        return me;\n      };\n      var bind = function (f) {\n        return f(a);\n      };\n      var me = {\n        fold: function (n, s) {\n          return s(a);\n        },\n        is: function (v) {\n          return a === v;\n        },\n        isSome: always,\n        isNone: never,\n        getOr: constant_a,\n        getOrThunk: constant_a,\n        getOrDie: constant_a,\n        getOrNull: constant_a,\n        getOrUndefined: constant_a,\n        or: self,\n        orThunk: self,\n        map: function (f) {\n          return some(f(a));\n        },\n        each: function (f) {\n          f(a);\n        },\n        bind: bind,\n        exists: bind,\n        forall: bind,\n        filter: function (f) {\n          return f(a) ? me : NONE;\n        },\n        toArray: function () {\n          return [a];\n        },\n        toString: function () {\n          return 'some(' + a + ')';\n        },\n        equals: function (o) {\n          return o.is(a);\n        },\n        equals_: function (o, elementEq) {\n          return o.fold(never, function (b) {\n            return elementEq(a, b);\n          });\n        }\n      };\n      return me;\n    };\n    var from = function (value) {\n      return value === null || value === undefined ? NONE : some(value);\n    };\n    var Optional = {\n      some: some,\n      none: none,\n      from: from\n    };\n\n    var isSimpleType = function (type) {\n      return function (value) {\n        return typeof value === type;\n      };\n    };\n    var isNullable = function (a) {\n      return a === null || a === undefined;\n    };\n    var isNonNullable = function (a) {\n      return !isNullable(a);\n    };\n    var isFunction = isSimpleType('function');\n\n    var nativeSlice = Array.prototype.slice;\n    var exists = function (xs, pred) {\n      for (var i = 0, len = xs.length; i < len; i++) {\n        var x = xs[i];\n        if (pred(x, i)) {\n          return true;\n        }\n      }\n      return false;\n    };\n    var map = function (xs, f) {\n      var len = xs.length;\n      var r = new Array(len);\n      for (var i = 0; i < len; i++) {\n        var x = xs[i];\n        r[i] = f(x, i);\n      }\n      return r;\n    };\n    var each = function (xs, f) {\n      for (var i = 0, len = xs.length; i < len; i++) {\n        var x = xs[i];\n        f(x, i);\n      }\n    };\n    var filter = function (xs, pred) {\n      var r = [];\n      for (var i = 0, len = xs.length; i < len; i++) {\n        var x = xs[i];\n        if (pred(x, i)) {\n          r.push(x);\n        }\n      }\n      return r;\n    };\n    var foldl = function (xs, f, acc) {\n      each(xs, function (x) {\n        acc = f(acc, x);\n      });\n      return acc;\n    };\n    var from$1 = isFunction(Array.from) ? Array.from : function (x) {\n      return nativeSlice.call(x);\n    };\n\n    var value = function () {\n      var subject = Cell(Optional.none());\n      var clear = function () {\n        return subject.set(Optional.none());\n      };\n      var set = function (s) {\n        return subject.set(Optional.some(s));\n      };\n      var isSet = function () {\n        return subject.get().isSome();\n      };\n      var on = function (f) {\n        return subject.get().each(f);\n      };\n      return {\n        clear: clear,\n        set: set,\n        isSet: isSet,\n        on: on\n      };\n    };\n\n    var checkRange = function (str, substr, start) {\n      return substr === '' || str.length >= substr.length && str.substr(start, start + substr.length) === substr;\n    };\n    var startsWith = function (str, prefix) {\n      return checkRange(str, prefix, 0);\n    };\n    var endsWith = function (str, suffix) {\n      return checkRange(str, suffix, str.length - suffix.length);\n    };\n    var repeat = function (s, count) {\n      return count <= 0 ? '' : new Array(count + 1).join(s);\n    };\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.Env');\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.util.Delay');\n\n    var global$3 = tinymce.util.Tools.resolve('tinymce.util.Promise');\n\n    var global$4 = tinymce.util.Tools.resolve('tinymce.util.VK');\n\n    var firePastePreProcess = function (editor, html, internal, isWordHtml) {\n      return editor.fire('PastePreProcess', {\n        content: html,\n        internal: internal,\n        wordContent: isWordHtml\n      });\n    };\n    var firePastePostProcess = function (editor, node, internal, isWordHtml) {\n      return editor.fire('PastePostProcess', {\n        node: node,\n        internal: internal,\n        wordContent: isWordHtml\n      });\n    };\n    var firePastePlainTextToggle = function (editor, state) {\n      return editor.fire('PastePlainTextToggle', { state: state });\n    };\n    var firePaste = function (editor, ieFake) {\n      return editor.fire('paste', { ieFake: ieFake });\n    };\n\n    var global$5 = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    var shouldBlockDrop = function (editor) {\n      return editor.getParam('paste_block_drop', false);\n    };\n    var shouldPasteDataImages = function (editor) {\n      return editor.getParam('paste_data_images', false);\n    };\n    var shouldFilterDrop = function (editor) {\n      return editor.getParam('paste_filter_drop', true);\n    };\n    var getPreProcess = function (editor) {\n      return editor.getParam('paste_preprocess');\n    };\n    var getPostProcess = function (editor) {\n      return editor.getParam('paste_postprocess');\n    };\n    var getWebkitStyles = function (editor) {\n      return editor.getParam('paste_webkit_styles');\n    };\n    var shouldRemoveWebKitStyles = function (editor) {\n      return editor.getParam('paste_remove_styles_if_webkit', true);\n    };\n    var shouldMergeFormats = function (editor) {\n      return editor.getParam('paste_merge_formats', true);\n    };\n    var isSmartPasteEnabled = function (editor) {\n      return editor.getParam('smart_paste', true);\n    };\n    var isPasteAsTextEnabled = function (editor) {\n      return editor.getParam('paste_as_text', false);\n    };\n    var getRetainStyleProps = function (editor) {\n      return editor.getParam('paste_retain_style_properties');\n    };\n    var getWordValidElements = function (editor) {\n      var defaultValidElements = '-strong/b,-em/i,-u,-span,-p,-ol,-ul,-li,-h1,-h2,-h3,-h4,-h5,-h6,' + '-p/div,-a[href|name],sub,sup,strike,br,del,table[width],tr,' + 'td[colspan|rowspan|width],th[colspan|rowspan|width],thead,tfoot,tbody';\n      return editor.getParam('paste_word_valid_elements', defaultValidElements);\n    };\n    var shouldConvertWordFakeLists = function (editor) {\n      return editor.getParam('paste_convert_word_fake_lists', true);\n    };\n    var shouldUseDefaultFilters = function (editor) {\n      return editor.getParam('paste_enable_default_filters', true);\n    };\n    var getValidate = function (editor) {\n      return editor.getParam('validate');\n    };\n    var getAllowHtmlDataUrls = function (editor) {\n      return editor.getParam('allow_html_data_urls', false, 'boolean');\n    };\n    var getPasteDataImages = function (editor) {\n      return editor.getParam('paste_data_images', false, 'boolean');\n    };\n    var getImagesDataImgFilter = function (editor) {\n      return editor.getParam('images_dataimg_filter');\n    };\n    var getImagesReuseFilename = function (editor) {\n      return editor.getParam('images_reuse_filename');\n    };\n    var getForcedRootBlock = function (editor) {\n      return editor.getParam('forced_root_block');\n    };\n    var getForcedRootBlockAttrs = function (editor) {\n      return editor.getParam('forced_root_block_attrs');\n    };\n    var getTabSpaces = function (editor) {\n      return editor.getParam('paste_tab_spaces', 4, 'number');\n    };\n    var getAllowedImageFileTypes = function (editor) {\n      var defaultImageFileTypes = 'jpeg,jpg,jpe,jfi,jif,jfif,png,gif,bmp,webp';\n      return global$5.explode(editor.getParam('images_file_types', defaultImageFileTypes, 'string'));\n    };\n\n    var internalMimeType = 'x-tinymce/html';\n    var internalMark = '<!-- ' + internalMimeType + ' -->';\n    var mark = function (html) {\n      return internalMark + html;\n    };\n    var unmark = function (html) {\n      return html.replace(internalMark, '');\n    };\n    var isMarked = function (html) {\n      return html.indexOf(internalMark) !== -1;\n    };\n    var internalHtmlMime = function () {\n      return internalMimeType;\n    };\n\n    var global$6 = tinymce.util.Tools.resolve('tinymce.html.Entities');\n\n    var isPlainText = function (text) {\n      return !/<(?:\\/?(?!(?:div|p|br|span)>)\\w+|(?:(?!(?:span style=\"white-space:\\s?pre;?\">)|br\\s?\\/>))\\w+\\s[^>]+)>/i.test(text);\n    };\n    var toBRs = function (text) {\n      return text.replace(/\\r?\\n/g, '<br>');\n    };\n    var openContainer = function (rootTag, rootAttrs) {\n      var key;\n      var attrs = [];\n      var tag = '<' + rootTag;\n      if (typeof rootAttrs === 'object') {\n        for (key in rootAttrs) {\n          if (rootAttrs.hasOwnProperty(key)) {\n            attrs.push(key + '=\"' + global$6.encodeAllRaw(rootAttrs[key]) + '\"');\n          }\n        }\n        if (attrs.length) {\n          tag += ' ' + attrs.join(' ');\n        }\n      }\n      return tag + '>';\n    };\n    var toBlockElements = function (text, rootTag, rootAttrs) {\n      var blocks = text.split(/\\n\\n/);\n      var tagOpen = openContainer(rootTag, rootAttrs);\n      var tagClose = '</' + rootTag + '>';\n      var paragraphs = global$5.map(blocks, function (p) {\n        return p.split(/\\n/).join('<br />');\n      });\n      var stitch = function (p) {\n        return tagOpen + p + tagClose;\n      };\n      return paragraphs.length === 1 ? paragraphs[0] : global$5.map(paragraphs, stitch).join('');\n    };\n    var convert = function (text, rootTag, rootAttrs) {\n      return rootTag ? toBlockElements(text, rootTag === true ? 'p' : rootTag, rootAttrs) : toBRs(text);\n    };\n\n    var global$7 = tinymce.util.Tools.resolve('tinymce.html.DomParser');\n\n    var global$8 = tinymce.util.Tools.resolve('tinymce.html.Serializer');\n\n    var nbsp = '\\xA0';\n\n    var global$9 = tinymce.util.Tools.resolve('tinymce.html.Node');\n\n    var global$a = tinymce.util.Tools.resolve('tinymce.html.Schema');\n\n    function filter$1(content, items) {\n      global$5.each(items, function (v) {\n        if (v.constructor === RegExp) {\n          content = content.replace(v, '');\n        } else {\n          content = content.replace(v[0], v[1]);\n        }\n      });\n      return content;\n    }\n    function innerText(html) {\n      var schema = global$a();\n      var domParser = global$7({}, schema);\n      var text = '';\n      var shortEndedElements = schema.getShortEndedElements();\n      var ignoreElements = global$5.makeMap('script noscript style textarea video audio iframe object', ' ');\n      var blockElements = schema.getBlockElements();\n      function walk(node) {\n        var name = node.name, currentNode = node;\n        if (name === 'br') {\n          text += '\\n';\n          return;\n        }\n        if (name === 'wbr') {\n          return;\n        }\n        if (shortEndedElements[name]) {\n          text += ' ';\n        }\n        if (ignoreElements[name]) {\n          text += ' ';\n          return;\n        }\n        if (node.type === 3) {\n          text += node.value;\n        }\n        if (!node.shortEnded) {\n          if (node = node.firstChild) {\n            do {\n              walk(node);\n            } while (node = node.next);\n          }\n        }\n        if (blockElements[name] && currentNode.next) {\n          text += '\\n';\n          if (name === 'p') {\n            text += '\\n';\n          }\n        }\n      }\n      html = filter$1(html, [/<!\\[[^\\]]+\\]>/g]);\n      walk(domParser.parse(html));\n      return text;\n    }\n    function trimHtml(html) {\n      function trimSpaces(all, s1, s2) {\n        if (!s1 && !s2) {\n          return ' ';\n        }\n        return nbsp;\n      }\n      html = filter$1(html, [\n        /^[\\s\\S]*<body[^>]*>\\s*|\\s*<\\/body[^>]*>[\\s\\S]*$/ig,\n        /<!--StartFragment-->|<!--EndFragment-->/g,\n        [\n          /( ?)<span class=\"Apple-converted-space\">\\u00a0<\\/span>( ?)/g,\n          trimSpaces\n        ],\n        /<br class=\"Apple-interchange-newline\">/g,\n        /<br>$/i\n      ]);\n      return html;\n    }\n    function createIdGenerator(prefix) {\n      var count = 0;\n      return function () {\n        return prefix + count++;\n      };\n    }\n    var getImageMimeType = function (ext) {\n      var mimeOverrides = {\n        jpg: 'jpeg',\n        jpe: 'jpeg',\n        jfi: 'jpeg',\n        jif: 'jpeg',\n        jfif: 'jpeg',\n        pjpeg: 'jpeg',\n        pjp: 'jpeg',\n        svg: 'svg+xml'\n      };\n      return global$5.hasOwn(mimeOverrides, ext) ? 'image/' + mimeOverrides[ext] : 'image/' + ext;\n    };\n\n    function isWordContent(content) {\n      return /<font face=\"Times New Roman\"|class=\"?Mso|style=\"[^\"]*\\bmso-|style='[^']*\\bmso-|w:WordDocument/i.test(content) || /class=\"OutlineElement/.test(content) || /id=\"?docs\\-internal\\-guid\\-/.test(content);\n    }\n    function isNumericList(text) {\n      var found;\n      var patterns = [\n        /^[IVXLMCD]{1,2}\\.[ \\u00a0]/,\n        /^[ivxlmcd]{1,2}\\.[ \\u00a0]/,\n        /^[a-z]{1,2}[\\.\\)][ \\u00a0]/,\n        /^[A-Z]{1,2}[\\.\\)][ \\u00a0]/,\n        /^[0-9]+\\.[ \\u00a0]/,\n        /^[\\u3007\\u4e00\\u4e8c\\u4e09\\u56db\\u4e94\\u516d\\u4e03\\u516b\\u4e5d]+\\.[ \\u00a0]/,\n        /^[\\u58f1\\u5f10\\u53c2\\u56db\\u4f0d\\u516d\\u4e03\\u516b\\u4e5d\\u62fe]+\\.[ \\u00a0]/\n      ];\n      text = text.replace(/^[\\u00a0 ]+/, '');\n      global$5.each(patterns, function (pattern) {\n        if (pattern.test(text)) {\n          found = true;\n          return false;\n        }\n      });\n      return found;\n    }\n    function isBulletList(text) {\n      return /^[\\s\\u00a0]*[\\u2022\\u00b7\\u00a7\\u25CF]\\s*/.test(text);\n    }\n    function convertFakeListsToProperLists(node) {\n      var currentListNode, prevListNode, lastLevel = 1;\n      function getText(node) {\n        var txt = '';\n        if (node.type === 3) {\n          return node.value;\n        }\n        if (node = node.firstChild) {\n          do {\n            txt += getText(node);\n          } while (node = node.next);\n        }\n        return txt;\n      }\n      function trimListStart(node, regExp) {\n        if (node.type === 3) {\n          if (regExp.test(node.value)) {\n            node.value = node.value.replace(regExp, '');\n            return false;\n          }\n        }\n        if (node = node.firstChild) {\n          do {\n            if (!trimListStart(node, regExp)) {\n              return false;\n            }\n          } while (node = node.next);\n        }\n        return true;\n      }\n      function removeIgnoredNodes(node) {\n        if (node._listIgnore) {\n          node.remove();\n          return;\n        }\n        if (node = node.firstChild) {\n          do {\n            removeIgnoredNodes(node);\n          } while (node = node.next);\n        }\n      }\n      function convertParagraphToLi(paragraphNode, listName, start) {\n        var level = paragraphNode._listLevel || lastLevel;\n        if (level !== lastLevel) {\n          if (level < lastLevel) {\n            if (currentListNode) {\n              currentListNode = currentListNode.parent.parent;\n            }\n          } else {\n            prevListNode = currentListNode;\n            currentListNode = null;\n          }\n        }\n        if (!currentListNode || currentListNode.name !== listName) {\n          prevListNode = prevListNode || currentListNode;\n          currentListNode = new global$9(listName, 1);\n          if (start > 1) {\n            currentListNode.attr('start', '' + start);\n          }\n          paragraphNode.wrap(currentListNode);\n        } else {\n          currentListNode.append(paragraphNode);\n        }\n        paragraphNode.name = 'li';\n        if (level > lastLevel && prevListNode) {\n          prevListNode.lastChild.append(currentListNode);\n        }\n        lastLevel = level;\n        removeIgnoredNodes(paragraphNode);\n        trimListStart(paragraphNode, /^\\u00a0+/);\n        trimListStart(paragraphNode, /^\\s*([\\u2022\\u00b7\\u00a7\\u25CF]|\\w+\\.)/);\n        trimListStart(paragraphNode, /^\\u00a0+/);\n      }\n      var elements = [];\n      var child = node.firstChild;\n      while (typeof child !== 'undefined' && child !== null) {\n        elements.push(child);\n        child = child.walk();\n        if (child !== null) {\n          while (typeof child !== 'undefined' && child.parent !== node) {\n            child = child.walk();\n          }\n        }\n      }\n      for (var i = 0; i < elements.length; i++) {\n        node = elements[i];\n        if (node.name === 'p' && node.firstChild) {\n          var nodeText = getText(node);\n          if (isBulletList(nodeText)) {\n            convertParagraphToLi(node, 'ul');\n            continue;\n          }\n          if (isNumericList(nodeText)) {\n            var matches = /([0-9]+)\\./.exec(nodeText);\n            var start = 1;\n            if (matches) {\n              start = parseInt(matches[1], 10);\n            }\n            convertParagraphToLi(node, 'ol', start);\n            continue;\n          }\n          if (node._listLevel) {\n            convertParagraphToLi(node, 'ul', 1);\n            continue;\n          }\n          currentListNode = null;\n        } else {\n          prevListNode = currentListNode;\n          currentListNode = null;\n        }\n      }\n    }\n    function filterStyles(editor, validStyles, node, styleValue) {\n      var outputStyles = {}, matches;\n      var styles = editor.dom.parseStyle(styleValue);\n      global$5.each(styles, function (value, name) {\n        switch (name) {\n        case 'mso-list':\n          matches = /\\w+ \\w+([0-9]+)/i.exec(styleValue);\n          if (matches) {\n            node._listLevel = parseInt(matches[1], 10);\n          }\n          if (/Ignore/i.test(value) && node.firstChild) {\n            node._listIgnore = true;\n            node.firstChild._listIgnore = true;\n          }\n          break;\n        case 'horiz-align':\n          name = 'text-align';\n          break;\n        case 'vert-align':\n          name = 'vertical-align';\n          break;\n        case 'font-color':\n        case 'mso-foreground':\n          name = 'color';\n          break;\n        case 'mso-background':\n        case 'mso-highlight':\n          name = 'background';\n          break;\n        case 'font-weight':\n        case 'font-style':\n          if (value !== 'normal') {\n            outputStyles[name] = value;\n          }\n          return;\n        case 'mso-element':\n          if (/^(comment|comment-list)$/i.test(value)) {\n            node.remove();\n            return;\n          }\n          break;\n        }\n        if (name.indexOf('mso-comment') === 0) {\n          node.remove();\n          return;\n        }\n        if (name.indexOf('mso-') === 0) {\n          return;\n        }\n        if (getRetainStyleProps(editor) === 'all' || validStyles && validStyles[name]) {\n          outputStyles[name] = value;\n        }\n      });\n      if (/(bold)/i.test(outputStyles['font-weight'])) {\n        delete outputStyles['font-weight'];\n        node.wrap(new global$9('b', 1));\n      }\n      if (/(italic)/i.test(outputStyles['font-style'])) {\n        delete outputStyles['font-style'];\n        node.wrap(new global$9('i', 1));\n      }\n      outputStyles = editor.dom.serializeStyle(outputStyles, node.name);\n      if (outputStyles) {\n        return outputStyles;\n      }\n      return null;\n    }\n    var filterWordContent = function (editor, content) {\n      var validStyles;\n      var retainStyleProperties = getRetainStyleProps(editor);\n      if (retainStyleProperties) {\n        validStyles = global$5.makeMap(retainStyleProperties.split(/[, ]/));\n      }\n      content = filter$1(content, [\n        /<br class=\"?Apple-interchange-newline\"?>/gi,\n        /<b[^>]+id=\"?docs-internal-[^>]*>/gi,\n        /<!--[\\s\\S]+?-->/gi,\n        /<(!|script[^>]*>.*?<\\/script(?=[>\\s])|\\/?(\\?xml(:\\w+)?|img|meta|link|style|\\w:\\w+)(?=[\\s\\/>]))[^>]*>/gi,\n        [\n          /<(\\/?)s>/gi,\n          '<$1strike>'\n        ],\n        [\n          /&nbsp;/gi,\n          nbsp\n        ],\n        [\n          /<span\\s+style\\s*=\\s*\"\\s*mso-spacerun\\s*:\\s*yes\\s*;?\\s*\"\\s*>([\\s\\u00a0]*)<\\/span>/gi,\n          function (str, spaces) {\n            return spaces.length > 0 ? spaces.replace(/./, ' ').slice(Math.floor(spaces.length / 2)).split('').join(nbsp) : '';\n          }\n        ]\n      ]);\n      var validElements = getWordValidElements(editor);\n      var schema = global$a({\n        valid_elements: validElements,\n        valid_children: '-li[p]'\n      });\n      global$5.each(schema.elements, function (rule) {\n        if (!rule.attributes.class) {\n          rule.attributes.class = {};\n          rule.attributesOrder.push('class');\n        }\n        if (!rule.attributes.style) {\n          rule.attributes.style = {};\n          rule.attributesOrder.push('style');\n        }\n      });\n      var domParser = global$7({}, schema);\n      domParser.addAttributeFilter('style', function (nodes) {\n        var i = nodes.length, node;\n        while (i--) {\n          node = nodes[i];\n          node.attr('style', filterStyles(editor, validStyles, node, node.attr('style')));\n          if (node.name === 'span' && node.parent && !node.attributes.length) {\n            node.unwrap();\n          }\n        }\n      });\n      domParser.addAttributeFilter('class', function (nodes) {\n        var i = nodes.length, node, className;\n        while (i--) {\n          node = nodes[i];\n          className = node.attr('class');\n          if (/^(MsoCommentReference|MsoCommentText|msoDel)$/i.test(className)) {\n            node.remove();\n          }\n          node.attr('class', null);\n        }\n      });\n      domParser.addNodeFilter('del', function (nodes) {\n        var i = nodes.length;\n        while (i--) {\n          nodes[i].remove();\n        }\n      });\n      domParser.addNodeFilter('a', function (nodes) {\n        var i = nodes.length, node, href, name;\n        while (i--) {\n          node = nodes[i];\n          href = node.attr('href');\n          name = node.attr('name');\n          if (href && href.indexOf('#_msocom_') !== -1) {\n            node.remove();\n            continue;\n          }\n          if (href && href.indexOf('file://') === 0) {\n            href = href.split('#')[1];\n            if (href) {\n              href = '#' + href;\n            }\n          }\n          if (!href && !name) {\n            node.unwrap();\n          } else {\n            if (name && !/^_?(?:toc|edn|ftn)/i.test(name)) {\n              node.unwrap();\n              continue;\n            }\n            node.attr({\n              href: href,\n              name: name\n            });\n          }\n        }\n      });\n      var rootNode = domParser.parse(content);\n      if (shouldConvertWordFakeLists(editor)) {\n        convertFakeListsToProperLists(rootNode);\n      }\n      content = global$8({ validate: getValidate(editor) }, schema).serialize(rootNode);\n      return content;\n    };\n    var preProcess = function (editor, content) {\n      return shouldUseDefaultFilters(editor) ? filterWordContent(editor, content) : content;\n    };\n\n    var preProcess$1 = function (editor, html) {\n      var parser = global$7({}, editor.schema);\n      parser.addNodeFilter('meta', function (nodes) {\n        global$5.each(nodes, function (node) {\n          node.remove();\n        });\n      });\n      var fragment = parser.parse(html, {\n        forced_root_block: false,\n        isRootContent: true\n      });\n      return global$8({ validate: getValidate(editor) }, editor.schema).serialize(fragment);\n    };\n    var processResult = function (content, cancelled) {\n      return {\n        content: content,\n        cancelled: cancelled\n      };\n    };\n    var postProcessFilter = function (editor, html, internal, isWordHtml) {\n      var tempBody = editor.dom.create('div', { style: 'display:none' }, html);\n      var postProcessArgs = firePastePostProcess(editor, tempBody, internal, isWordHtml);\n      return processResult(postProcessArgs.node.innerHTML, postProcessArgs.isDefaultPrevented());\n    };\n    var filterContent = function (editor, content, internal, isWordHtml) {\n      var preProcessArgs = firePastePreProcess(editor, content, internal, isWordHtml);\n      var filteredContent = preProcess$1(editor, preProcessArgs.content);\n      if (editor.hasEventListeners('PastePostProcess') && !preProcessArgs.isDefaultPrevented()) {\n        return postProcessFilter(editor, filteredContent, internal, isWordHtml);\n      } else {\n        return processResult(filteredContent, preProcessArgs.isDefaultPrevented());\n      }\n    };\n    var process = function (editor, html, internal) {\n      var isWordHtml = isWordContent(html);\n      var content = isWordHtml ? preProcess(editor, html) : html;\n      return filterContent(editor, content, internal, isWordHtml);\n    };\n\n    var pasteHtml = function (editor, html) {\n      editor.insertContent(html, {\n        merge: shouldMergeFormats(editor),\n        paste: true\n      });\n      return true;\n    };\n    var isAbsoluteUrl = function (url) {\n      return /^https?:\\/\\/[\\w\\?\\-\\/+=.&%@~#]+$/i.test(url);\n    };\n    var isImageUrl = function (editor, url) {\n      return isAbsoluteUrl(url) && exists(getAllowedImageFileTypes(editor), function (type) {\n        return endsWith(url, '.' + type);\n      });\n    };\n    var createImage = function (editor, url, pasteHtmlFn) {\n      editor.undoManager.extra(function () {\n        pasteHtmlFn(editor, url);\n      }, function () {\n        editor.insertContent('<img src=\"' + url + '\">');\n      });\n      return true;\n    };\n    var createLink = function (editor, url, pasteHtmlFn) {\n      editor.undoManager.extra(function () {\n        pasteHtmlFn(editor, url);\n      }, function () {\n        editor.execCommand('mceInsertLink', false, url);\n      });\n      return true;\n    };\n    var linkSelection = function (editor, html, pasteHtmlFn) {\n      return editor.selection.isCollapsed() === false && isAbsoluteUrl(html) ? createLink(editor, html, pasteHtmlFn) : false;\n    };\n    var insertImage = function (editor, html, pasteHtmlFn) {\n      return isImageUrl(editor, html) ? createImage(editor, html, pasteHtmlFn) : false;\n    };\n    var smartInsertContent = function (editor, html) {\n      global$5.each([\n        linkSelection,\n        insertImage,\n        pasteHtml\n      ], function (action) {\n        return action(editor, html, pasteHtml) !== true;\n      });\n    };\n    var insertContent = function (editor, html, pasteAsText) {\n      if (pasteAsText || isSmartPasteEnabled(editor) === false) {\n        pasteHtml(editor, html);\n      } else {\n        smartInsertContent(editor, html);\n      }\n    };\n\n    var isCollapsibleWhitespace = function (c) {\n      return ' \\f\\t\\x0B'.indexOf(c) !== -1;\n    };\n    var isNewLineChar = function (c) {\n      return c === '\\n' || c === '\\r';\n    };\n    var isNewline = function (text, idx) {\n      return idx < text.length && idx >= 0 ? isNewLineChar(text[idx]) : false;\n    };\n    var normalizeWhitespace = function (editor, text) {\n      var tabSpace = repeat(' ', getTabSpaces(editor));\n      var normalizedText = text.replace(/\\t/g, tabSpace);\n      var result = foldl(normalizedText, function (acc, c) {\n        if (isCollapsibleWhitespace(c) || c === nbsp) {\n          if (acc.pcIsSpace || acc.str === '' || acc.str.length === normalizedText.length - 1 || isNewline(normalizedText, acc.str.length + 1)) {\n            return {\n              pcIsSpace: false,\n              str: acc.str + nbsp\n            };\n          } else {\n            return {\n              pcIsSpace: true,\n              str: acc.str + ' '\n            };\n          }\n        } else {\n          return {\n            pcIsSpace: isNewLineChar(c),\n            str: acc.str + c\n          };\n        }\n      }, {\n        pcIsSpace: false,\n        str: ''\n      });\n      return result.str;\n    };\n\n    var doPaste = function (editor, content, internal, pasteAsText) {\n      var args = process(editor, content, internal);\n      if (args.cancelled === false) {\n        insertContent(editor, args.content, pasteAsText);\n      }\n    };\n    var pasteHtml$1 = function (editor, html, internalFlag) {\n      var internal = internalFlag ? internalFlag : isMarked(html);\n      doPaste(editor, unmark(html), internal, false);\n    };\n    var pasteText = function (editor, text) {\n      var encodedText = editor.dom.encode(text).replace(/\\r\\n/g, '\\n');\n      var normalizedText = normalizeWhitespace(editor, encodedText);\n      var html = convert(normalizedText, getForcedRootBlock(editor), getForcedRootBlockAttrs(editor));\n      doPaste(editor, html, false, true);\n    };\n    var getDataTransferItems = function (dataTransfer) {\n      var items = {};\n      var mceInternalUrlPrefix = 'data:text/mce-internal,';\n      if (dataTransfer) {\n        if (dataTransfer.getData) {\n          var legacyText = dataTransfer.getData('Text');\n          if (legacyText && legacyText.length > 0) {\n            if (legacyText.indexOf(mceInternalUrlPrefix) === -1) {\n              items['text/plain'] = legacyText;\n            }\n          }\n        }\n        if (dataTransfer.types) {\n          for (var i = 0; i < dataTransfer.types.length; i++) {\n            var contentType = dataTransfer.types[i];\n            try {\n              items[contentType] = dataTransfer.getData(contentType);\n            } catch (ex) {\n              items[contentType] = '';\n            }\n          }\n        }\n      }\n      return items;\n    };\n    var getClipboardContent = function (editor, clipboardEvent) {\n      return getDataTransferItems(clipboardEvent.clipboardData || editor.getDoc().dataTransfer);\n    };\n    var hasContentType = function (clipboardContent, mimeType) {\n      return mimeType in clipboardContent && clipboardContent[mimeType].length > 0;\n    };\n    var hasHtmlOrText = function (content) {\n      return hasContentType(content, 'text/html') || hasContentType(content, 'text/plain');\n    };\n    var parseDataUri = function (uri) {\n      var matches = /data:([^;]+);base64,([a-z0-9\\+\\/=]+)/i.exec(uri);\n      if (matches) {\n        return {\n          type: matches[1],\n          data: decodeURIComponent(matches[2])\n        };\n      } else {\n        return {\n          type: null,\n          data: null\n        };\n      }\n    };\n    var isValidDataUriImage = function (editor, imgElm) {\n      var filter = getImagesDataImgFilter(editor);\n      return filter ? filter(imgElm) : true;\n    };\n    var extractFilename = function (editor, str) {\n      var m = str.match(/([\\s\\S]+?)(?:\\.[a-z0-9.]+)$/i);\n      return isNonNullable(m) ? editor.dom.encode(m[1]) : null;\n    };\n    var uniqueId = createIdGenerator('mceclip');\n    var pasteImage = function (editor, imageItem) {\n      var _a = parseDataUri(imageItem.uri), base64 = _a.data, type = _a.type;\n      var id = uniqueId();\n      var file = imageItem.blob;\n      var img = new Image();\n      img.src = imageItem.uri;\n      if (isValidDataUriImage(editor, img)) {\n        var blobCache = editor.editorUpload.blobCache;\n        var blobInfo = void 0;\n        var existingBlobInfo = blobCache.getByData(base64, type);\n        if (!existingBlobInfo) {\n          var useFileName = getImagesReuseFilename(editor) && isNonNullable(file.name);\n          var name_1 = useFileName ? extractFilename(editor, file.name) : id;\n          var filename = useFileName ? file.name : undefined;\n          blobInfo = blobCache.create(id, file, base64, name_1, filename);\n          blobCache.add(blobInfo);\n        } else {\n          blobInfo = existingBlobInfo;\n        }\n        pasteHtml$1(editor, '<img src=\"' + blobInfo.blobUri() + '\">', false);\n      } else {\n        pasteHtml$1(editor, '<img src=\"' + imageItem.uri + '\">', false);\n      }\n    };\n    var isClipboardEvent = function (event) {\n      return event.type === 'paste';\n    };\n    var isDataTransferItem = function (item) {\n      return isNonNullable(item.getAsFile);\n    };\n    var readFilesAsDataUris = function (items) {\n      return global$3.all(map(items, function (item) {\n        return new global$3(function (resolve) {\n          var blob = isDataTransferItem(item) ? item.getAsFile() : item;\n          var reader = new window.FileReader();\n          reader.onload = function () {\n            resolve({\n              blob: blob,\n              uri: reader.result\n            });\n          };\n          reader.readAsDataURL(blob);\n        });\n      }));\n    };\n    var isImage = function (editor) {\n      var allowedExtensions = getAllowedImageFileTypes(editor);\n      return function (file) {\n        return startsWith(file.type, 'image/') && exists(allowedExtensions, function (extension) {\n          return getImageMimeType(extension) === file.type;\n        });\n      };\n    };\n    var getImagesFromDataTransfer = function (editor, dataTransfer) {\n      var items = dataTransfer.items ? map(from$1(dataTransfer.items), function (item) {\n        return item.getAsFile();\n      }) : [];\n      var files = dataTransfer.files ? from$1(dataTransfer.files) : [];\n      return filter(items.length > 0 ? items : files, isImage(editor));\n    };\n    var pasteImageData = function (editor, e, rng) {\n      var dataTransfer = isClipboardEvent(e) ? e.clipboardData : e.dataTransfer;\n      if (getPasteDataImages(editor) && dataTransfer) {\n        var images = getImagesFromDataTransfer(editor, dataTransfer);\n        if (images.length > 0) {\n          e.preventDefault();\n          readFilesAsDataUris(images).then(function (fileResults) {\n            if (rng) {\n              editor.selection.setRng(rng);\n            }\n            each(fileResults, function (result) {\n              pasteImage(editor, result);\n            });\n          });\n          return true;\n        }\n      }\n      return false;\n    };\n    var isBrokenAndroidClipboardEvent = function (e) {\n      var clipboardData = e.clipboardData;\n      return navigator.userAgent.indexOf('Android') !== -1 && clipboardData && clipboardData.items && clipboardData.items.length === 0;\n    };\n    var isKeyboardPasteEvent = function (e) {\n      return global$4.metaKeyPressed(e) && e.keyCode === 86 || e.shiftKey && e.keyCode === 45;\n    };\n    var registerEventHandlers = function (editor, pasteBin, pasteFormat) {\n      var keyboardPasteEvent = value();\n      var keyboardPastePressed = value();\n      var keyboardPastePlainTextState;\n      editor.on('keyup', keyboardPastePressed.clear);\n      editor.on('keydown', function (e) {\n        var removePasteBinOnKeyUp = function (e) {\n          if (isKeyboardPasteEvent(e) && !e.isDefaultPrevented()) {\n            pasteBin.remove();\n          }\n        };\n        if (isKeyboardPasteEvent(e) && !e.isDefaultPrevented()) {\n          keyboardPastePlainTextState = e.shiftKey && e.keyCode === 86;\n          if (keyboardPastePlainTextState && global$1.webkit && navigator.userAgent.indexOf('Version/') !== -1) {\n            return;\n          }\n          e.stopImmediatePropagation();\n          keyboardPasteEvent.set(e);\n          keyboardPastePressed.set(true);\n          if (global$1.ie && keyboardPastePlainTextState) {\n            e.preventDefault();\n            firePaste(editor, true);\n            return;\n          }\n          pasteBin.remove();\n          pasteBin.create();\n          editor.once('keyup', removePasteBinOnKeyUp);\n          editor.once('paste', function () {\n            editor.off('keyup', removePasteBinOnKeyUp);\n          });\n        }\n      });\n      function insertClipboardContent(editor, clipboardContent, isKeyBoardPaste, plainTextMode, internal) {\n        var content;\n        if (hasContentType(clipboardContent, 'text/html')) {\n          content = clipboardContent['text/html'];\n        } else {\n          content = pasteBin.getHtml();\n          internal = internal ? internal : isMarked(content);\n          if (pasteBin.isDefaultContent(content)) {\n            plainTextMode = true;\n          }\n        }\n        content = trimHtml(content);\n        pasteBin.remove();\n        var isPlainTextHtml = internal === false && isPlainText(content);\n        var isImage = isImageUrl(editor, content);\n        if (!content.length || isPlainTextHtml && !isImage) {\n          plainTextMode = true;\n        }\n        if (plainTextMode || isImage) {\n          if (hasContentType(clipboardContent, 'text/plain') && isPlainTextHtml) {\n            content = clipboardContent['text/plain'];\n          } else {\n            content = innerText(content);\n          }\n        }\n        if (pasteBin.isDefaultContent(content)) {\n          if (!isKeyBoardPaste) {\n            editor.windowManager.alert('Please use Ctrl+V/Cmd+V keyboard shortcuts to paste contents.');\n          }\n          return;\n        }\n        if (plainTextMode) {\n          pasteText(editor, content);\n        } else {\n          pasteHtml$1(editor, content, internal);\n        }\n      }\n      var getLastRng = function () {\n        return pasteBin.getLastRng() || editor.selection.getRng();\n      };\n      editor.on('paste', function (e) {\n        var isKeyboardPaste = keyboardPasteEvent.isSet() || keyboardPastePressed.isSet();\n        if (isKeyboardPaste) {\n          keyboardPasteEvent.clear();\n        }\n        var clipboardContent = getClipboardContent(editor, e);\n        var plainTextMode = pasteFormat.get() === 'text' || keyboardPastePlainTextState;\n        var internal = hasContentType(clipboardContent, internalHtmlMime());\n        keyboardPastePlainTextState = false;\n        if (e.isDefaultPrevented() || isBrokenAndroidClipboardEvent(e)) {\n          pasteBin.remove();\n          return;\n        }\n        if (!hasHtmlOrText(clipboardContent) && pasteImageData(editor, e, getLastRng())) {\n          pasteBin.remove();\n          return;\n        }\n        if (!isKeyboardPaste) {\n          e.preventDefault();\n        }\n        if (global$1.ie && (!isKeyboardPaste || e.ieFake) && !hasContentType(clipboardContent, 'text/html')) {\n          pasteBin.create();\n          editor.dom.bind(pasteBin.getEl(), 'paste', function (e) {\n            e.stopPropagation();\n          });\n          editor.getDoc().execCommand('Paste', false, null);\n          clipboardContent['text/html'] = pasteBin.getHtml();\n        }\n        if (hasContentType(clipboardContent, 'text/html')) {\n          e.preventDefault();\n          if (!internal) {\n            internal = isMarked(clipboardContent['text/html']);\n          }\n          insertClipboardContent(editor, clipboardContent, isKeyboardPaste, plainTextMode, internal);\n        } else {\n          global$2.setEditorTimeout(editor, function () {\n            insertClipboardContent(editor, clipboardContent, isKeyboardPaste, plainTextMode, internal);\n          }, 0);\n        }\n      });\n    };\n    var registerEventsAndFilters = function (editor, pasteBin, pasteFormat) {\n      registerEventHandlers(editor, pasteBin, pasteFormat);\n      var src;\n      editor.parser.addNodeFilter('img', function (nodes, name, args) {\n        var isPasteInsert = function (args) {\n          return args.data && args.data.paste === true;\n        };\n        var remove = function (node) {\n          if (!node.attr('data-mce-object') && src !== global$1.transparentSrc) {\n            node.remove();\n          }\n        };\n        var isWebKitFakeUrl = function (src) {\n          return src.indexOf('webkit-fake-url') === 0;\n        };\n        var isDataUri = function (src) {\n          return src.indexOf('data:') === 0;\n        };\n        if (!getPasteDataImages(editor) && isPasteInsert(args)) {\n          var i = nodes.length;\n          while (i--) {\n            src = nodes[i].attr('src');\n            if (!src) {\n              continue;\n            }\n            if (isWebKitFakeUrl(src)) {\n              remove(nodes[i]);\n            } else if (!getAllowHtmlDataUrls(editor) && isDataUri(src)) {\n              remove(nodes[i]);\n            }\n          }\n        }\n      });\n    };\n\n    var getPasteBinParent = function (editor) {\n      return global$1.ie && editor.inline ? document.body : editor.getBody();\n    };\n    var isExternalPasteBin = function (editor) {\n      return getPasteBinParent(editor) !== editor.getBody();\n    };\n    var delegatePasteEvents = function (editor, pasteBinElm, pasteBinDefaultContent) {\n      if (isExternalPasteBin(editor)) {\n        editor.dom.bind(pasteBinElm, 'paste keyup', function (_e) {\n          if (!isDefault(editor, pasteBinDefaultContent)) {\n            editor.fire('paste');\n          }\n        });\n      }\n    };\n    var create = function (editor, lastRngCell, pasteBinDefaultContent) {\n      var dom = editor.dom, body = editor.getBody();\n      lastRngCell.set(editor.selection.getRng());\n      var pasteBinElm = editor.dom.add(getPasteBinParent(editor), 'div', {\n        'id': 'mcepastebin',\n        'class': 'mce-pastebin',\n        'contentEditable': true,\n        'data-mce-bogus': 'all',\n        'style': 'position: fixed; top: 50%; width: 10px; height: 10px; overflow: hidden; opacity: 0'\n      }, pasteBinDefaultContent);\n      if (global$1.ie || global$1.gecko) {\n        dom.setStyle(pasteBinElm, 'left', dom.getStyle(body, 'direction', true) === 'rtl' ? 65535 : -65535);\n      }\n      dom.bind(pasteBinElm, 'beforedeactivate focusin focusout', function (e) {\n        e.stopPropagation();\n      });\n      delegatePasteEvents(editor, pasteBinElm, pasteBinDefaultContent);\n      pasteBinElm.focus();\n      editor.selection.select(pasteBinElm, true);\n    };\n    var remove = function (editor, lastRngCell) {\n      if (getEl(editor)) {\n        var pasteBinClone = void 0;\n        var lastRng = lastRngCell.get();\n        while (pasteBinClone = editor.dom.get('mcepastebin')) {\n          editor.dom.remove(pasteBinClone);\n          editor.dom.unbind(pasteBinClone);\n        }\n        if (lastRng) {\n          editor.selection.setRng(lastRng);\n        }\n      }\n      lastRngCell.set(null);\n    };\n    var getEl = function (editor) {\n      return editor.dom.get('mcepastebin');\n    };\n    var getHtml = function (editor) {\n      var copyAndRemove = function (toElm, fromElm) {\n        toElm.appendChild(fromElm);\n        editor.dom.remove(fromElm, true);\n      };\n      var pasteBinClones = global$5.grep(getPasteBinParent(editor).childNodes, function (elm) {\n        return elm.id === 'mcepastebin';\n      });\n      var pasteBinElm = pasteBinClones.shift();\n      global$5.each(pasteBinClones, function (pasteBinClone) {\n        copyAndRemove(pasteBinElm, pasteBinClone);\n      });\n      var dirtyWrappers = editor.dom.select('div[id=mcepastebin]', pasteBinElm);\n      for (var i = dirtyWrappers.length - 1; i >= 0; i--) {\n        var cleanWrapper = editor.dom.create('div');\n        pasteBinElm.insertBefore(cleanWrapper, dirtyWrappers[i]);\n        copyAndRemove(cleanWrapper, dirtyWrappers[i]);\n      }\n      return pasteBinElm ? pasteBinElm.innerHTML : '';\n    };\n    var getLastRng = function (lastRng) {\n      return lastRng.get();\n    };\n    var isDefaultContent = function (pasteBinDefaultContent, content) {\n      return content === pasteBinDefaultContent;\n    };\n    var isPasteBin = function (elm) {\n      return elm && elm.id === 'mcepastebin';\n    };\n    var isDefault = function (editor, pasteBinDefaultContent) {\n      var pasteBinElm = getEl(editor);\n      return isPasteBin(pasteBinElm) && isDefaultContent(pasteBinDefaultContent, pasteBinElm.innerHTML);\n    };\n    var PasteBin = function (editor) {\n      var lastRng = Cell(null);\n      var pasteBinDefaultContent = '%MCEPASTEBIN%';\n      return {\n        create: function () {\n          return create(editor, lastRng, pasteBinDefaultContent);\n        },\n        remove: function () {\n          return remove(editor, lastRng);\n        },\n        getEl: function () {\n          return getEl(editor);\n        },\n        getHtml: function () {\n          return getHtml(editor);\n        },\n        getLastRng: function () {\n          return getLastRng(lastRng);\n        },\n        isDefault: function () {\n          return isDefault(editor, pasteBinDefaultContent);\n        },\n        isDefaultContent: function (content) {\n          return isDefaultContent(pasteBinDefaultContent, content);\n        }\n      };\n    };\n\n    var Clipboard = function (editor, pasteFormat) {\n      var pasteBin = PasteBin(editor);\n      editor.on('PreInit', function () {\n        return registerEventsAndFilters(editor, pasteBin, pasteFormat);\n      });\n      return {\n        pasteFormat: pasteFormat,\n        pasteHtml: function (html, internalFlag) {\n          return pasteHtml$1(editor, html, internalFlag);\n        },\n        pasteText: function (text) {\n          return pasteText(editor, text);\n        },\n        pasteImageData: function (e, rng) {\n          return pasteImageData(editor, e, rng);\n        },\n        getDataTransferItems: getDataTransferItems,\n        hasHtmlOrText: hasHtmlOrText,\n        hasContentType: hasContentType\n      };\n    };\n\n    var togglePlainTextPaste = function (editor, clipboard) {\n      if (clipboard.pasteFormat.get() === 'text') {\n        clipboard.pasteFormat.set('html');\n        firePastePlainTextToggle(editor, false);\n      } else {\n        clipboard.pasteFormat.set('text');\n        firePastePlainTextToggle(editor, true);\n      }\n      editor.focus();\n    };\n\n    var register = function (editor, clipboard) {\n      editor.addCommand('mceTogglePlainTextPaste', function () {\n        togglePlainTextPaste(editor, clipboard);\n      });\n      editor.addCommand('mceInsertClipboardContent', function (ui, value) {\n        if (value.content) {\n          clipboard.pasteHtml(value.content, value.internal);\n        }\n        if (value.text) {\n          clipboard.pasteText(value.text);\n        }\n      });\n    };\n\n    var hasWorkingClipboardApi = function (clipboardData) {\n      return global$1.iOS === false && typeof (clipboardData === null || clipboardData === void 0 ? void 0 : clipboardData.setData) === 'function';\n    };\n    var setHtml5Clipboard = function (clipboardData, html, text) {\n      if (hasWorkingClipboardApi(clipboardData)) {\n        try {\n          clipboardData.clearData();\n          clipboardData.setData('text/html', html);\n          clipboardData.setData('text/plain', text);\n          clipboardData.setData(internalHtmlMime(), html);\n          return true;\n        } catch (e) {\n          return false;\n        }\n      } else {\n        return false;\n      }\n    };\n    var setClipboardData = function (evt, data, fallback, done) {\n      if (setHtml5Clipboard(evt.clipboardData, data.html, data.text)) {\n        evt.preventDefault();\n        done();\n      } else {\n        fallback(data.html, done);\n      }\n    };\n    var fallback = function (editor) {\n      return function (html, done) {\n        var markedHtml = mark(html);\n        var outer = editor.dom.create('div', {\n          'contenteditable': 'false',\n          'data-mce-bogus': 'all'\n        });\n        var inner = editor.dom.create('div', { contenteditable: 'true' }, markedHtml);\n        editor.dom.setStyles(outer, {\n          position: 'fixed',\n          top: '0',\n          left: '-3000px',\n          width: '1000px',\n          overflow: 'hidden'\n        });\n        outer.appendChild(inner);\n        editor.dom.add(editor.getBody(), outer);\n        var range = editor.selection.getRng();\n        inner.focus();\n        var offscreenRange = editor.dom.createRng();\n        offscreenRange.selectNodeContents(inner);\n        editor.selection.setRng(offscreenRange);\n        global$2.setTimeout(function () {\n          editor.selection.setRng(range);\n          outer.parentNode.removeChild(outer);\n          done();\n        }, 0);\n      };\n    };\n    var getData = function (editor) {\n      return {\n        html: editor.selection.getContent({ contextual: true }),\n        text: editor.selection.getContent({ format: 'text' })\n      };\n    };\n    var isTableSelection = function (editor) {\n      return !!editor.dom.getParent(editor.selection.getStart(), 'td[data-mce-selected],th[data-mce-selected]', editor.getBody());\n    };\n    var hasSelectedContent = function (editor) {\n      return !editor.selection.isCollapsed() || isTableSelection(editor);\n    };\n    var cut = function (editor) {\n      return function (evt) {\n        if (hasSelectedContent(editor)) {\n          setClipboardData(evt, getData(editor), fallback(editor), function () {\n            if (global$1.browser.isChrome() || global$1.browser.isFirefox()) {\n              var rng_1 = editor.selection.getRng();\n              global$2.setEditorTimeout(editor, function () {\n                editor.selection.setRng(rng_1);\n                editor.execCommand('Delete');\n              }, 0);\n            } else {\n              editor.execCommand('Delete');\n            }\n          });\n        }\n      };\n    };\n    var copy = function (editor) {\n      return function (evt) {\n        if (hasSelectedContent(editor)) {\n          setClipboardData(evt, getData(editor), fallback(editor), function () {\n          });\n        }\n      };\n    };\n    var register$1 = function (editor) {\n      editor.on('cut', cut(editor));\n      editor.on('copy', copy(editor));\n    };\n\n    var global$b = tinymce.util.Tools.resolve('tinymce.dom.RangeUtils');\n\n    var getCaretRangeFromEvent = function (editor, e) {\n      return global$b.getCaretRangeFromPoint(e.clientX, e.clientY, editor.getDoc());\n    };\n    var isPlainTextFileUrl = function (content) {\n      var plainTextContent = content['text/plain'];\n      return plainTextContent ? plainTextContent.indexOf('file://') === 0 : false;\n    };\n    var setFocusedRange = function (editor, rng) {\n      editor.focus();\n      editor.selection.setRng(rng);\n    };\n    var setup = function (editor, clipboard, draggingInternallyState) {\n      if (shouldBlockDrop(editor)) {\n        editor.on('dragend dragover draggesture dragdrop drop drag', function (e) {\n          e.preventDefault();\n          e.stopPropagation();\n        });\n      }\n      if (!shouldPasteDataImages(editor)) {\n        editor.on('drop', function (e) {\n          var dataTransfer = e.dataTransfer;\n          if (dataTransfer && dataTransfer.files && dataTransfer.files.length > 0) {\n            e.preventDefault();\n          }\n        });\n      }\n      editor.on('drop', function (e) {\n        var rng = getCaretRangeFromEvent(editor, e);\n        if (e.isDefaultPrevented() || draggingInternallyState.get()) {\n          return;\n        }\n        var dropContent = clipboard.getDataTransferItems(e.dataTransfer);\n        var internal = clipboard.hasContentType(dropContent, internalHtmlMime());\n        if ((!clipboard.hasHtmlOrText(dropContent) || isPlainTextFileUrl(dropContent)) && clipboard.pasteImageData(e, rng)) {\n          return;\n        }\n        if (rng && shouldFilterDrop(editor)) {\n          var content_1 = dropContent['mce-internal'] || dropContent['text/html'] || dropContent['text/plain'];\n          if (content_1) {\n            e.preventDefault();\n            global$2.setEditorTimeout(editor, function () {\n              editor.undoManager.transact(function () {\n                if (dropContent['mce-internal']) {\n                  editor.execCommand('Delete');\n                }\n                setFocusedRange(editor, rng);\n                content_1 = trimHtml(content_1);\n                if (!dropContent['text/html']) {\n                  clipboard.pasteText(content_1);\n                } else {\n                  clipboard.pasteHtml(content_1, internal);\n                }\n              });\n            });\n          }\n        }\n      });\n      editor.on('dragstart', function (_e) {\n        draggingInternallyState.set(true);\n      });\n      editor.on('dragover dragend', function (e) {\n        if (shouldPasteDataImages(editor) && draggingInternallyState.get() === false) {\n          e.preventDefault();\n          setFocusedRange(editor, getCaretRangeFromEvent(editor, e));\n        }\n        if (e.type === 'dragend') {\n          draggingInternallyState.set(false);\n        }\n      });\n    };\n\n    var setup$1 = function (editor) {\n      var plugin = editor.plugins.paste;\n      var preProcess = getPreProcess(editor);\n      if (preProcess) {\n        editor.on('PastePreProcess', function (e) {\n          preProcess.call(plugin, plugin, e);\n        });\n      }\n      var postProcess = getPostProcess(editor);\n      if (postProcess) {\n        editor.on('PastePostProcess', function (e) {\n          postProcess.call(plugin, plugin, e);\n        });\n      }\n    };\n\n    function addPreProcessFilter(editor, filterFunc) {\n      editor.on('PastePreProcess', function (e) {\n        e.content = filterFunc(editor, e.content, e.internal, e.wordContent);\n      });\n    }\n    function addPostProcessFilter(editor, filterFunc) {\n      editor.on('PastePostProcess', function (e) {\n        filterFunc(editor, e.node);\n      });\n    }\n    function removeExplorerBrElementsAfterBlocks(editor, html) {\n      if (!isWordContent(html)) {\n        return html;\n      }\n      var blockElements = [];\n      global$5.each(editor.schema.getBlockElements(), function (block, blockName) {\n        blockElements.push(blockName);\n      });\n      var explorerBlocksRegExp = new RegExp('(?:<br>&nbsp;[\\\\s\\\\r\\\\n]+|<br>)*(<\\\\/?(' + blockElements.join('|') + ')[^>]*>)(?:<br>&nbsp;[\\\\s\\\\r\\\\n]+|<br>)*', 'g');\n      html = filter$1(html, [[\n          explorerBlocksRegExp,\n          '$1'\n        ]]);\n      html = filter$1(html, [\n        [\n          /<br><br>/g,\n          '<BR><BR>'\n        ],\n        [\n          /<br>/g,\n          ' '\n        ],\n        [\n          /<BR><BR>/g,\n          '<br>'\n        ]\n      ]);\n      return html;\n    }\n    function removeWebKitStyles(editor, content, internal, isWordHtml) {\n      if (isWordHtml || internal) {\n        return content;\n      }\n      var webKitStylesSetting = getWebkitStyles(editor);\n      var webKitStyles;\n      if (shouldRemoveWebKitStyles(editor) === false || webKitStylesSetting === 'all') {\n        return content;\n      }\n      if (webKitStylesSetting) {\n        webKitStyles = webKitStylesSetting.split(/[, ]/);\n      }\n      if (webKitStyles) {\n        var dom_1 = editor.dom, node_1 = editor.selection.getNode();\n        content = content.replace(/(<[^>]+) style=\"([^\"]*)\"([^>]*>)/gi, function (all, before, value, after) {\n          var inputStyles = dom_1.parseStyle(dom_1.decode(value));\n          var outputStyles = {};\n          if (webKitStyles === 'none') {\n            return before + after;\n          }\n          for (var i = 0; i < webKitStyles.length; i++) {\n            var inputValue = inputStyles[webKitStyles[i]], currentValue = dom_1.getStyle(node_1, webKitStyles[i], true);\n            if (/color/.test(webKitStyles[i])) {\n              inputValue = dom_1.toHex(inputValue);\n              currentValue = dom_1.toHex(currentValue);\n            }\n            if (currentValue !== inputValue) {\n              outputStyles[webKitStyles[i]] = inputValue;\n            }\n          }\n          outputStyles = dom_1.serializeStyle(outputStyles, 'span');\n          if (outputStyles) {\n            return before + ' style=\"' + outputStyles + '\"' + after;\n          }\n          return before + after;\n        });\n      } else {\n        content = content.replace(/(<[^>]+) style=\"([^\"]*)\"([^>]*>)/gi, '$1$3');\n      }\n      content = content.replace(/(<[^>]+) data-mce-style=\"([^\"]+)\"([^>]*>)/gi, function (all, before, value, after) {\n        return before + ' style=\"' + value + '\"' + after;\n      });\n      return content;\n    }\n    function removeUnderlineAndFontInAnchor(editor, root) {\n      editor.$('a', root).find('font,u').each(function (i, node) {\n        editor.dom.remove(node, true);\n      });\n    }\n    var setup$2 = function (editor) {\n      if (global$1.webkit) {\n        addPreProcessFilter(editor, removeWebKitStyles);\n      }\n      if (global$1.ie) {\n        addPreProcessFilter(editor, removeExplorerBrElementsAfterBlocks);\n        addPostProcessFilter(editor, removeUnderlineAndFontInAnchor);\n      }\n    };\n\n    var makeSetupHandler = function (editor, clipboard) {\n      return function (api) {\n        api.setActive(clipboard.pasteFormat.get() === 'text');\n        var pastePlainTextToggleHandler = function (e) {\n          return api.setActive(e.state);\n        };\n        editor.on('PastePlainTextToggle', pastePlainTextToggleHandler);\n        return function () {\n          return editor.off('PastePlainTextToggle', pastePlainTextToggleHandler);\n        };\n      };\n    };\n    var register$2 = function (editor, clipboard) {\n      editor.ui.registry.addToggleButton('pastetext', {\n        active: false,\n        icon: 'paste-text',\n        tooltip: 'Paste as text',\n        onAction: function () {\n          return editor.execCommand('mceTogglePlainTextPaste');\n        },\n        onSetup: makeSetupHandler(editor, clipboard)\n      });\n      editor.ui.registry.addToggleMenuItem('pastetext', {\n        text: 'Paste as text',\n        icon: 'paste-text',\n        onAction: function () {\n          return editor.execCommand('mceTogglePlainTextPaste');\n        },\n        onSetup: makeSetupHandler(editor, clipboard)\n      });\n    };\n\n    function Plugin () {\n      global.add('paste', function (editor) {\n        if (hasProPlugin(editor) === false) {\n          var draggingInternallyState = Cell(false);\n          var pasteFormat = Cell(isPasteAsTextEnabled(editor) ? 'text' : 'html');\n          var clipboard = Clipboard(editor, pasteFormat);\n          var quirks = setup$2(editor);\n          register$2(editor, clipboard);\n          register(editor, clipboard);\n          setup$1(editor);\n          register$1(editor);\n          setup(editor, clipboard, draggingInternallyState);\n          return get(clipboard, quirks);\n        }\n      });\n    }\n\n    Plugin();\n\n}());\n"]}