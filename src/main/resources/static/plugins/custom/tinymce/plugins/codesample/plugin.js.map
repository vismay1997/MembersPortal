{"version":3,"sources":["codesample/plugin.js"],"names":["eq","call","id","global","tinymce","util","Tools","resolve","noop","constant","value","never","always","none","NONE","o","isNone","fold","n","_s","is","isSome","getOr","getOrThunk","thunk","getOrDie","msg","Error","getOrNull","getOrUndefined","undefined","or","orThunk","map","each","bind","exists","forall","filter","equals","equals_","toArray","toString","some","a","constant_a","self","me","f","s","v","elementEq","b","Optional","from","head","xs","i","length","get","global$1","isCodeSample","elm","nodeName","className","indexOf","trimArg","predicateFn","arg1","arg2","Global","window","Function","exports$1","module","exports","global$2","define","require","oldprism","Prism","manual","amd","this","EphoxContactWrapper","r","e","t","c","u","code","p","1","languages","extend","comment","pattern","greedy","class-name","lookbehind","keyword","function","operator","number","insertBefore","macro","alias","inside","string","directive","directive-hash","punctuation","expression","2","clike","boolean","3","_self","lang","uniqueId","_","disableWorkerMessageHandler","encode","tokens","Token","type","content","Array","isArray","replace","Object","prototype","slice","objId","obj","defineProperty","clone","deepClone","visited","key","hasOwnProperty","forEach","getLanguage","element","test","parentElement","match","toLowerCase","currentScript","document","err","src","exec","stack","scripts","getElementsByTagName","isActive","defaultActivation","no","classList","contains","redef","before","insert","root","grammar","ret","token","newToken","old","DFS","callback","property","propertyType","plugins","highlightAll","async","highlightAllUnder","container","env","selector","hooks","run","elements","apply","querySelectorAll","highlightElement","language","parent","textContent","insertHighlightedCode","highlightedCode","innerHTML","Worker","worker","filename","onmessage","evt","data","postMessage","JSON","stringify","immediateClose","highlight","text","tokenize","rest","tokenList","LinkedList","addAfter","matchGrammar","list","array","node","next","tail","push","all","add","name","callbacks","matchedStr","startNode","startPos","rematch","patterns","j","cause","patternObj","lookbehindLength","flags","RegExp","source","currentNode","pos","reach","str","removeCount","prev","lastIndex","index","to","k","matchStr","after","removeFrom","removeRange","newNode","count","tag","classes","attributes","aliases","join","addEventListener","message","parse","close","script","highlightAutomaticallyCallback","hasAttribute","readyState","defer","requestAnimationFrame","setTimeout","WorkerGlobalScope","4","cpp","raw-string","base-clause","5","replacements","m","re","nested","depthLog2","keywordKinds","keywordsToPattern","words","trim","typeDeclarationKeywords","keywords","nonTypeKeywords","nonContextualKeywords","generic","nestedRound","genericName","identifier","typeExpressionWithoutTuple","tupleElement","tuple","typeExpression","typeInside","character","regularString","verbatimString","csharp","range","named-parameter","namespace","type-expression","return-type","constructor-invocation","generic-method","type-list","preprocessor","regularStringOrCharacter","regularStringCharacterOrComment","roundExpression","attrTarget","attr","attribute","target","attribute-arguments","formatString","mInterpolationRound","mInterpolation","sInterpolationRound","sInterpolation","createInterpolationInside","interpolation","interpolationRound","format-string","interpolation-string","dotnet","cs","6","css","atrule","rule","selector-function-argument","url","important","markup","addInlined","style-attr","attr-name","attr-value","7","java","triple-quoted-string","annotation","generics","8","javascript","regex","regex-source","regex-flags","regex-delimiter","function-variable","parameter","template-string","template-punctuation","interpolation-punctuation","js","9","getPlaceholder","toUpperCase","defineProperties","buildPlaceholders","placeholderPattern","replaceFilter","tokenStack","placeholder","tokenizePlaceholders","keys","walkTokens","substring","middle","replacement","splice","concat","10","prolog","doctype","internal-subset","doctype-tag","cdata","entity","tagName","includedCdataInside","included-cdata","def","html","mathml","svg","xml","ssml","atom","rss","11","php","shell-comment","delimiter","variable","package","string_interpolation","nowdoc-string","heredoc-string","single-quoted-string","double-quoted-string","12","python","string-interpolation","format-spec","conversion-option","decorator","builtin","py","13","ruby","symbol","method-definition","rb","14","boltExport","prismjs/components/prism-c","prismjs/components/prism-clike","prismjs/components/prism-core","prismjs/components/prism-cpp","prismjs/components/prism-csharp","prismjs/components/prism-css","prismjs/components/prism-java","prismjs/components/prism-javascript","prismjs/components/prism-markup","prismjs/components/prism-markup-templating","prismjs/components/prism-php","prismjs/components/prism-python","prismjs/components/prism-ruby","prism","Prism$1","get$1","editor","getParam","useGlobalPrismJS","getSelectedCodeSample","selection","getNode","open","getLanguages","getLanguages$1","defaultLanguage","l","currentLanguage","fallback","matches","getCurrentLanguage","currentCode","getCurrentCode","windowManager","title","size","body","items","label","buttons","primary","initialData","onSubmit","api","getData","undoManager","transact","DOM","insertContent","select","$","removeAttr","dom","setAttrib","insertCodeSample","on","idx","$elm","empty","append","unprocessedCodeSamples","contentEditable","find","parentNode","replaceChild","getDoc","createTextNode","setup","ui","registry","addToggleButton","icon","tooltip","onAction","onSetup","nodeChangeHandler","setActive","getStart","isCodeSampleSelection","off","addMenuItem","register$1","addCommand","isCollapsed","formatter","toggle","register","ev"],"mappings":"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","file":"plugin.js","sourcesContent":["/**\n * Copyright (c) Tiny Technologies, Inc. All rights reserved.\n * Licensed under the LGPL or a commercial license.\n * For LGPL see License.txt in the project root for license information.\n * For commercial licenses see https://www.tiny.cloud/\n *\n * Version: 5.6.2 (2020-12-08)\n */\n(function () {\n    'use strict';\n\n    var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var noop = function () {\n    };\n    var constant = function (value) {\n      return function () {\n        return value;\n      };\n    };\n    var never = constant(false);\n    var always = constant(true);\n\n    var none = function () {\n      return NONE;\n    };\n    var NONE = function () {\n      var eq = function (o) {\n        return o.isNone();\n      };\n      var call = function (thunk) {\n        return thunk();\n      };\n      var id = function (n) {\n        return n;\n      };\n      var me = {\n        fold: function (n, _s) {\n          return n();\n        },\n        is: never,\n        isSome: never,\n        isNone: always,\n        getOr: id,\n        getOrThunk: call,\n        getOrDie: function (msg) {\n          throw new Error(msg || 'error: getOrDie called on none.');\n        },\n        getOrNull: constant(null),\n        getOrUndefined: constant(undefined),\n        or: id,\n        orThunk: call,\n        map: none,\n        each: noop,\n        bind: none,\n        exists: never,\n        forall: always,\n        filter: none,\n        equals: eq,\n        equals_: eq,\n        toArray: function () {\n          return [];\n        },\n        toString: constant('none()')\n      };\n      return me;\n    }();\n    var some = function (a) {\n      var constant_a = constant(a);\n      var self = function () {\n        return me;\n      };\n      var bind = function (f) {\n        return f(a);\n      };\n      var me = {\n        fold: function (n, s) {\n          return s(a);\n        },\n        is: function (v) {\n          return a === v;\n        },\n        isSome: always,\n        isNone: never,\n        getOr: constant_a,\n        getOrThunk: constant_a,\n        getOrDie: constant_a,\n        getOrNull: constant_a,\n        getOrUndefined: constant_a,\n        or: self,\n        orThunk: self,\n        map: function (f) {\n          return some(f(a));\n        },\n        each: function (f) {\n          f(a);\n        },\n        bind: bind,\n        exists: bind,\n        forall: bind,\n        filter: function (f) {\n          return f(a) ? me : NONE;\n        },\n        toArray: function () {\n          return [a];\n        },\n        toString: function () {\n          return 'some(' + a + ')';\n        },\n        equals: function (o) {\n          return o.is(a);\n        },\n        equals_: function (o, elementEq) {\n          return o.fold(never, function (b) {\n            return elementEq(a, b);\n          });\n        }\n      };\n      return me;\n    };\n    var from = function (value) {\n      return value === null || value === undefined ? NONE : some(value);\n    };\n    var Optional = {\n      some: some,\n      none: none,\n      from: from\n    };\n\n    var get = function (xs, i) {\n      return i >= 0 && i < xs.length ? Optional.some(xs[i]) : Optional.none();\n    };\n    var head = function (xs) {\n      return get(xs, 0);\n    };\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.dom.DOMUtils');\n\n    function isCodeSample(elm) {\n      return elm && elm.nodeName === 'PRE' && elm.className.indexOf('language-') !== -1;\n    }\n    function trimArg(predicateFn) {\n      return function (arg1, arg2) {\n        return predicateFn(arg2);\n      };\n    }\n\n    var Global = typeof window !== 'undefined' ? window : Function('return this;')();\n\n    var exports$1 = {}, module = { exports: exports$1 }, global$2 = {};\n    (function (define, exports, module, require) {\n      var oldprism = window.Prism;\n      window.Prism = { manual: true };\n      (function (f) {\n        if (typeof exports === 'object' && typeof module !== 'undefined') {\n          module.exports = f();\n        } else if (typeof define === 'function' && define.amd) {\n          define([], f);\n        } else {\n          var g;\n          if (typeof window !== 'undefined') {\n            g = window;\n          } else if (typeof global$2 !== 'undefined') {\n            g = global$2;\n          } else if (typeof self !== 'undefined') {\n            g = self;\n          } else {\n            g = this;\n          }\n          g.EphoxContactWrapper = f();\n        }\n      }(function () {\n        return function () {\n          function r(e, n, t) {\n            function o(i, f) {\n              if (!n[i]) {\n                if (!e[i]) {\n                  var c = 'function' == typeof require && require;\n                  if (!f && c)\n                    return c(i, !0);\n                  if (u)\n                    return u(i, !0);\n                  var a = new Error('Cannot find module \\'' + i + '\\'');\n                  throw a.code = 'MODULE_NOT_FOUND', a;\n                }\n                var p = n[i] = { exports: {} };\n                e[i][0].call(p.exports, function (r) {\n                  var n = e[i][1][r];\n                  return o(n || r);\n                }, p, p.exports, r, e, n, t);\n              }\n              return n[i].exports;\n            }\n            for (var u = 'function' == typeof require && require, i = 0; i < t.length; i++)\n              o(t[i]);\n            return o;\n          }\n          return r;\n        }()({\n          1: [\n            function (require, module, exports) {\n              Prism.languages.c = Prism.languages.extend('clike', {\n                'comment': {\n                  pattern: /\\/\\/(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n?|\\n|(?![\\r\\n])))*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n                  greedy: true\n                },\n                'class-name': {\n                  pattern: /(\\b(?:enum|struct)\\s+(?:__attribute__\\s*\\(\\([\\s\\S]*?\\)\\)\\s*)?)\\w+/,\n                  lookbehind: true\n                },\n                'keyword': /\\b(?:__attribute__|_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while)\\b/,\n                'function': /[a-z_]\\w*(?=\\s*\\()/i,\n                'operator': />>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?/,\n                'number': /(?:\\b0x(?:[\\da-f]+\\.?[\\da-f]*|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]*/i\n              });\n              Prism.languages.insertBefore('c', 'string', {\n                'macro': {\n                  pattern: /(^\\s*)#\\s*[a-z]+(?:[^\\r\\n\\\\/]|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n                  lookbehind: true,\n                  greedy: true,\n                  alias: 'property',\n                  inside: {\n                    'string': [\n                      {\n                        pattern: /^(#\\s*include\\s*)<[^>]+>/,\n                        lookbehind: true\n                      },\n                      Prism.languages.c['string']\n                    ],\n                    'comment': Prism.languages.c['comment'],\n                    'directive': {\n                      pattern: /^(#\\s*)[a-z]+/,\n                      lookbehind: true,\n                      alias: 'keyword'\n                    },\n                    'directive-hash': /^#/,\n                    'punctuation': /##|\\\\(?=[\\r\\n])/,\n                    'expression': {\n                      pattern: /\\S[\\s\\S]*/,\n                      inside: Prism.languages.c\n                    }\n                  }\n                },\n                'constant': /\\b(?:__FILE__|__LINE__|__DATE__|__TIME__|__TIMESTAMP__|__func__|EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|stdin|stdout|stderr)\\b/\n              });\n              delete Prism.languages.c['boolean'];\n            },\n            {}\n          ],\n          2: [\n            function (require, module, exports) {\n              Prism.languages.clike = {\n                'comment': [\n                  {\n                    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n                    lookbehind: true\n                  },\n                  {\n                    pattern: /(^|[^\\\\:])\\/\\/.*/,\n                    lookbehind: true,\n                    greedy: true\n                  }\n                ],\n                'string': {\n                  pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n                  greedy: true\n                },\n                'class-name': {\n                  pattern: /(\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n                  lookbehind: true,\n                  inside: { 'punctuation': /[.\\\\]/ }\n                },\n                'keyword': /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n                'boolean': /\\b(?:true|false)\\b/,\n                'function': /\\w+(?=\\()/,\n                'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n                'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n                'punctuation': /[{}[\\];(),.:]/\n              };\n            },\n            {}\n          ],\n          3: [\n            function (require, module, exports) {\n              (function (global) {\n                (function () {\n                  var _self = typeof window !== 'undefined' ? window : typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope ? self : {};\n                  var Prism = function (_self) {\n                    var lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\n                    var uniqueId = 0;\n                    var _ = {\n                      manual: _self.Prism && _self.Prism.manual,\n                      disableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n                      util: {\n                        encode: function encode(tokens) {\n                          if (tokens instanceof Token) {\n                            return new Token(tokens.type, encode(tokens.content), tokens.alias);\n                          } else if (Array.isArray(tokens)) {\n                            return tokens.map(encode);\n                          } else {\n                            return tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n                          }\n                        },\n                        type: function (o) {\n                          return Object.prototype.toString.call(o).slice(8, -1);\n                        },\n                        objId: function (obj) {\n                          if (!obj['__id']) {\n                            Object.defineProperty(obj, '__id', { value: ++uniqueId });\n                          }\n                          return obj['__id'];\n                        },\n                        clone: function deepClone(o, visited) {\n                          visited = visited || {};\n                          var clone, id;\n                          switch (_.util.type(o)) {\n                          case 'Object':\n                            id = _.util.objId(o);\n                            if (visited[id]) {\n                              return visited[id];\n                            }\n                            clone = {};\n                            visited[id] = clone;\n                            for (var key in o) {\n                              if (o.hasOwnProperty(key)) {\n                                clone[key] = deepClone(o[key], visited);\n                              }\n                            }\n                            return clone;\n                          case 'Array':\n                            id = _.util.objId(o);\n                            if (visited[id]) {\n                              return visited[id];\n                            }\n                            clone = [];\n                            visited[id] = clone;\n                            o.forEach(function (v, i) {\n                              clone[i] = deepClone(v, visited);\n                            });\n                            return clone;\n                          default:\n                            return o;\n                          }\n                        },\n                        getLanguage: function (element) {\n                          while (element && !lang.test(element.className)) {\n                            element = element.parentElement;\n                          }\n                          if (element) {\n                            return (element.className.match(lang) || [\n                              ,\n                              'none'\n                            ])[1].toLowerCase();\n                          }\n                          return 'none';\n                        },\n                        currentScript: function () {\n                          if (typeof document === 'undefined') {\n                            return null;\n                          }\n                          if ('currentScript' in document && 1 < 2) {\n                            return document.currentScript;\n                          }\n                          try {\n                            throw new Error();\n                          } catch (err) {\n                            var src = (/at [^(\\r\\n]*\\((.*):.+:.+\\)$/i.exec(err.stack) || [])[1];\n                            if (src) {\n                              var scripts = document.getElementsByTagName('script');\n                              for (var i in scripts) {\n                                if (scripts[i].src == src) {\n                                  return scripts[i];\n                                }\n                              }\n                            }\n                            return null;\n                          }\n                        },\n                        isActive: function (element, className, defaultActivation) {\n                          var no = 'no-' + className;\n                          while (element) {\n                            var classList = element.classList;\n                            if (classList.contains(className)) {\n                              return true;\n                            }\n                            if (classList.contains(no)) {\n                              return false;\n                            }\n                            element = element.parentElement;\n                          }\n                          return !!defaultActivation;\n                        }\n                      },\n                      languages: {\n                        extend: function (id, redef) {\n                          var lang = _.util.clone(_.languages[id]);\n                          for (var key in redef) {\n                            lang[key] = redef[key];\n                          }\n                          return lang;\n                        },\n                        insertBefore: function (inside, before, insert, root) {\n                          root = root || _.languages;\n                          var grammar = root[inside];\n                          var ret = {};\n                          for (var token in grammar) {\n                            if (grammar.hasOwnProperty(token)) {\n                              if (token == before) {\n                                for (var newToken in insert) {\n                                  if (insert.hasOwnProperty(newToken)) {\n                                    ret[newToken] = insert[newToken];\n                                  }\n                                }\n                              }\n                              if (!insert.hasOwnProperty(token)) {\n                                ret[token] = grammar[token];\n                              }\n                            }\n                          }\n                          var old = root[inside];\n                          root[inside] = ret;\n                          _.languages.DFS(_.languages, function (key, value) {\n                            if (value === old && key != inside) {\n                              this[key] = ret;\n                            }\n                          });\n                          return ret;\n                        },\n                        DFS: function DFS(o, callback, type, visited) {\n                          visited = visited || {};\n                          var objId = _.util.objId;\n                          for (var i in o) {\n                            if (o.hasOwnProperty(i)) {\n                              callback.call(o, i, o[i], type || i);\n                              var property = o[i], propertyType = _.util.type(property);\n                              if (propertyType === 'Object' && !visited[objId(property)]) {\n                                visited[objId(property)] = true;\n                                DFS(property, callback, null, visited);\n                              } else if (propertyType === 'Array' && !visited[objId(property)]) {\n                                visited[objId(property)] = true;\n                                DFS(property, callback, i, visited);\n                              }\n                            }\n                          }\n                        }\n                      },\n                      plugins: {},\n                      highlightAll: function (async, callback) {\n                        _.highlightAllUnder(document, async, callback);\n                      },\n                      highlightAllUnder: function (container, async, callback) {\n                        var env = {\n                          callback: callback,\n                          container: container,\n                          selector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n                        };\n                        _.hooks.run('before-highlightall', env);\n                        env.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));\n                        _.hooks.run('before-all-elements-highlight', env);\n                        for (var i = 0, element; element = env.elements[i++];) {\n                          _.highlightElement(element, async === true, env.callback);\n                        }\n                      },\n                      highlightElement: function (element, async, callback) {\n                        var language = _.util.getLanguage(element);\n                        var grammar = _.languages[language];\n                        element.className = element.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n                        var parent = element.parentElement;\n                        if (parent && parent.nodeName.toLowerCase() === 'pre') {\n                          parent.className = parent.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n                        }\n                        var code = element.textContent;\n                        var env = {\n                          element: element,\n                          language: language,\n                          grammar: grammar,\n                          code: code\n                        };\n                        function insertHighlightedCode(highlightedCode) {\n                          env.highlightedCode = highlightedCode;\n                          _.hooks.run('before-insert', env);\n                          env.element.innerHTML = env.highlightedCode;\n                          _.hooks.run('after-highlight', env);\n                          _.hooks.run('complete', env);\n                          callback && callback.call(env.element);\n                        }\n                        _.hooks.run('before-sanity-check', env);\n                        if (!env.code) {\n                          _.hooks.run('complete', env);\n                          callback && callback.call(env.element);\n                          return;\n                        }\n                        _.hooks.run('before-highlight', env);\n                        if (!env.grammar) {\n                          insertHighlightedCode(_.util.encode(env.code));\n                          return;\n                        }\n                        if (async && _self.Worker) {\n                          var worker = new Worker(_.filename);\n                          worker.onmessage = function (evt) {\n                            insertHighlightedCode(evt.data);\n                          };\n                          worker.postMessage(JSON.stringify({\n                            language: env.language,\n                            code: env.code,\n                            immediateClose: true\n                          }));\n                        } else {\n                          insertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n                        }\n                      },\n                      highlight: function (text, grammar, language) {\n                        var env = {\n                          code: text,\n                          grammar: grammar,\n                          language: language\n                        };\n                        _.hooks.run('before-tokenize', env);\n                        env.tokens = _.tokenize(env.code, env.grammar);\n                        _.hooks.run('after-tokenize', env);\n                        return Token.stringify(_.util.encode(env.tokens), env.language);\n                      },\n                      tokenize: function (text, grammar) {\n                        var rest = grammar.rest;\n                        if (rest) {\n                          for (var token in rest) {\n                            grammar[token] = rest[token];\n                          }\n                          delete grammar.rest;\n                        }\n                        var tokenList = new LinkedList();\n                        addAfter(tokenList, tokenList.head, text);\n                        matchGrammar(text, tokenList, grammar, tokenList.head, 0);\n                        return toArray(tokenList);\n                      },\n                      hooks: {\n                        all: {},\n                        add: function (name, callback) {\n                          var hooks = _.hooks.all;\n                          hooks[name] = hooks[name] || [];\n                          hooks[name].push(callback);\n                        },\n                        run: function (name, env) {\n                          var callbacks = _.hooks.all[name];\n                          if (!callbacks || !callbacks.length) {\n                            return;\n                          }\n                          for (var i = 0, callback; callback = callbacks[i++];) {\n                            callback(env);\n                          }\n                        }\n                      },\n                      Token: Token\n                    };\n                    _self.Prism = _;\n                    function Token(type, content, alias, matchedStr) {\n                      this.type = type;\n                      this.content = content;\n                      this.alias = alias;\n                      this.length = (matchedStr || '').length | 0;\n                    }\n                    Token.stringify = function stringify(o, language) {\n                      if (typeof o == 'string') {\n                        return o;\n                      }\n                      if (Array.isArray(o)) {\n                        var s = '';\n                        o.forEach(function (e) {\n                          s += stringify(e, language);\n                        });\n                        return s;\n                      }\n                      var env = {\n                        type: o.type,\n                        content: stringify(o.content, language),\n                        tag: 'span',\n                        classes: [\n                          'token',\n                          o.type\n                        ],\n                        attributes: {},\n                        language: language\n                      };\n                      var aliases = o.alias;\n                      if (aliases) {\n                        if (Array.isArray(aliases)) {\n                          Array.prototype.push.apply(env.classes, aliases);\n                        } else {\n                          env.classes.push(aliases);\n                        }\n                      }\n                      _.hooks.run('wrap', env);\n                      var attributes = '';\n                      for (var name in env.attributes) {\n                        attributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n                      }\n                      return '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n                    };\n                    function matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n                      for (var token in grammar) {\n                        if (!grammar.hasOwnProperty(token) || !grammar[token]) {\n                          continue;\n                        }\n                        var patterns = grammar[token];\n                        patterns = Array.isArray(patterns) ? patterns : [patterns];\n                        for (var j = 0; j < patterns.length; ++j) {\n                          if (rematch && rematch.cause == token + ',' + j) {\n                            return;\n                          }\n                          var patternObj = patterns[j], inside = patternObj.inside, lookbehind = !!patternObj.lookbehind, greedy = !!patternObj.greedy, lookbehindLength = 0, alias = patternObj.alias;\n                          if (greedy && !patternObj.pattern.global) {\n                            var flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n                            patternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n                          }\n                          var pattern = patternObj.pattern || patternObj;\n                          for (var currentNode = startNode.next, pos = startPos; currentNode !== tokenList.tail; pos += currentNode.value.length, currentNode = currentNode.next) {\n                            if (rematch && pos >= rematch.reach) {\n                              break;\n                            }\n                            var str = currentNode.value;\n                            if (tokenList.length > text.length) {\n                              return;\n                            }\n                            if (str instanceof Token) {\n                              continue;\n                            }\n                            var removeCount = 1;\n                            if (greedy && currentNode != tokenList.tail.prev) {\n                              pattern.lastIndex = pos;\n                              var match = pattern.exec(text);\n                              if (!match) {\n                                break;\n                              }\n                              var from = match.index + (lookbehind && match[1] ? match[1].length : 0);\n                              var to = match.index + match[0].length;\n                              var p = pos;\n                              p += currentNode.value.length;\n                              while (from >= p) {\n                                currentNode = currentNode.next;\n                                p += currentNode.value.length;\n                              }\n                              p -= currentNode.value.length;\n                              pos = p;\n                              if (currentNode.value instanceof Token) {\n                                continue;\n                              }\n                              for (var k = currentNode; k !== tokenList.tail && (p < to || typeof k.value === 'string'); k = k.next) {\n                                removeCount++;\n                                p += k.value.length;\n                              }\n                              removeCount--;\n                              str = text.slice(pos, p);\n                              match.index -= pos;\n                            } else {\n                              pattern.lastIndex = 0;\n                              var match = pattern.exec(str);\n                            }\n                            if (!match) {\n                              continue;\n                            }\n                            if (lookbehind) {\n                              lookbehindLength = match[1] ? match[1].length : 0;\n                            }\n                            var from = match.index + lookbehindLength, matchStr = match[0].slice(lookbehindLength), to = from + matchStr.length, before = str.slice(0, from), after = str.slice(to);\n                            var reach = pos + str.length;\n                            if (rematch && reach > rematch.reach) {\n                              rematch.reach = reach;\n                            }\n                            var removeFrom = currentNode.prev;\n                            if (before) {\n                              removeFrom = addAfter(tokenList, removeFrom, before);\n                              pos += before.length;\n                            }\n                            removeRange(tokenList, removeFrom, removeCount);\n                            var wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n                            currentNode = addAfter(tokenList, removeFrom, wrapped);\n                            if (after) {\n                              addAfter(tokenList, currentNode, after);\n                            }\n                            if (removeCount > 1) {\n                              matchGrammar(text, tokenList, grammar, currentNode.prev, pos, {\n                                cause: token + ',' + j,\n                                reach: reach\n                              });\n                            }\n                          }\n                        }\n                      }\n                    }\n                    function LinkedList() {\n                      var head = {\n                        value: null,\n                        prev: null,\n                        next: null\n                      };\n                      var tail = {\n                        value: null,\n                        prev: head,\n                        next: null\n                      };\n                      head.next = tail;\n                      this.head = head;\n                      this.tail = tail;\n                      this.length = 0;\n                    }\n                    function addAfter(list, node, value) {\n                      var next = node.next;\n                      var newNode = {\n                        value: value,\n                        prev: node,\n                        next: next\n                      };\n                      node.next = newNode;\n                      next.prev = newNode;\n                      list.length++;\n                      return newNode;\n                    }\n                    function removeRange(list, node, count) {\n                      var next = node.next;\n                      for (var i = 0; i < count && next !== list.tail; i++) {\n                        next = next.next;\n                      }\n                      node.next = next;\n                      next.prev = node;\n                      list.length -= i;\n                    }\n                    function toArray(list) {\n                      var array = [];\n                      var node = list.head.next;\n                      while (node !== list.tail) {\n                        array.push(node.value);\n                        node = node.next;\n                      }\n                      return array;\n                    }\n                    if (!_self.document) {\n                      if (!_self.addEventListener) {\n                        return _;\n                      }\n                      if (!_.disableWorkerMessageHandler) {\n                        _self.addEventListener('message', function (evt) {\n                          var message = JSON.parse(evt.data), lang = message.language, code = message.code, immediateClose = message.immediateClose;\n                          _self.postMessage(_.highlight(code, _.languages[lang], lang));\n                          if (immediateClose) {\n                            _self.close();\n                          }\n                        }, false);\n                      }\n                      return _;\n                    }\n                    var script = _.util.currentScript();\n                    if (script) {\n                      _.filename = script.src;\n                      if (script.hasAttribute('data-manual')) {\n                        _.manual = true;\n                      }\n                    }\n                    function highlightAutomaticallyCallback() {\n                      if (!_.manual) {\n                        _.highlightAll();\n                      }\n                    }\n                    if (!_.manual) {\n                      var readyState = document.readyState;\n                      if (readyState === 'loading' || readyState === 'interactive' && script && script.defer) {\n                        document.addEventListener('DOMContentLoaded', highlightAutomaticallyCallback);\n                      } else {\n                        if (window.requestAnimationFrame) {\n                          window.requestAnimationFrame(highlightAutomaticallyCallback);\n                        } else {\n                          window.setTimeout(highlightAutomaticallyCallback, 16);\n                        }\n                      }\n                    }\n                    return _;\n                  }(_self);\n                  if (typeof module !== 'undefined' && module.exports) {\n                    module.exports = Prism;\n                  }\n                  if (typeof global !== 'undefined') {\n                    global.Prism = Prism;\n                  }\n                }.call(this));\n              }.call(this, typeof global$2 !== 'undefined' ? global$2 : typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : {}));\n            },\n            {}\n          ],\n          4: [\n            function (require, module, exports) {\n              (function (Prism) {\n                var keyword = /\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char8_t|char16_t|char32_t|class|compl|concept|const|consteval|constexpr|constinit|const_cast|continue|co_await|co_return|co_yield|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|float|for|friend|goto|if|inline|int|int8_t|int16_t|int32_t|int64_t|uint8_t|uint16_t|uint32_t|uint64_t|long|mutable|namespace|new|noexcept|nullptr|operator|private|protected|public|register|reinterpret_cast|requires|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/;\n                Prism.languages.cpp = Prism.languages.extend('c', {\n                  'class-name': [\n                    {\n                      pattern: RegExp(/(\\b(?:class|concept|enum|struct|typename)\\s+)(?!<keyword>)\\w+/.source.replace(/<keyword>/g, function () {\n                        return keyword.source;\n                      })),\n                      lookbehind: true\n                    },\n                    /\\b[A-Z]\\w*(?=\\s*::\\s*\\w+\\s*\\()/,\n                    /\\b[A-Z_]\\w*(?=\\s*::\\s*~\\w+\\s*\\()/i,\n                    /\\w+(?=\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>\\s*::\\s*\\w+\\s*\\()/\n                  ],\n                  'keyword': keyword,\n                  'number': {\n                    pattern: /(?:\\b0b[01']+|\\b0x(?:[\\da-f']+\\.?[\\da-f']*|\\.[\\da-f']+)(?:p[+-]?[\\d']+)?|(?:\\b[\\d']+\\.?[\\d']*|\\B\\.[\\d']+)(?:e[+-]?[\\d']+)?)[ful]*/i,\n                    greedy: true\n                  },\n                  'operator': />>=?|<<=?|->|([-+&|:])\\1|[?:~]|<=>|[-+*/%&|^!=<>]=?|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/,\n                  'boolean': /\\b(?:true|false)\\b/\n                });\n                Prism.languages.insertBefore('cpp', 'string', {\n                  'raw-string': {\n                    pattern: /R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,\n                    alias: 'string',\n                    greedy: true\n                  }\n                });\n                Prism.languages.insertBefore('cpp', 'class-name', {\n                  'base-clause': {\n                    pattern: /(\\b(?:class|struct)\\s+\\w+\\s*:\\s*)(?:[^;{}\"'])+?(?=\\s*[;{])/,\n                    lookbehind: true,\n                    greedy: true,\n                    inside: Prism.languages.extend('cpp', {})\n                  }\n                });\n                Prism.languages.insertBefore('inside', 'operator', { 'class-name': /\\b[a-z_]\\w*\\b(?!\\s*::)/i }, Prism.languages.cpp['base-clause']);\n              }(Prism));\n            },\n            {}\n          ],\n          5: [\n            function (require, module, exports) {\n              (function (Prism) {\n                function replace(pattern, replacements) {\n                  return pattern.replace(/<<(\\d+)>>/g, function (m, index) {\n                    return '(?:' + replacements[+index] + ')';\n                  });\n                }\n                function re(pattern, replacements, flags) {\n                  return RegExp(replace(pattern, replacements), flags || '');\n                }\n                function nested(pattern, depthLog2) {\n                  for (var i = 0; i < depthLog2; i++) {\n                    pattern = pattern.replace(/<<self>>/g, function () {\n                      return '(?:' + pattern + ')';\n                    });\n                  }\n                  return pattern.replace(/<<self>>/g, '[^\\\\s\\\\S]');\n                }\n                var keywordKinds = {\n                  type: 'bool byte char decimal double dynamic float int long object sbyte short string uint ulong ushort var void',\n                  typeDeclaration: 'class enum interface struct',\n                  contextual: 'add alias and ascending async await by descending from get global group into join let nameof not notnull on or orderby partial remove select set unmanaged value when where where',\n                  other: 'abstract as base break case catch checked const continue default delegate do else event explicit extern finally fixed for foreach goto if implicit in internal is lock namespace new null operator out override params private protected public readonly ref return sealed sizeof stackalloc static switch this throw try typeof unchecked unsafe using virtual volatile while yield'\n                };\n                function keywordsToPattern(words) {\n                  return '\\\\b(?:' + words.trim().replace(/ /g, '|') + ')\\\\b';\n                }\n                var typeDeclarationKeywords = keywordsToPattern(keywordKinds.typeDeclaration);\n                var keywords = RegExp(keywordsToPattern(keywordKinds.type + ' ' + keywordKinds.typeDeclaration + ' ' + keywordKinds.contextual + ' ' + keywordKinds.other));\n                var nonTypeKeywords = keywordsToPattern(keywordKinds.typeDeclaration + ' ' + keywordKinds.contextual + ' ' + keywordKinds.other);\n                var nonContextualKeywords = keywordsToPattern(keywordKinds.type + ' ' + keywordKinds.typeDeclaration + ' ' + keywordKinds.other);\n                var generic = nested(/<(?:[^<>;=+\\-*/%&|^]|<<self>>)*>/.source, 2);\n                var nestedRound = nested(/\\((?:[^()]|<<self>>)*\\)/.source, 2);\n                var name = /@?\\b[A-Za-z_]\\w*\\b/.source;\n                var genericName = replace(/<<0>>(?:\\s*<<1>>)?/.source, [\n                  name,\n                  generic\n                ]);\n                var identifier = replace(/(?!<<0>>)<<1>>(?:\\s*\\.\\s*<<1>>)*/.source, [\n                  nonTypeKeywords,\n                  genericName\n                ]);\n                var array = /\\[\\s*(?:,\\s*)*\\]/.source;\n                var typeExpressionWithoutTuple = replace(/<<0>>(?:\\s*(?:\\?\\s*)?<<1>>)*(?:\\s*\\?)?/.source, [\n                  identifier,\n                  array\n                ]);\n                var tupleElement = replace(/[^,()<>[\\];=+\\-*/%&|^]|<<0>>|<<1>>|<<2>>/.source, [\n                  generic,\n                  nestedRound,\n                  array\n                ]);\n                var tuple = replace(/\\(<<0>>+(?:,<<0>>+)+\\)/.source, [tupleElement]);\n                var typeExpression = replace(/(?:<<0>>|<<1>>)(?:\\s*(?:\\?\\s*)?<<2>>)*(?:\\s*\\?)?/.source, [\n                  tuple,\n                  identifier,\n                  array\n                ]);\n                var typeInside = {\n                  'keyword': keywords,\n                  'punctuation': /[<>()?,.:[\\]]/\n                };\n                var character = /'(?:[^\\r\\n'\\\\]|\\\\.|\\\\[Uux][\\da-fA-F]{1,8})'/.source;\n                var regularString = /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/.source;\n                var verbatimString = /@\"(?:\"\"|\\\\[\\s\\S]|[^\\\\\"])*\"(?!\")/.source;\n                Prism.languages.csharp = Prism.languages.extend('clike', {\n                  'string': [\n                    {\n                      pattern: re(/(^|[^$\\\\])<<0>>/.source, [verbatimString]),\n                      lookbehind: true,\n                      greedy: true\n                    },\n                    {\n                      pattern: re(/(^|[^@$\\\\])<<0>>/.source, [regularString]),\n                      lookbehind: true,\n                      greedy: true\n                    },\n                    {\n                      pattern: RegExp(character),\n                      greedy: true,\n                      alias: 'character'\n                    }\n                  ],\n                  'class-name': [\n                    {\n                      pattern: re(/(\\busing\\s+static\\s+)<<0>>(?=\\s*;)/.source, [identifier]),\n                      lookbehind: true,\n                      inside: typeInside\n                    },\n                    {\n                      pattern: re(/(\\busing\\s+<<0>>\\s*=\\s*)<<1>>(?=\\s*;)/.source, [\n                        name,\n                        typeExpression\n                      ]),\n                      lookbehind: true,\n                      inside: typeInside\n                    },\n                    {\n                      pattern: re(/(\\busing\\s+)<<0>>(?=\\s*=)/.source, [name]),\n                      lookbehind: true\n                    },\n                    {\n                      pattern: re(/(\\b<<0>>\\s+)<<1>>/.source, [\n                        typeDeclarationKeywords,\n                        genericName\n                      ]),\n                      lookbehind: true,\n                      inside: typeInside\n                    },\n                    {\n                      pattern: re(/(\\bcatch\\s*\\(\\s*)<<0>>/.source, [identifier]),\n                      lookbehind: true,\n                      inside: typeInside\n                    },\n                    {\n                      pattern: re(/(\\bwhere\\s+)<<0>>/.source, [name]),\n                      lookbehind: true\n                    },\n                    {\n                      pattern: re(/(\\b(?:is(?:\\s+not)?|as)\\s+)<<0>>/.source, [typeExpressionWithoutTuple]),\n                      lookbehind: true,\n                      inside: typeInside\n                    },\n                    {\n                      pattern: re(/\\b<<0>>(?=\\s+(?!<<1>>)<<2>>(?:\\s*[=,;:{)\\]]|\\s+(?:in|when)\\b))/.source, [\n                        typeExpression,\n                        nonContextualKeywords,\n                        name\n                      ]),\n                      inside: typeInside\n                    }\n                  ],\n                  'keyword': keywords,\n                  'number': /(?:\\b0(?:x[\\da-f_]*[\\da-f]|b[01_]*[01])|(?:\\B\\.\\d+(?:_+\\d+)*|\\b\\d+(?:_+\\d+)*(?:\\.\\d+(?:_+\\d+)*)?)(?:e[-+]?\\d+(?:_+\\d+)*)?)(?:ul|lu|[dflmu])?\\b/i,\n                  'operator': />>=?|<<=?|[-=]>|([-+&|])\\1|~|\\?\\?=?|[-+*/%&|^!=<>]=?/,\n                  'punctuation': /\\?\\.?|::|[{}[\\];(),.:]/\n                });\n                Prism.languages.insertBefore('csharp', 'number', {\n                  'range': {\n                    pattern: /\\.\\./,\n                    alias: 'operator'\n                  }\n                });\n                Prism.languages.insertBefore('csharp', 'punctuation', {\n                  'named-parameter': {\n                    pattern: re(/([(,]\\s*)<<0>>(?=\\s*:)/.source, [name]),\n                    lookbehind: true,\n                    alias: 'punctuation'\n                  }\n                });\n                Prism.languages.insertBefore('csharp', 'class-name', {\n                  'namespace': {\n                    pattern: re(/(\\b(?:namespace|using)\\s+)<<0>>(?:\\s*\\.\\s*<<0>>)*(?=\\s*[;{])/.source, [name]),\n                    lookbehind: true,\n                    inside: { 'punctuation': /\\./ }\n                  },\n                  'type-expression': {\n                    pattern: re(/(\\b(?:default|typeof|sizeof)\\s*\\(\\s*)(?:[^()\\s]|\\s(?!\\s*\\))|<<0>>)*(?=\\s*\\))/.source, [nestedRound]),\n                    lookbehind: true,\n                    alias: 'class-name',\n                    inside: typeInside\n                  },\n                  'return-type': {\n                    pattern: re(/<<0>>(?=\\s+(?:<<1>>\\s*(?:=>|[({]|\\.\\s*this\\s*\\[)|this\\s*\\[))/.source, [\n                      typeExpression,\n                      identifier\n                    ]),\n                    inside: typeInside,\n                    alias: 'class-name'\n                  },\n                  'constructor-invocation': {\n                    pattern: re(/(\\bnew\\s+)<<0>>(?=\\s*[[({])/.source, [typeExpression]),\n                    lookbehind: true,\n                    inside: typeInside,\n                    alias: 'class-name'\n                  },\n                  'generic-method': {\n                    pattern: re(/<<0>>\\s*<<1>>(?=\\s*\\()/.source, [\n                      name,\n                      generic\n                    ]),\n                    inside: {\n                      'function': re(/^<<0>>/.source, [name]),\n                      'generic': {\n                        pattern: RegExp(generic),\n                        alias: 'class-name',\n                        inside: typeInside\n                      }\n                    }\n                  },\n                  'type-list': {\n                    pattern: re(/\\b((?:<<0>>\\s+<<1>>|where\\s+<<2>>)\\s*:\\s*)(?:<<3>>|<<4>>)(?:\\s*,\\s*(?:<<3>>|<<4>>))*(?=\\s*(?:where|[{;]|=>|$))/.source, [\n                      typeDeclarationKeywords,\n                      genericName,\n                      name,\n                      typeExpression,\n                      keywords.source\n                    ]),\n                    lookbehind: true,\n                    inside: {\n                      'keyword': keywords,\n                      'class-name': {\n                        pattern: RegExp(typeExpression),\n                        greedy: true,\n                        inside: typeInside\n                      },\n                      'punctuation': /,/\n                    }\n                  },\n                  'preprocessor': {\n                    pattern: /(^\\s*)#.*/m,\n                    lookbehind: true,\n                    alias: 'property',\n                    inside: {\n                      'directive': {\n                        pattern: /(\\s*#)\\b(?:define|elif|else|endif|endregion|error|if|line|pragma|region|undef|warning)\\b/,\n                        lookbehind: true,\n                        alias: 'keyword'\n                      }\n                    }\n                  }\n                });\n                var regularStringOrCharacter = regularString + '|' + character;\n                var regularStringCharacterOrComment = replace(/\\/(?![*/])|\\/\\/[^\\r\\n]*[\\r\\n]|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|<<0>>/.source, [regularStringOrCharacter]);\n                var roundExpression = nested(replace(/[^\"'/()]|<<0>>|\\(<<self>>*\\)/.source, [regularStringCharacterOrComment]), 2);\n                var attrTarget = /\\b(?:assembly|event|field|method|module|param|property|return|type)\\b/.source;\n                var attr = replace(/<<0>>(?:\\s*\\(<<1>>*\\))?/.source, [\n                  identifier,\n                  roundExpression\n                ]);\n                Prism.languages.insertBefore('csharp', 'class-name', {\n                  'attribute': {\n                    pattern: re(/((?:^|[^\\s\\w>)?])\\s*\\[\\s*)(?:<<0>>\\s*:\\s*)?<<1>>(?:\\s*,\\s*<<1>>)*(?=\\s*\\])/.source, [\n                      attrTarget,\n                      attr\n                    ]),\n                    lookbehind: true,\n                    greedy: true,\n                    inside: {\n                      'target': {\n                        pattern: re(/^<<0>>(?=\\s*:)/.source, [attrTarget]),\n                        alias: 'keyword'\n                      },\n                      'attribute-arguments': {\n                        pattern: re(/\\(<<0>>*\\)/.source, [roundExpression]),\n                        inside: Prism.languages.csharp\n                      },\n                      'class-name': {\n                        pattern: RegExp(identifier),\n                        inside: { 'punctuation': /\\./ }\n                      },\n                      'punctuation': /[:,]/\n                    }\n                  }\n                });\n                var formatString = /:[^}\\r\\n]+/.source;\n                var mInterpolationRound = nested(replace(/[^\"'/()]|<<0>>|\\(<<self>>*\\)/.source, [regularStringCharacterOrComment]), 2);\n                var mInterpolation = replace(/\\{(?!\\{)(?:(?![}:])<<0>>)*<<1>>?\\}/.source, [\n                  mInterpolationRound,\n                  formatString\n                ]);\n                var sInterpolationRound = nested(replace(/[^\"'/()]|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|<<0>>|\\(<<self>>*\\)/.source, [regularStringOrCharacter]), 2);\n                var sInterpolation = replace(/\\{(?!\\{)(?:(?![}:])<<0>>)*<<1>>?\\}/.source, [\n                  sInterpolationRound,\n                  formatString\n                ]);\n                function createInterpolationInside(interpolation, interpolationRound) {\n                  return {\n                    'interpolation': {\n                      pattern: re(/((?:^|[^{])(?:\\{\\{)*)<<0>>/.source, [interpolation]),\n                      lookbehind: true,\n                      inside: {\n                        'format-string': {\n                          pattern: re(/(^\\{(?:(?![}:])<<0>>)*)<<1>>(?=\\}$)/.source, [\n                            interpolationRound,\n                            formatString\n                          ]),\n                          lookbehind: true,\n                          inside: { 'punctuation': /^:/ }\n                        },\n                        'punctuation': /^\\{|\\}$/,\n                        'expression': {\n                          pattern: /[\\s\\S]+/,\n                          alias: 'language-csharp',\n                          inside: Prism.languages.csharp\n                        }\n                      }\n                    },\n                    'string': /[\\s\\S]+/\n                  };\n                }\n                Prism.languages.insertBefore('csharp', 'string', {\n                  'interpolation-string': [\n                    {\n                      pattern: re(/(^|[^\\\\])(?:\\$@|@\\$)\"(?:\"\"|\\\\[\\s\\S]|\\{\\{|<<0>>|[^\\\\{\"])*\"/.source, [mInterpolation]),\n                      lookbehind: true,\n                      greedy: true,\n                      inside: createInterpolationInside(mInterpolation, mInterpolationRound)\n                    },\n                    {\n                      pattern: re(/(^|[^@\\\\])\\$\"(?:\\\\.|\\{\\{|<<0>>|[^\\\\\"{])*\"/.source, [sInterpolation]),\n                      lookbehind: true,\n                      greedy: true,\n                      inside: createInterpolationInside(sInterpolation, sInterpolationRound)\n                    }\n                  ]\n                });\n              }(Prism));\n              Prism.languages.dotnet = Prism.languages.cs = Prism.languages.csharp;\n            },\n            {}\n          ],\n          6: [\n            function (require, module, exports) {\n              (function (Prism) {\n                var string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n                Prism.languages.css = {\n                  'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n                  'atrule': {\n                    pattern: /@[\\w-]+[\\s\\S]*?(?:;|(?=\\s*\\{))/,\n                    inside: {\n                      'rule': /^@[\\w-]+/,\n                      'selector-function-argument': {\n                        pattern: /(\\bselector\\s*\\((?!\\s*\\))\\s*)(?:[^()]|\\((?:[^()]|\\([^()]*\\))*\\))+?(?=\\s*\\))/,\n                        lookbehind: true,\n                        alias: 'selector'\n                      },\n                      'keyword': {\n                        pattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n                        lookbehind: true\n                      }\n                    }\n                  },\n                  'url': {\n                    pattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n                    greedy: true,\n                    inside: {\n                      'function': /^url/i,\n                      'punctuation': /^\\(|\\)$/,\n                      'string': {\n                        pattern: RegExp('^' + string.source + '$'),\n                        alias: 'url'\n                      }\n                    }\n                  },\n                  'selector': RegExp('[^{}\\\\s](?:[^{};\"\\']|' + string.source + ')*?(?=\\\\s*\\\\{)'),\n                  'string': {\n                    pattern: string,\n                    greedy: true\n                  },\n                  'property': /[-_a-z\\xA0-\\uFFFF][-\\w\\xA0-\\uFFFF]*(?=\\s*:)/i,\n                  'important': /!important\\b/i,\n                  'function': /[-a-z0-9]+(?=\\()/i,\n                  'punctuation': /[(){};:,]/\n                };\n                Prism.languages.css['atrule'].inside.rest = Prism.languages.css;\n                var markup = Prism.languages.markup;\n                if (markup) {\n                  markup.tag.addInlined('style', 'css');\n                  Prism.languages.insertBefore('inside', 'attr-value', {\n                    'style-attr': {\n                      pattern: /\\s*style=(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/i,\n                      inside: {\n                        'attr-name': {\n                          pattern: /^\\s*style/i,\n                          inside: markup.tag.inside\n                        },\n                        'punctuation': /^\\s*=\\s*['\"]|['\"]\\s*$/,\n                        'attr-value': {\n                          pattern: /.+/i,\n                          inside: Prism.languages.css\n                        }\n                      },\n                      alias: 'language-css'\n                    }\n                  }, markup.tag);\n                }\n              }(Prism));\n            },\n            {}\n          ],\n          7: [\n            function (require, module, exports) {\n              (function (Prism) {\n                var keywords = /\\b(?:abstract|assert|boolean|break|byte|case|catch|char|class|const|continue|default|do|double|else|enum|exports|extends|final|finally|float|for|goto|if|implements|import|instanceof|int|interface|long|module|native|new|null|open|opens|package|private|protected|provides|public|record|requires|return|short|static|strictfp|super|switch|synchronized|this|throw|throws|to|transient|transitive|try|uses|var|void|volatile|while|with|yield)\\b/;\n                var className = /\\b[A-Z](?:\\w*[a-z]\\w*)?\\b/;\n                Prism.languages.java = Prism.languages.extend('clike', {\n                  'class-name': [\n                    className,\n                    /\\b[A-Z]\\w*(?=\\s+\\w+\\s*[;,=())])/\n                  ],\n                  'keyword': keywords,\n                  'function': [\n                    Prism.languages.clike.function,\n                    {\n                      pattern: /(\\:\\:)[a-z_]\\w*/,\n                      lookbehind: true\n                    }\n                  ],\n                  'number': /\\b0b[01][01_]*L?\\b|\\b0x[\\da-f_]*\\.?[\\da-f_p+-]+\\b|(?:\\b\\d[\\d_]*\\.?[\\d_]*|\\B\\.\\d[\\d_]*)(?:e[+-]?\\d[\\d_]*)?[dfl]?/i,\n                  'operator': {\n                    pattern: /(^|[^.])(?:<<=?|>>>?=?|->|--|\\+\\+|&&|\\|\\||::|[?:~]|[-+*/%&|^!=<>]=?)/m,\n                    lookbehind: true\n                  }\n                });\n                Prism.languages.insertBefore('java', 'string', {\n                  'triple-quoted-string': {\n                    pattern: /\"\"\"[ \\t]*[\\r\\n](?:(?:\"|\"\")?(?:\\\\.|[^\"\\\\]))*\"\"\"/,\n                    greedy: true,\n                    alias: 'string'\n                  }\n                });\n                Prism.languages.insertBefore('java', 'class-name', {\n                  'annotation': {\n                    alias: 'punctuation',\n                    pattern: /(^|[^.])@\\w+/,\n                    lookbehind: true\n                  },\n                  'namespace': {\n                    pattern: RegExp(/(\\b(?:exports|import(?:\\s+static)?|module|open|opens|package|provides|requires|to|transitive|uses|with)\\s+)(?!<keyword>)[a-z]\\w*(?:\\.[a-z]\\w*)*\\.?/.source.replace(/<keyword>/g, function () {\n                      return keywords.source;\n                    })),\n                    lookbehind: true,\n                    inside: { 'punctuation': /\\./ }\n                  },\n                  'generics': {\n                    pattern: /<(?:[\\w\\s,.&?]|<(?:[\\w\\s,.&?]|<(?:[\\w\\s,.&?]|<[\\w\\s,.&?]*>)*>)*>)*>/,\n                    inside: {\n                      'class-name': className,\n                      'keyword': keywords,\n                      'punctuation': /[<>(),.:]/,\n                      'operator': /[?&|]/\n                    }\n                  }\n                });\n              }(Prism));\n            },\n            {}\n          ],\n          8: [\n            function (require, module, exports) {\n              Prism.languages.javascript = Prism.languages.extend('clike', {\n                'class-name': [\n                  Prism.languages.clike['class-name'],\n                  {\n                    pattern: /(^|[^$\\w\\xA0-\\uFFFF])[_$A-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\.(?:prototype|constructor))/,\n                    lookbehind: true\n                  }\n                ],\n                'keyword': [\n                  {\n                    pattern: /((?:^|})\\s*)(?:catch|finally)\\b/,\n                    lookbehind: true\n                  },\n                  {\n                    pattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|(?:get|set)(?=\\s*[\\[$\\w\\xA0-\\uFFFF])|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n                    lookbehind: true\n                  }\n                ],\n                'number': /\\b(?:(?:0[xX](?:[\\dA-Fa-f](?:_[\\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\\d(?:_\\d)?)+n|NaN|Infinity)\\b|(?:\\b(?:\\d(?:_\\d)?)+\\.?(?:\\d(?:_\\d)?)*|\\B\\.(?:\\d(?:_\\d)?)+)(?:[Ee][+-]?(?:\\d(?:_\\d)?)+)?/,\n                'function': /#?[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n                'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n              });\n              Prism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|interface|extends|implements|instanceof|new)\\s+)[\\w.\\\\]+/;\n              Prism.languages.insertBefore('javascript', 'keyword', {\n                'regex': {\n                  pattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyus]{0,6}(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/,\n                  lookbehind: true,\n                  greedy: true,\n                  inside: {\n                    'regex-source': {\n                      pattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n                      lookbehind: true,\n                      alias: 'language-regex',\n                      inside: Prism.languages.regex\n                    },\n                    'regex-flags': /[a-z]+$/,\n                    'regex-delimiter': /^\\/|\\/$/\n                  }\n                },\n                'function-variable': {\n                  pattern: /#?[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/,\n                  alias: 'function'\n                },\n                'parameter': [\n                  {\n                    pattern: /(function(?:\\s+[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)?\\s*\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\))/,\n                    lookbehind: true,\n                    inside: Prism.languages.javascript\n                  },\n                  {\n                    pattern: /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=>)/i,\n                    inside: Prism.languages.javascript\n                  },\n                  {\n                    pattern: /(\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*=>)/,\n                    lookbehind: true,\n                    inside: Prism.languages.javascript\n                  },\n                  {\n                    pattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*\\{)/,\n                    lookbehind: true,\n                    inside: Prism.languages.javascript\n                  }\n                ],\n                'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n              });\n              Prism.languages.insertBefore('javascript', 'string', {\n                'template-string': {\n                  pattern: /`(?:\\\\[\\s\\S]|\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}|(?!\\${)[^\\\\`])*`/,\n                  greedy: true,\n                  inside: {\n                    'template-punctuation': {\n                      pattern: /^`|`$/,\n                      alias: 'string'\n                    },\n                    'interpolation': {\n                      pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}/,\n                      lookbehind: true,\n                      inside: {\n                        'interpolation-punctuation': {\n                          pattern: /^\\${|}$/,\n                          alias: 'punctuation'\n                        },\n                        rest: Prism.languages.javascript\n                      }\n                    },\n                    'string': /[\\s\\S]+/\n                  }\n                }\n              });\n              if (Prism.languages.markup) {\n                Prism.languages.markup.tag.addInlined('script', 'javascript');\n              }\n              Prism.languages.js = Prism.languages.javascript;\n            },\n            {}\n          ],\n          9: [\n            function (require, module, exports) {\n              (function (Prism) {\n                function getPlaceholder(language, index) {\n                  return '___' + language.toUpperCase() + index + '___';\n                }\n                Object.defineProperties(Prism.languages['markup-templating'] = {}, {\n                  buildPlaceholders: {\n                    value: function (env, language, placeholderPattern, replaceFilter) {\n                      if (env.language !== language) {\n                        return;\n                      }\n                      var tokenStack = env.tokenStack = [];\n                      env.code = env.code.replace(placeholderPattern, function (match) {\n                        if (typeof replaceFilter === 'function' && !replaceFilter(match)) {\n                          return match;\n                        }\n                        var i = tokenStack.length;\n                        var placeholder;\n                        while (env.code.indexOf(placeholder = getPlaceholder(language, i)) !== -1)\n                          ++i;\n                        tokenStack[i] = match;\n                        return placeholder;\n                      });\n                      env.grammar = Prism.languages.markup;\n                    }\n                  },\n                  tokenizePlaceholders: {\n                    value: function (env, language) {\n                      if (env.language !== language || !env.tokenStack) {\n                        return;\n                      }\n                      env.grammar = Prism.languages[language];\n                      var j = 0;\n                      var keys = Object.keys(env.tokenStack);\n                      function walkTokens(tokens) {\n                        for (var i = 0; i < tokens.length; i++) {\n                          if (j >= keys.length) {\n                            break;\n                          }\n                          var token = tokens[i];\n                          if (typeof token === 'string' || token.content && typeof token.content === 'string') {\n                            var k = keys[j];\n                            var t = env.tokenStack[k];\n                            var s = typeof token === 'string' ? token : token.content;\n                            var placeholder = getPlaceholder(language, k);\n                            var index = s.indexOf(placeholder);\n                            if (index > -1) {\n                              ++j;\n                              var before = s.substring(0, index);\n                              var middle = new Prism.Token(language, Prism.tokenize(t, env.grammar), 'language-' + language, t);\n                              var after = s.substring(index + placeholder.length);\n                              var replacement = [];\n                              if (before) {\n                                replacement.push.apply(replacement, walkTokens([before]));\n                              }\n                              replacement.push(middle);\n                              if (after) {\n                                replacement.push.apply(replacement, walkTokens([after]));\n                              }\n                              if (typeof token === 'string') {\n                                tokens.splice.apply(tokens, [\n                                  i,\n                                  1\n                                ].concat(replacement));\n                              } else {\n                                token.content = replacement;\n                              }\n                            }\n                          } else if (token.content) {\n                            walkTokens(token.content);\n                          }\n                        }\n                        return tokens;\n                      }\n                      walkTokens(env.tokens);\n                    }\n                  }\n                });\n              }(Prism));\n            },\n            {}\n          ],\n          10: [\n            function (require, module, exports) {\n              Prism.languages.markup = {\n                'comment': /<!--[\\s\\S]*?-->/,\n                'prolog': /<\\?[\\s\\S]+?\\?>/,\n                'doctype': {\n                  pattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n                  greedy: true,\n                  inside: {\n                    'internal-subset': {\n                      pattern: /(\\[)[\\s\\S]+(?=\\]>$)/,\n                      lookbehind: true,\n                      greedy: true,\n                      inside: null\n                    },\n                    'string': {\n                      pattern: /\"[^\"]*\"|'[^']*'/,\n                      greedy: true\n                    },\n                    'punctuation': /^<!|>$|[[\\]]/,\n                    'doctype-tag': /^DOCTYPE/,\n                    'name': /[^\\s<>'\"]+/\n                  }\n                },\n                'cdata': /<!\\[CDATA\\[[\\s\\S]*?]]>/i,\n                'tag': {\n                  pattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n                  greedy: true,\n                  inside: {\n                    'tag': {\n                      pattern: /^<\\/?[^\\s>\\/]+/,\n                      inside: {\n                        'punctuation': /^<\\/?/,\n                        'namespace': /^[^\\s>\\/:]+:/\n                      }\n                    },\n                    'attr-value': {\n                      pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n                      inside: {\n                        'punctuation': [\n                          {\n                            pattern: /^=/,\n                            alias: 'attr-equals'\n                          },\n                          /\"|'/\n                        ]\n                      }\n                    },\n                    'punctuation': /\\/?>/,\n                    'attr-name': {\n                      pattern: /[^\\s>\\/]+/,\n                      inside: { 'namespace': /^[^\\s>\\/:]+:/ }\n                    }\n                  }\n                },\n                'entity': [\n                  {\n                    pattern: /&[\\da-z]{1,8};/i,\n                    alias: 'named-entity'\n                  },\n                  /&#x?[\\da-f]{1,8};/i\n                ]\n              };\n              Prism.languages.markup['tag'].inside['attr-value'].inside['entity'] = Prism.languages.markup['entity'];\n              Prism.languages.markup['doctype'].inside['internal-subset'].inside = Prism.languages.markup;\n              Prism.hooks.add('wrap', function (env) {\n                if (env.type === 'entity') {\n                  env.attributes['title'] = env.content.replace(/&amp;/, '&');\n                }\n              });\n              Object.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n                value: function addInlined(tagName, lang) {\n                  var includedCdataInside = {};\n                  includedCdataInside['language-' + lang] = {\n                    pattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n                    lookbehind: true,\n                    inside: Prism.languages[lang]\n                  };\n                  includedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n                  var inside = {\n                    'included-cdata': {\n                      pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n                      inside: includedCdataInside\n                    }\n                  };\n                  inside['language-' + lang] = {\n                    pattern: /[\\s\\S]+/,\n                    inside: Prism.languages[lang]\n                  };\n                  var def = {};\n                  def[tagName] = {\n                    pattern: RegExp(/(<__[\\s\\S]*?>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () {\n                      return tagName;\n                    }), 'i'),\n                    lookbehind: true,\n                    greedy: true,\n                    inside: inside\n                  };\n                  Prism.languages.insertBefore('markup', 'cdata', def);\n                }\n              });\n              Prism.languages.html = Prism.languages.markup;\n              Prism.languages.mathml = Prism.languages.markup;\n              Prism.languages.svg = Prism.languages.markup;\n              Prism.languages.xml = Prism.languages.extend('markup', {});\n              Prism.languages.ssml = Prism.languages.xml;\n              Prism.languages.atom = Prism.languages.xml;\n              Prism.languages.rss = Prism.languages.xml;\n            },\n            {}\n          ],\n          11: [\n            function (require, module, exports) {\n              (function (Prism) {\n                Prism.languages.php = Prism.languages.extend('clike', {\n                  'keyword': /\\b(?:__halt_compiler|abstract|and|array|as|break|callable|case|catch|class|clone|const|continue|declare|default|die|do|echo|else|elseif|empty|enddeclare|endfor|endforeach|endif|endswitch|endwhile|eval|exit|extends|final|finally|for|foreach|function|global|goto|if|implements|include|include_once|instanceof|insteadof|interface|isset|list|match|namespace|new|or|parent|print|private|protected|public|require|require_once|return|static|switch|throw|trait|try|unset|use|var|while|xor|yield)\\b/i,\n                  'boolean': {\n                    pattern: /\\b(?:false|true)\\b/i,\n                    alias: 'constant'\n                  },\n                  'constant': [\n                    /\\b[A-Z_][A-Z0-9_]*\\b/,\n                    /\\b(?:null)\\b/i\n                  ],\n                  'comment': {\n                    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n                    lookbehind: true\n                  }\n                });\n                Prism.languages.insertBefore('php', 'string', {\n                  'shell-comment': {\n                    pattern: /(^|[^\\\\])#.*/,\n                    lookbehind: true,\n                    alias: 'comment'\n                  }\n                });\n                Prism.languages.insertBefore('php', 'comment', {\n                  'delimiter': {\n                    pattern: /\\?>$|^<\\?(?:php(?=\\s)|=)?/i,\n                    alias: 'important'\n                  }\n                });\n                Prism.languages.insertBefore('php', 'keyword', {\n                  'variable': /\\$+(?:\\w+\\b|(?={))/i,\n                  'package': {\n                    pattern: /(\\\\|namespace\\s+|use\\s+)[\\w\\\\]+/,\n                    lookbehind: true,\n                    inside: { punctuation: /\\\\/ }\n                  }\n                });\n                Prism.languages.insertBefore('php', 'operator', {\n                  'property': {\n                    pattern: /(->)[\\w]+/,\n                    lookbehind: true\n                  }\n                });\n                var string_interpolation = {\n                  pattern: /{\\$(?:{(?:{[^{}]+}|[^{}]+)}|[^{}])+}|(^|[^\\\\{])\\$+(?:\\w+(?:\\[[^\\r\\n\\[\\]]+\\]|->\\w+)*)/,\n                  lookbehind: true,\n                  inside: Prism.languages.php\n                };\n                Prism.languages.insertBefore('php', 'string', {\n                  'nowdoc-string': {\n                    pattern: /<<<'([^']+)'[\\r\\n](?:.*[\\r\\n])*?\\1;/,\n                    greedy: true,\n                    alias: 'string',\n                    inside: {\n                      'delimiter': {\n                        pattern: /^<<<'[^']+'|[a-z_]\\w*;$/i,\n                        alias: 'symbol',\n                        inside: { 'punctuation': /^<<<'?|[';]$/ }\n                      }\n                    }\n                  },\n                  'heredoc-string': {\n                    pattern: /<<<(?:\"([^\"]+)\"[\\r\\n](?:.*[\\r\\n])*?\\1;|([a-z_]\\w*)[\\r\\n](?:.*[\\r\\n])*?\\2;)/i,\n                    greedy: true,\n                    alias: 'string',\n                    inside: {\n                      'delimiter': {\n                        pattern: /^<<<(?:\"[^\"]+\"|[a-z_]\\w*)|[a-z_]\\w*;$/i,\n                        alias: 'symbol',\n                        inside: { 'punctuation': /^<<<\"?|[\";]$/ }\n                      },\n                      'interpolation': string_interpolation\n                    }\n                  },\n                  'single-quoted-string': {\n                    pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n                    greedy: true,\n                    alias: 'string'\n                  },\n                  'double-quoted-string': {\n                    pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n                    greedy: true,\n                    alias: 'string',\n                    inside: { 'interpolation': string_interpolation }\n                  }\n                });\n                delete Prism.languages.php['string'];\n                Prism.hooks.add('before-tokenize', function (env) {\n                  if (!/<\\?/.test(env.code)) {\n                    return;\n                  }\n                  var phpPattern = /<\\?(?:[^\"'/#]|\\/(?![*/])|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|(?:\\/\\/|#)(?:[^?\\n\\r]|\\?(?!>))*(?=$|\\?>|[\\r\\n])|\\/\\*[\\s\\S]*?(?:\\*\\/|$))*?(?:\\?>|$)/ig;\n                  Prism.languages['markup-templating'].buildPlaceholders(env, 'php', phpPattern);\n                });\n                Prism.hooks.add('after-tokenize', function (env) {\n                  Prism.languages['markup-templating'].tokenizePlaceholders(env, 'php');\n                });\n              }(Prism));\n            },\n            {}\n          ],\n          12: [\n            function (require, module, exports) {\n              Prism.languages.python = {\n                'comment': {\n                  pattern: /(^|[^\\\\])#.*/,\n                  lookbehind: true\n                },\n                'string-interpolation': {\n                  pattern: /(?:f|rf|fr)(?:(\"\"\"|''')[\\s\\S]*?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2)/i,\n                  greedy: true,\n                  inside: {\n                    'interpolation': {\n                      pattern: /((?:^|[^{])(?:{{)*){(?!{)(?:[^{}]|{(?!{)(?:[^{}]|{(?!{)(?:[^{}])+})+})+}/,\n                      lookbehind: true,\n                      inside: {\n                        'format-spec': {\n                          pattern: /(:)[^:(){}]+(?=}$)/,\n                          lookbehind: true\n                        },\n                        'conversion-option': {\n                          pattern: /![sra](?=[:}]$)/,\n                          alias: 'punctuation'\n                        },\n                        rest: null\n                      }\n                    },\n                    'string': /[\\s\\S]+/\n                  }\n                },\n                'triple-quoted-string': {\n                  pattern: /(?:[rub]|rb|br)?(\"\"\"|''')[\\s\\S]*?\\1/i,\n                  greedy: true,\n                  alias: 'string'\n                },\n                'string': {\n                  pattern: /(?:[rub]|rb|br)?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/i,\n                  greedy: true\n                },\n                'function': {\n                  pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\n                  lookbehind: true\n                },\n                'class-name': {\n                  pattern: /(\\bclass\\s+)\\w+/i,\n                  lookbehind: true\n                },\n                'decorator': {\n                  pattern: /(^\\s*)@\\w+(?:\\.\\w+)*/im,\n                  lookbehind: true,\n                  alias: [\n                    'annotation',\n                    'punctuation'\n                  ],\n                  inside: { 'punctuation': /\\./ }\n                },\n                'keyword': /\\b(?:and|as|assert|async|await|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\\b/,\n                'builtin': /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\n                'boolean': /\\b(?:True|False|None)\\b/,\n                'number': /(?:\\b(?=\\d)|\\B(?=\\.))(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*\\.?\\d*|\\.\\d+)(?:e[+-]?\\d+)?j?\\b/i,\n                'operator': /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n                'punctuation': /[{}[\\];(),.:]/\n              };\n              Prism.languages.python['string-interpolation'].inside['interpolation'].inside.rest = Prism.languages.python;\n              Prism.languages.py = Prism.languages.python;\n            },\n            {}\n          ],\n          13: [\n            function (require, module, exports) {\n              (function (Prism) {\n                Prism.languages.ruby = Prism.languages.extend('clike', {\n                  'comment': [\n                    /#.*/,\n                    {\n                      pattern: /^=begin\\s[\\s\\S]*?^=end/m,\n                      greedy: true\n                    }\n                  ],\n                  'class-name': {\n                    pattern: /(\\b(?:class)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n                    lookbehind: true,\n                    inside: { 'punctuation': /[.\\\\]/ }\n                  },\n                  'keyword': /\\b(?:alias|and|BEGIN|begin|break|case|class|def|define_method|defined|do|each|else|elsif|END|end|ensure|extend|for|if|in|include|module|new|next|nil|not|or|prepend|protected|private|public|raise|redo|require|rescue|retry|return|self|super|then|throw|undef|unless|until|when|while|yield)\\b/\n                });\n                var interpolation = {\n                  pattern: /#\\{[^}]+\\}/,\n                  inside: {\n                    'delimiter': {\n                      pattern: /^#\\{|\\}$/,\n                      alias: 'tag'\n                    },\n                    rest: Prism.languages.ruby\n                  }\n                };\n                delete Prism.languages.ruby.function;\n                Prism.languages.insertBefore('ruby', 'keyword', {\n                  'regex': [\n                    {\n                      pattern: RegExp(/%r/.source + '(?:' + [\n                        /([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1[gim]{0,3}/.source,\n                        /\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)[gim]{0,3}/.source,\n                        /\\{(?:[^#{}\\\\]|#(?:\\{[^}]+\\})?|\\\\[\\s\\S])*\\}[gim]{0,3}/.source,\n                        /\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\][gim]{0,3}/.source,\n                        /<(?:[^<>\\\\]|\\\\[\\s\\S])*>[gim]{0,3}/.source\n                      ].join('|') + ')'),\n                      greedy: true,\n                      inside: { 'interpolation': interpolation }\n                    },\n                    {\n                      pattern: /(^|[^/])\\/(?!\\/)(?:\\[[^\\r\\n\\]]+\\]|\\\\.|[^[/\\\\\\r\\n])+\\/[gim]{0,3}(?=\\s*(?:$|[\\r\\n,.;})]))/,\n                      lookbehind: true,\n                      greedy: true\n                    }\n                  ],\n                  'variable': /[@$]+[a-zA-Z_]\\w*(?:[?!]|\\b)/,\n                  'symbol': {\n                    pattern: /(^|[^:]):[a-zA-Z_]\\w*(?:[?!]|\\b)/,\n                    lookbehind: true\n                  },\n                  'method-definition': {\n                    pattern: /(\\bdef\\s+)[\\w.]+/,\n                    lookbehind: true,\n                    inside: {\n                      'function': /\\w+$/,\n                      rest: Prism.languages.ruby\n                    }\n                  }\n                });\n                Prism.languages.insertBefore('ruby', 'number', {\n                  'builtin': /\\b(?:Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Stat|Fixnum|Float|Hash|Integer|IO|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|String|Struct|TMS|Symbol|ThreadGroup|Thread|Time|TrueClass)\\b/,\n                  'constant': /\\b[A-Z]\\w*(?:[?!]|\\b)/\n                });\n                Prism.languages.ruby.string = [\n                  {\n                    pattern: RegExp(/%[qQiIwWxs]?/.source + '(?:' + [\n                      /([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/.source,\n                      /\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)/.source,\n                      /\\{(?:[^#{}\\\\]|#(?:\\{[^}]+\\})?|\\\\[\\s\\S])*\\}/.source,\n                      /\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\]/.source,\n                      /<(?:[^<>\\\\]|\\\\[\\s\\S])*>/.source\n                    ].join('|') + ')'),\n                    greedy: true,\n                    inside: { 'interpolation': interpolation }\n                  },\n                  {\n                    pattern: /(\"|')(?:#\\{[^}]+\\}|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n                    greedy: true,\n                    inside: { 'interpolation': interpolation }\n                  }\n                ];\n                Prism.languages.rb = Prism.languages.ruby;\n              }(Prism));\n            },\n            {}\n          ],\n          14: [\n            function (require, module, exports) {\n              var Prism = require('prismjs/components/prism-core');\n              require('prismjs/components/prism-clike');\n              require('prismjs/components/prism-markup-templating');\n              require('prismjs/components/prism-c');\n              require('prismjs/components/prism-cpp');\n              require('prismjs/components/prism-csharp');\n              require('prismjs/components/prism-css');\n              require('prismjs/components/prism-java');\n              require('prismjs/components/prism-javascript');\n              require('prismjs/components/prism-markup');\n              require('prismjs/components/prism-php');\n              require('prismjs/components/prism-python');\n              require('prismjs/components/prism-ruby');\n              module.exports = { boltExport: Prism };\n            },\n            {\n              'prismjs/components/prism-c': 1,\n              'prismjs/components/prism-clike': 2,\n              'prismjs/components/prism-core': 3,\n              'prismjs/components/prism-cpp': 4,\n              'prismjs/components/prism-csharp': 5,\n              'prismjs/components/prism-css': 6,\n              'prismjs/components/prism-java': 7,\n              'prismjs/components/prism-javascript': 8,\n              'prismjs/components/prism-markup': 10,\n              'prismjs/components/prism-markup-templating': 9,\n              'prismjs/components/prism-php': 11,\n              'prismjs/components/prism-python': 12,\n              'prismjs/components/prism-ruby': 13\n            }\n          ]\n        }, {}, [14])(14);\n      }));\n      var prism = window.Prism;\n      window.Prism = oldprism;\n      return prism;\n    }(undefined, exports$1, module, undefined));\n    var Prism$1 = module.exports.boltExport;\n\n    var getLanguages = function (editor) {\n      return editor.getParam('codesample_languages');\n    };\n    var useGlobalPrismJS = function (editor) {\n      return editor.getParam('codesample_global_prismjs', false, 'boolean');\n    };\n\n    var get$1 = function (editor) {\n      return Global.Prism && useGlobalPrismJS(editor) ? Global.Prism : Prism$1;\n    };\n\n    var getSelectedCodeSample = function (editor) {\n      var node = editor.selection ? editor.selection.getNode() : null;\n      if (isCodeSample(node)) {\n        return Optional.some(node);\n      }\n      return Optional.none();\n    };\n    var insertCodeSample = function (editor, language, code) {\n      editor.undoManager.transact(function () {\n        var node = getSelectedCodeSample(editor);\n        code = global$1.DOM.encode(code);\n        return node.fold(function () {\n          editor.insertContent('<pre id=\"__new\" class=\"language-' + language + '\">' + code + '</pre>');\n          editor.selection.select(editor.$('#__new').removeAttr('id')[0]);\n        }, function (n) {\n          editor.dom.setAttrib(n, 'class', 'language-' + language);\n          n.innerHTML = code;\n          get$1(editor).highlightElement(n);\n          editor.selection.select(n);\n        });\n      });\n    };\n    var getCurrentCode = function (editor) {\n      var node = getSelectedCodeSample(editor);\n      return node.fold(function () {\n        return '';\n      }, function (n) {\n        return n.textContent;\n      });\n    };\n\n    var getLanguages$1 = function (editor) {\n      var defaultLanguages = [\n        {\n          text: 'HTML/XML',\n          value: 'markup'\n        },\n        {\n          text: 'JavaScript',\n          value: 'javascript'\n        },\n        {\n          text: 'CSS',\n          value: 'css'\n        },\n        {\n          text: 'PHP',\n          value: 'php'\n        },\n        {\n          text: 'Ruby',\n          value: 'ruby'\n        },\n        {\n          text: 'Python',\n          value: 'python'\n        },\n        {\n          text: 'Java',\n          value: 'java'\n        },\n        {\n          text: 'C',\n          value: 'c'\n        },\n        {\n          text: 'C#',\n          value: 'csharp'\n        },\n        {\n          text: 'C++',\n          value: 'cpp'\n        }\n      ];\n      var customLanguages = getLanguages(editor);\n      return customLanguages ? customLanguages : defaultLanguages;\n    };\n    var getCurrentLanguage = function (editor, fallback) {\n      var node = getSelectedCodeSample(editor);\n      return node.fold(function () {\n        return fallback;\n      }, function (n) {\n        var matches = n.className.match(/language-(\\w+)/);\n        return matches ? matches[1] : fallback;\n      });\n    };\n\n    var open = function (editor) {\n      var languages = getLanguages$1(editor);\n      var defaultLanguage = head(languages).fold(function () {\n        return '';\n      }, function (l) {\n        return l.value;\n      });\n      var currentLanguage = getCurrentLanguage(editor, defaultLanguage);\n      var currentCode = getCurrentCode(editor);\n      editor.windowManager.open({\n        title: 'Insert/Edit Code Sample',\n        size: 'large',\n        body: {\n          type: 'panel',\n          items: [\n            {\n              type: 'selectbox',\n              name: 'language',\n              label: 'Language',\n              items: languages\n            },\n            {\n              type: 'textarea',\n              name: 'code',\n              label: 'Code view'\n            }\n          ]\n        },\n        buttons: [\n          {\n            type: 'cancel',\n            name: 'cancel',\n            text: 'Cancel'\n          },\n          {\n            type: 'submit',\n            name: 'save',\n            text: 'Save',\n            primary: true\n          }\n        ],\n        initialData: {\n          language: currentLanguage,\n          code: currentCode\n        },\n        onSubmit: function (api) {\n          var data = api.getData();\n          insertCodeSample(editor, data.language, data.code);\n          api.close();\n        }\n      });\n    };\n\n    var register = function (editor) {\n      editor.addCommand('codesample', function () {\n        var node = editor.selection.getNode();\n        if (editor.selection.isCollapsed() || isCodeSample(node)) {\n          open(editor);\n        } else {\n          editor.formatter.toggle('code');\n        }\n      });\n    };\n\n    var setup = function (editor) {\n      var $ = editor.$;\n      editor.on('PreProcess', function (e) {\n        $('pre[contenteditable=false]', e.node).filter(trimArg(isCodeSample)).each(function (idx, elm) {\n          var $elm = $(elm), code = elm.textContent;\n          $elm.attr('class', $.trim($elm.attr('class')));\n          $elm.removeAttr('contentEditable');\n          $elm.empty().append($('<code></code>').each(function () {\n            this.textContent = code;\n          }));\n        });\n      });\n      editor.on('SetContent', function () {\n        var unprocessedCodeSamples = $('pre').filter(trimArg(isCodeSample)).filter(function (idx, elm) {\n          return elm.contentEditable !== 'false';\n        });\n        if (unprocessedCodeSamples.length) {\n          editor.undoManager.transact(function () {\n            unprocessedCodeSamples.each(function (idx, elm) {\n              $(elm).find('br').each(function (idx, elm) {\n                elm.parentNode.replaceChild(editor.getDoc().createTextNode('\\n'), elm);\n              });\n              elm.contentEditable = 'false';\n              elm.innerHTML = editor.dom.encode(elm.textContent);\n              get$1(editor).highlightElement(elm);\n              elm.className = $.trim(elm.className);\n            });\n          });\n        }\n      });\n    };\n\n    var isCodeSampleSelection = function (editor) {\n      var node = editor.selection.getStart();\n      return editor.dom.is(node, 'pre[class*=\"language-\"]');\n    };\n    var register$1 = function (editor) {\n      editor.ui.registry.addToggleButton('codesample', {\n        icon: 'code-sample',\n        tooltip: 'Insert/edit code sample',\n        onAction: function () {\n          return open(editor);\n        },\n        onSetup: function (api) {\n          var nodeChangeHandler = function () {\n            api.setActive(isCodeSampleSelection(editor));\n          };\n          editor.on('NodeChange', nodeChangeHandler);\n          return function () {\n            return editor.off('NodeChange', nodeChangeHandler);\n          };\n        }\n      });\n      editor.ui.registry.addMenuItem('codesample', {\n        text: 'Code sample...',\n        icon: 'code-sample',\n        onAction: function () {\n          return open(editor);\n        }\n      });\n    };\n\n    function Plugin () {\n      global.add('codesample', function (editor) {\n        setup(editor);\n        register$1(editor);\n        register(editor);\n        editor.on('dblclick', function (ev) {\n          if (isCodeSample(ev.target)) {\n            open(editor);\n          }\n        });\n      });\n    }\n\n    Plugin();\n\n}());\n"]}